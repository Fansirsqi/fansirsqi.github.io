<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Windows 0x80190001错误</title>
    <url>/2023/11/01/0x80190001/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h2 id="Windows-0x80190001错误"><a href="#Windows-0x80190001错误" class="headerlink" title="Windows 0x80190001错误"></a>Windows 0x80190001错误</h2><p><code>PlanA</code></p>
<p>1、使用windows的搜索功能（或直接使用快捷键win+s），输入cmd，会出现命令行提示符，右键选择管理员身份运行；</p>
<span id="more"></span>

<p>2、在弹出的命令框内输入：<code>netsh int ip reset</code>，按下回车键即可；<br>3、在命令框继续输入：<code>netsh winsock reset</code>，按下回车键以重置网络，此时需要重启你的计算机，重新启动之后看是否恢复正常，若还存在0x80190001这样的错误，请继续按以下步骤进行；<br>4、打开windows设置，选择网络和 <code>Internet</code> &gt; <code>以太网</code> &gt; <code>网络和共享中心</code>；</p>
<h3 id="PlanB"><a href="#PlanB" class="headerlink" title="PlanB"></a><code>PlanB</code></h3><p>打开Fiddler，左上角 <code>winconfig</code>把回环都他妈打开再试试</p>
]]></content>
      <categories>
        <category>Windows</category>
      </categories>
      <tags>
        <tag>2149122049</tag>
      </tags>
  </entry>
  <entry>
    <title>Android SDK Manager用法</title>
    <url>/2022/12/19/android-sdk-manager-yong-fa/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>下载工具包解压</p>
<h2 id="配置目录"><a href="#配置目录" class="headerlink" title="配置目录"></a>配置目录</h2><p>大致目录结构如下</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">└─cmdline-tools
    ├─bin
    ├─lib
 ├─NOTICE.txt
 └─source.properties<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>确定好君放置 <code>Android_SDK</code>的目录</p>
<span id="more"></span>

<p>譬如我在 <code>D</code>盘根目录新建文件夹 <code>D:/ANDROID_SDK</code><br>然后把 <code>cmdline-tools</code>这个文件夹移动到 <code>D:/ANDROID_SDK</code>里面</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">└─ANDROID_SDK
 └─cmdline-tools
     ├─bin
     ├─lib
  ├─NOTICE.txt
  └─source.properties<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>很好，现在在 <code>cmdline-tools</code>里创建一个文件夹 <code>latest</code><br>并且把 <code>cmdline-tools</code>里的除 <code>latest</code>全部放进 <code>latest</code>（这听上去可能有点拗口，或者别扭）<br>现在目录结构是这样的</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">└─ANDROID_SDK
 └─cmdline-tools
  └─latest
      ├─bin
      ├─lib
   ├─NOTICE.txt
   └─source.properties<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>完成以上步骤就完成了一半了吧也许</p>
<h2 id="设置环境变量"><a href="#设置环境变量" class="headerlink" title="设置环境变量"></a>设置环境变量</h2><p>进入到 <code>bin</code>目录复制这个目录 <code>D:\Android_SDK\cmdline-tools\latest\bin</code><br>按住 <code>Win+S</code>搜索环境变量<br>分别配置用户与系统的 <code>Path</code>变量，点编辑，新建，然后粘贴，保存<br>如果一路顺利的话，回到桌面，按住 <code>WIN+R</code>输入 <code>CMD</code>打开控制台<br>输入 <code>sdkmanager --version</code>看到正常返回版本号就说明环境变量配置成功</p>
<h2 id="使用-sdkmanager命令"><a href="#使用-sdkmanager命令" class="headerlink" title="使用 sdkmanager命令"></a>使用 <code>sdkmanager</code>命令</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">sdkmanager <span class="token parameter variable">--list</span> <span class="token punctuation">[</span>--channel<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">]</span>  <span class="token comment">#列出所有稳定版</span>
<span class="token comment">#[--channel=channel_id] // Channels: 0 (stable), 1 (beta), 2 (dev), or 3 (canary)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<p>这是我的使用示例</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">PS C:<span class="token punctuation">\</span>Users<span class="token punctuation">\</span>admin<span class="token operator">></span> sdkmanager <span class="token parameter variable">--list</span> <span class="token parameter variable">--channel</span><span class="token operator">=</span><span class="token number">0</span>
<span class="token punctuation">[</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">=</span><span class="token punctuation">]</span> <span class="token number">100</span>% Computing updates<span class="token punctuation">..</span>.
Installed packages:
  Path                 <span class="token operator">|</span> Version <span class="token operator">|</span> Description             <span class="token operator">|</span> Location
  -------              <span class="token operator">|</span> ------- <span class="token operator">|</span> -------                 <span class="token operator">|</span> -------
  platforms<span class="token punctuation">;</span>android-31 <span class="token operator">|</span> <span class="token number">1</span>       <span class="token operator">|</span> Android SDK Platform <span class="token number">31</span> <span class="token operator">|</span> platforms<span class="token punctuation">\</span>android-31

Available Packages:
  Path                                                                                     <span class="token operator">|</span> Version      <span class="token operator">|</span> Description
  -------                                                                                  <span class="token operator">|</span> -------      <span class="token operator">|</span> -------
  add-ons<span class="token punctuation">;</span>addon-google_apis-google-15                                                      <span class="token operator">|</span> <span class="token number">3</span>            <span class="token operator">|</span> Google APIs
  add-ons<span class="token punctuation">;</span>addon-google_apis-google-16                                                      <span class="token operator">|</span> <span class="token number">4</span>            <span class="token operator">|</span> Google APIs
  add-ons<span class="token punctuation">;</span>addon-google_apis-google-17                                                      <span class="token operator">|</span> <span class="token number">4</span>            <span class="token operator">|</span> Google APIs
  add-ons<span class="token punctuation">;</span>addon-google_apis-google-18                                                      <span class="token operator">|</span> <span class="token number">4</span>            <span class="token operator">|</span> Google APIs
  add-ons<span class="token punctuation">;</span>addon-google_apis-google-19                                                      <span class="token operator">|</span> <span class="token number">20</span>           <span class="token operator">|</span> Google APIs
  add-ons<span class="token punctuation">;</span>addon-google_apis-google-21                                                      <span class="token operator">|</span> <span class="token number">1</span>            <span class="token operator">|</span> Google APIs
  add-ons<span class="token punctuation">;</span>addon-google_apis-google-22                                                      <span class="token operator">|</span> <span class="token number">1</span>            <span class="token operator">|</span> Google APIs
  add-ons<span class="token punctuation">;</span>addon-google_apis-google-23                                                      <span class="token operator">|</span> <span class="token number">1</span>            <span class="token operator">|</span> Google APIs
  add-ons<span class="token punctuation">;</span>addon-google_apis-google-24                                                      <span class="token operator">|</span> <span class="token number">1</span>            <span class="token operator">|</span> Google APIs
  build-tools<span class="token punctuation">;</span><span class="token number">19.1</span>.0                                                                       <span class="token operator">|</span> <span class="token number">19.1</span>.0       <span class="token operator">|</span> Android SDK Build-Tools <span class="token number">19.1</span>
  build-tools<span class="token punctuation">;</span><span class="token number">20.0</span>.0                                                                       <span class="token operator">|</span> <span class="token number">20.0</span>.0       <span class="token operator">|</span> Android SDK Build-Tools <span class="token number">20</span>
  build-tools<span class="token punctuation">;</span><span class="token number">21.1</span>.2                                                                       <span class="token operator">|</span> <span class="token number">21.1</span>.2       <span class="token operator">|</span> Android SDK Build-Tools <span class="token number">21.1</span>.2
  build-tools<span class="token punctuation">;</span><span class="token number">22.0</span>.1                                                                       <span class="token operator">|</span> <span class="token number">22.0</span>.1       <span class="token operator">|</span> Android SDK Build-Tools <span class="token number">22.0</span>.1
  build-tools<span class="token punctuation">;</span><span class="token number">23.0</span>.1                                                                       <span class="token operator">|</span> <span class="token number">23.0</span>.1       <span class="token operator">|</span> Android SDK Build-Tools <span class="token number">23.0</span>.1
  build-tools<span class="token punctuation">;</span><span class="token number">23.0</span>.2                                                                       <span class="token operator">|</span> <span class="token number">23.0</span>.2       <span class="token operator">|</span> Android SDK Build-Tools <span class="token number">23.0</span>.2
  build-tools<span class="token punctuation">;</span><span class="token number">23.0</span>.3                                                                       <span class="token operator">|</span> <span class="token number">23.0</span>.3       <span class="token operator">|</span> Android SDK Build-Tools <span class="token number">23.0</span>.3
  build-tools<span class="token punctuation">;</span><span class="token number">24.0</span>.0                                                                       <span class="token operator">|</span> <span class="token number">24.0</span>.0       <span class="token operator">|</span> Android SDK Build-Tools <span class="token number">24</span>
  build-tools<span class="token punctuation">;</span><span class="token number">24.0</span>.1                                                                       <span class="token operator">|</span> <span class="token number">24.0</span>.1       <span class="token operator">|</span> Android SDK Build-Tools <span class="token number">24.0</span>.1
  build-tools<span class="token punctuation">;</span><span class="token number">24.0</span>.2                                                                       <span class="token operator">|</span> <span class="token number">24.0</span>.2       <span class="token operator">|</span> Android SDK Build-Tools <span class="token number">24.0</span>.2
  build-tools<span class="token punctuation">;</span><span class="token number">24.0</span>.3                                                                       <span class="token operator">|</span> <span class="token number">24.0</span>.3       <span class="token operator">|</span> Android SDK Build-Tools <span class="token number">24.0</span>.3
  build-tools<span class="token punctuation">;</span><span class="token number">25.0</span>.0                                                                       <span class="token operator">|</span> <span class="token number">25.0</span>.0       <span class="token operator">|</span> Android SDK Build-Tools <span class="token number">25</span>
  build-tools<span class="token punctuation">;</span><span class="token number">25.0</span>.1                                                                       <span class="token operator">|</span> <span class="token number">25.0</span>.1       <span class="token operator">|</span> Android SDK Build-Tools <span class="token number">25.0</span>.1
  build-tools<span class="token punctuation">;</span><span class="token number">25.0</span>.2                                                                       <span class="token operator">|</span> <span class="token number">25.0</span>.2       <span class="token operator">|</span> Android SDK Build-Tools <span class="token number">25.0</span>.2
  build-tools<span class="token punctuation">;</span><span class="token number">25.0</span>.3                                                                       <span class="token operator">|</span> <span class="token number">25.0</span>.3       <span class="token operator">|</span> Android SDK Build-Tools <span class="token number">25.0</span>.3
  build-tools<span class="token punctuation">;</span><span class="token number">26.0</span>.0                                                                       <span class="token operator">|</span> <span class="token number">26.0</span>.0       <span class="token operator">|</span> Android SDK Build-Tools <span class="token number">26</span>
  build-tools<span class="token punctuation">;</span><span class="token number">26.0</span>.1                                                                       <span class="token operator">|</span> <span class="token number">26.0</span>.1       <span class="token operator">|</span> Android SDK Build-Tools <span class="token number">26.0</span>.1
  build-tools<span class="token punctuation">;</span><span class="token number">26.0</span>.2                                                                       <span class="token operator">|</span> <span class="token number">26.0</span>.2       <span class="token operator">|</span> Android SDK Build-Tools <span class="token number">26.0</span>.2
  build-tools<span class="token punctuation">;</span><span class="token number">26.0</span>.3                                                                       <span class="token operator">|</span> <span class="token number">26.0</span>.3       <span class="token operator">|</span> Android SDK Build-Tools <span class="token number">26.0</span>.3
  build-tools<span class="token punctuation">;</span><span class="token number">27.0</span>.0                                                                       <span class="token operator">|</span> <span class="token number">27.0</span>.0       <span class="token operator">|</span> Android SDK Build-Tools <span class="token number">27</span>
  build-tools<span class="token punctuation">;</span><span class="token number">27.0</span>.1                                                                       <span class="token operator">|</span> <span class="token number">27.0</span>.1       <span class="token operator">|</span> Android SDK Build-Tools <span class="token number">27.0</span>.1
  build-tools<span class="token punctuation">;</span><span class="token number">27.0</span>.2                                                                       <span class="token operator">|</span> <span class="token number">27.0</span>.2       <span class="token operator">|</span> Android SDK Build-Tools <span class="token number">27.0</span>.2
  build-tools<span class="token punctuation">;</span><span class="token number">27.0</span>.3                                                                       <span class="token operator">|</span> <span class="token number">27.0</span>.3       <span class="token operator">|</span> Android SDK Build-Tools <span class="token number">27.0</span>.3
  build-tools<span class="token punctuation">;</span><span class="token number">28.0</span>.0                                                                       <span class="token operator">|</span> <span class="token number">28.0</span>.0       <span class="token operator">|</span> Android SDK Build-Tools <span class="token number">28</span>
  build-tools<span class="token punctuation">;</span><span class="token number">28.0</span>.1                                                                       <span class="token operator">|</span> <span class="token number">28.0</span>.1       <span class="token operator">|</span> Android SDK Build-Tools <span class="token number">28.0</span>.1
  build-tools<span class="token punctuation">;</span><span class="token number">28.0</span>.2                                                                       <span class="token operator">|</span> <span class="token number">28.0</span>.2       <span class="token operator">|</span> Android SDK Build-Tools <span class="token number">28.0</span>.2
  build-tools<span class="token punctuation">;</span><span class="token number">28.0</span>.3                                                                       <span class="token operator">|</span> <span class="token number">28.0</span>.3       <span class="token operator">|</span> Android SDK Build-Tools <span class="token number">28.0</span>.3
  build-tools<span class="token punctuation">;</span><span class="token number">29.0</span>.0                                                                       <span class="token operator">|</span> <span class="token number">29.0</span>.0       <span class="token operator">|</span> Android SDK Build-Tools <span class="token number">29</span>
  build-tools<span class="token punctuation">;</span><span class="token number">29.0</span>.1                                                                       <span class="token operator">|</span> <span class="token number">29.0</span>.1       <span class="token operator">|</span> Android SDK Build-Tools <span class="token number">29.0</span>.1
  build-tools<span class="token punctuation">;</span><span class="token number">29.0</span>.2                                                                       <span class="token operator">|</span> <span class="token number">29.0</span>.2       <span class="token operator">|</span> Android SDK Build-Tools <span class="token number">29.0</span>.2
  build-tools<span class="token punctuation">;</span><span class="token number">29.0</span>.3                                                                       <span class="token operator">|</span> <span class="token number">29.0</span>.3       <span class="token operator">|</span> Android SDK Build-Tools <span class="token number">29.0</span>.3
  build-tools<span class="token punctuation">;</span><span class="token number">30.0</span>.0                                                                       <span class="token operator">|</span> <span class="token number">30.0</span>.0       <span class="token operator">|</span> Android SDK Build-Tools <span class="token number">30</span>
  build-tools<span class="token punctuation">;</span><span class="token number">30.0</span>.1                                                                       <span class="token operator">|</span> <span class="token number">30.0</span>.1       <span class="token operator">|</span> Android SDK Build-Tools <span class="token number">30.0</span>.1
  build-tools<span class="token punctuation">;</span><span class="token number">30.0</span>.2                                                                       <span class="token operator">|</span> <span class="token number">30.0</span>.2       <span class="token operator">|</span> Android SDK Build-Tools <span class="token number">30.0</span>.2
  build-tools<span class="token punctuation">;</span><span class="token number">30.0</span>.3                                                                       <span class="token operator">|</span> <span class="token number">30.0</span>.3       <span class="token operator">|</span> Android SDK Build-Tools <span class="token number">30.0</span>.3
  build-tools<span class="token punctuation">;</span><span class="token number">31.0</span>.0                                                                       <span class="token operator">|</span> <span class="token number">31.0</span>.0       <span class="token operator">|</span> Android SDK Build-Tools <span class="token number">31</span>
  build-tools<span class="token punctuation">;</span><span class="token number">32.0</span>.0                                                                       <span class="token operator">|</span> <span class="token number">32.0</span>.0       <span class="token operator">|</span> Android SDK Build-Tools <span class="token number">32</span>
  build-tools<span class="token punctuation">;</span><span class="token number">32.1</span>.0-rc1                                                                   <span class="token operator">|</span> <span class="token number">32.1</span>.0 rc1   <span class="token operator">|</span> Android SDK Build-Tools <span class="token number">32.1</span>-rc1
  build-tools<span class="token punctuation">;</span><span class="token number">33.0</span>.0                                                                       <span class="token operator">|</span> <span class="token number">33.0</span>.0       <span class="token operator">|</span> Android SDK Build-Tools <span class="token number">33</span>
  build-tools<span class="token punctuation">;</span><span class="token number">33.0</span>.1                                                                       <span class="token operator">|</span> <span class="token number">33.0</span>.1       <span class="token operator">|</span> Android SDK Build-Tools <span class="token number">33.0</span>.1
  cmake<span class="token punctuation">;</span><span class="token number">3.10</span>.2.4988404                                                                     <span class="token operator">|</span> <span class="token number">3.10</span>.2       <span class="token operator">|</span> CMake <span class="token number">3.10</span>.2.4988404
  cmake<span class="token punctuation">;</span><span class="token number">3.18</span>.1                                                                             <span class="token operator">|</span> <span class="token number">3.18</span>.1       <span class="token operator">|</span> CMake <span class="token number">3.18</span>.1
  cmake<span class="token punctuation">;</span><span class="token number">3.22</span>.1                                                                             <span class="token operator">|</span> <span class="token number">3.22</span>.1       <span class="token operator">|</span> CMake <span class="token number">3.22</span>.1
  cmake<span class="token punctuation">;</span><span class="token number">3.6</span>.4111459                                                                        <span class="token operator">|</span> <span class="token number">3.6</span>.4111459  <span class="token operator">|</span> CMake <span class="token number">3.6</span>.4111459
  cmdline-tools<span class="token punctuation">;</span><span class="token number">1.0</span>                                                                        <span class="token operator">|</span> <span class="token number">1.0</span>          <span class="token operator">|</span> Android SDK Command-line Tools
  cmdline-tools<span class="token punctuation">;</span><span class="token number">2.1</span>                                                                        <span class="token operator">|</span> <span class="token number">2.1</span>          <span class="token operator">|</span> Android SDK Command-line Tools
  cmdline-tools<span class="token punctuation">;</span><span class="token number">3.0</span>                                                                        <span class="token operator">|</span> <span class="token number">3.0</span>          <span class="token operator">|</span> Android SDK Command-line Tools
  cmdline-tools<span class="token punctuation">;</span><span class="token number">4.0</span>                                                                        <span class="token operator">|</span> <span class="token number">4.0</span>          <span class="token operator">|</span> Android SDK Command-line Tools
  cmdline-tools<span class="token punctuation">;</span><span class="token number">5.0</span>                                                                        <span class="token operator">|</span> <span class="token number">5.0</span>          <span class="token operator">|</span> Android SDK Command-line Tools
  cmdline-tools<span class="token punctuation">;</span><span class="token number">6.0</span>                                                                        <span class="token operator">|</span> <span class="token number">6.0</span>          <span class="token operator">|</span> Android SDK Command-line Tools
  cmdline-tools<span class="token punctuation">;</span><span class="token number">7.0</span>                                                                        <span class="token operator">|</span> <span class="token number">7.0</span>          <span class="token operator">|</span> Android SDK Command-line Tools
  cmdline-tools<span class="token punctuation">;</span><span class="token number">8.0</span>                                                                        <span class="token operator">|</span> <span class="token number">8.0</span>          <span class="token operator">|</span> Android SDK Command-line Tools
  cmdline-tools<span class="token punctuation">;</span>latest                                                                     <span class="token operator">|</span> <span class="token number">8.0</span>          <span class="token operator">|</span> Android SDK Command-line Tools <span class="token punctuation">(</span>latest<span class="token punctuation">)</span>
  emulator                                                                                 <span class="token operator">|</span> <span class="token number">31.3</span>.14      <span class="token operator">|</span> Android Emulator
  extras<span class="token punctuation">;</span>android<span class="token punctuation">;</span>m2repository                                                              <span class="token operator">|</span> <span class="token number">47.0</span>.0       <span class="token operator">|</span> Android Support Repository
  extras<span class="token punctuation">;</span>google<span class="token punctuation">;</span>Android_Emulator_Hypervisor_Driver                                         <span class="token operator">|</span> <span class="token number">1.8</span>.0        <span class="token operator">|</span> Android Emulator Hypervisor Driver <span class="token keyword">for</span> AMD Processors <span class="token punctuation">(</span>installer<span class="token punctuation">)</span>
  extras<span class="token punctuation">;</span>google<span class="token punctuation">;</span>auto                                                                       <span class="token operator">|</span> <span class="token number">2.0</span>          <span class="token operator">|</span> Android Auto Desktop Head Unit Emulator
  extras<span class="token punctuation">;</span>google<span class="token punctuation">;</span>google_play_services                                                       <span class="token operator">|</span> <span class="token number">49</span>           <span class="token operator">|</span> Google Play services
  extras<span class="token punctuation">;</span>google<span class="token punctuation">;</span>instantapps                                                                <span class="token operator">|</span> <span class="token number">1.9</span>.0        <span class="token operator">|</span> Google Play Instant Development SDK
  extras<span class="token punctuation">;</span>google<span class="token punctuation">;</span>m2repository                                                               <span class="token operator">|</span> <span class="token number">58</span>           <span class="token operator">|</span> Google Repository
  extras<span class="token punctuation">;</span>google<span class="token punctuation">;</span>market_apk_expansion                                                       <span class="token operator">|</span> <span class="token number">1</span>            <span class="token operator">|</span> Google Play APK Expansion library
  extras<span class="token punctuation">;</span>google<span class="token punctuation">;</span>market_licensing                                                           <span class="token operator">|</span> <span class="token number">1</span>            <span class="token operator">|</span> Google Play Licensing Library
  extras<span class="token punctuation">;</span>google<span class="token punctuation">;</span>simulators                                                                 <span class="token operator">|</span> <span class="token number">1</span>            <span class="token operator">|</span> Android Auto API Simulators
  extras<span class="token punctuation">;</span>google<span class="token punctuation">;</span>usb_driver                                                                 <span class="token operator">|</span> <span class="token number">13</span>           <span class="token operator">|</span> Google USB Driver
  extras<span class="token punctuation">;</span>google<span class="token punctuation">;</span>webdriver                                                                  <span class="token operator">|</span> <span class="token number">2</span>            <span class="token operator">|</span> Google Web Driver
  extras<span class="token punctuation">;</span>intel<span class="token punctuation">;</span>Hardware_Accelerated_Execution_Manager                                      <span class="token operator">|</span> <span class="token number">7.6</span>.5        <span class="token operator">|</span> Intel x86 Emulator Accelerator <span class="token punctuation">(</span>HAXM installer<span class="token punctuation">)</span>
  extras<span class="token punctuation">;</span>m2repository<span class="token punctuation">;</span>com<span class="token punctuation">;</span>android<span class="token punctuation">;</span>support<span class="token punctuation">;</span>constraint<span class="token punctuation">;</span>constraint-layout-solver<span class="token punctuation">;</span><span class="token number">1.0</span>.0        <span class="token operator">|</span> <span class="token number">1</span>            <span class="token operator">|</span> Solver <span class="token keyword">for</span> ConstraintLayout <span class="token number">1.0</span>.0
  extras<span class="token punctuation">;</span>m2repository<span class="token punctuation">;</span>com<span class="token punctuation">;</span>android<span class="token punctuation">;</span>support<span class="token punctuation">;</span>constraint<span class="token punctuation">;</span>constraint-layout-solver<span class="token punctuation">;</span><span class="token number">1.0</span>.0-alpha4 <span class="token operator">|</span> <span class="token number">1</span>            <span class="token operator">|</span> com.android.support.constraint:constraint-layout-solver:1.0.0-alpha4
  extras<span class="token punctuation">;</span>m2repository<span class="token punctuation">;</span>com<span class="token punctuation">;</span>android<span class="token punctuation">;</span>support<span class="token punctuation">;</span>constraint<span class="token punctuation">;</span>constraint-layout-solver<span class="token punctuation">;</span><span class="token number">1.0</span>.0-alpha8 <span class="token operator">|</span> <span class="token number">1</span>            <span class="token operator">|</span> Solver <span class="token keyword">for</span> ConstraintLayout <span class="token number">1.0</span>.0-alpha8
  extras<span class="token punctuation">;</span>m2repository<span class="token punctuation">;</span>com<span class="token punctuation">;</span>android<span class="token punctuation">;</span>support<span class="token punctuation">;</span>constraint<span class="token punctuation">;</span>constraint-layout-solver<span class="token punctuation">;</span><span class="token number">1.0</span>.0-beta1  <span class="token operator">|</span> <span class="token number">1</span>            <span class="token operator">|</span> Solver <span class="token keyword">for</span> ConstraintLayout <span class="token number">1.0</span>.0-beta1
  extras<span class="token punctuation">;</span>m2repository<span class="token punctuation">;</span>com<span class="token punctuation">;</span>android<span class="token punctuation">;</span>support<span class="token punctuation">;</span>constraint<span class="token punctuation">;</span>constraint-layout-solver<span class="token punctuation">;</span><span class="token number">1.0</span>.0-beta2  <span class="token operator">|</span> <span class="token number">1</span>            <span class="token operator">|</span> Solver <span class="token keyword">for</span> ConstraintLayout <span class="token number">1.0</span>.0-beta2
  extras<span class="token punctuation">;</span>m2repository<span class="token punctuation">;</span>com<span class="token punctuation">;</span>android<span class="token punctuation">;</span>support<span class="token punctuation">;</span>constraint<span class="token punctuation">;</span>constraint-layout-solver<span class="token punctuation">;</span><span class="token number">1.0</span>.0-beta3  <span class="token operator">|</span> <span class="token number">1</span>            <span class="token operator">|</span> Solver <span class="token keyword">for</span> ConstraintLayout <span class="token number">1.0</span>.0-beta3
  extras<span class="token punctuation">;</span>m2repository<span class="token punctuation">;</span>com<span class="token punctuation">;</span>android<span class="token punctuation">;</span>support<span class="token punctuation">;</span>constraint<span class="token punctuation">;</span>constraint-layout-solver<span class="token punctuation">;</span><span class="token number">1.0</span>.0-beta4  <span class="token operator">|</span> <span class="token number">1</span>            <span class="token operator">|</span> Solver <span class="token keyword">for</span> ConstraintLayout <span class="token number">1.0</span>.0-beta4
  extras<span class="token punctuation">;</span>m2repository<span class="token punctuation">;</span>com<span class="token punctuation">;</span>android<span class="token punctuation">;</span>support<span class="token punctuation">;</span>constraint<span class="token punctuation">;</span>constraint-layout-solver<span class="token punctuation">;</span><span class="token number">1.0</span>.0-beta5  <span class="token operator">|</span> <span class="token number">1</span>            <span class="token operator">|</span> Solver <span class="token keyword">for</span> ConstraintLayout <span class="token number">1.0</span>.0-beta5
  extras<span class="token punctuation">;</span>m2repository<span class="token punctuation">;</span>com<span class="token punctuation">;</span>android<span class="token punctuation">;</span>support<span class="token punctuation">;</span>constraint<span class="token punctuation">;</span>constraint-layout-solver<span class="token punctuation">;</span><span class="token number">1.0</span>.1        <span class="token operator">|</span> <span class="token number">1</span>            <span class="token operator">|</span> Solver <span class="token keyword">for</span> ConstraintLayout <span class="token number">1.0</span>.1
  extras<span class="token punctuation">;</span>m2repository<span class="token punctuation">;</span>com<span class="token punctuation">;</span>android<span class="token punctuation">;</span>support<span class="token punctuation">;</span>constraint<span class="token punctuation">;</span>constraint-layout-solver<span class="token punctuation">;</span><span class="token number">1.0</span>.2        <span class="token operator">|</span> <span class="token number">1</span>            <span class="token operator">|</span> Solver <span class="token keyword">for</span> ConstraintLayout <span class="token number">1.0</span>.2
  extras<span class="token punctuation">;</span>m2repository<span class="token punctuation">;</span>com<span class="token punctuation">;</span>android<span class="token punctuation">;</span>support<span class="token punctuation">;</span>constraint<span class="token punctuation">;</span>constraint-layout<span class="token punctuation">;</span><span class="token number">1.0</span>.0               <span class="token operator">|</span> <span class="token number">1</span>            <span class="token operator">|</span> ConstraintLayout <span class="token keyword">for</span> Android <span class="token number">1.0</span>.0
  extras<span class="token punctuation">;</span>m2repository<span class="token punctuation">;</span>com<span class="token punctuation">;</span>android<span class="token punctuation">;</span>support<span class="token punctuation">;</span>constraint<span class="token punctuation">;</span>constraint-layout<span class="token punctuation">;</span><span class="token number">1.0</span>.0-alpha4        <span class="token operator">|</span> <span class="token number">1</span>            <span class="token operator">|</span> com.android.support.constraint:constraint-layout:1.0.0-alpha4
  extras<span class="token punctuation">;</span>m2repository<span class="token punctuation">;</span>com<span class="token punctuation">;</span>android<span class="token punctuation">;</span>support<span class="token punctuation">;</span>constraint<span class="token punctuation">;</span>constraint-layout<span class="token punctuation">;</span><span class="token number">1.0</span>.0-alpha8        <span class="token operator">|</span> <span class="token number">1</span>            <span class="token operator">|</span> ConstraintLayout <span class="token keyword">for</span> Android <span class="token number">1.0</span>.0-alpha8
  extras<span class="token punctuation">;</span>m2repository<span class="token punctuation">;</span>com<span class="token punctuation">;</span>android<span class="token punctuation">;</span>support<span class="token punctuation">;</span>constraint<span class="token punctuation">;</span>constraint-layout<span class="token punctuation">;</span><span class="token number">1.0</span>.0-beta1         <span class="token operator">|</span> <span class="token number">1</span>            <span class="token operator">|</span> ConstraintLayout <span class="token keyword">for</span> Android <span class="token number">1.0</span>.0-beta1
  extras<span class="token punctuation">;</span>m2repository<span class="token punctuation">;</span>com<span class="token punctuation">;</span>android<span class="token punctuation">;</span>support<span class="token punctuation">;</span>constraint<span class="token punctuation">;</span>constraint-layout<span class="token punctuation">;</span><span class="token number">1.0</span>.0-beta2         <span class="token operator">|</span> <span class="token number">1</span>            <span class="token operator">|</span> ConstraintLayout <span class="token keyword">for</span> Android <span class="token number">1.0</span>.0-beta2
  extras<span class="token punctuation">;</span>m2repository<span class="token punctuation">;</span>com<span class="token punctuation">;</span>android<span class="token punctuation">;</span>support<span class="token punctuation">;</span>constraint<span class="token punctuation">;</span>constraint-layout<span class="token punctuation">;</span><span class="token number">1.0</span>.0-beta3         <span class="token operator">|</span> <span class="token number">1</span>            <span class="token operator">|</span> ConstraintLayout <span class="token keyword">for</span> Android <span class="token number">1.0</span>.0-beta3
  extras<span class="token punctuation">;</span>m2repository<span class="token punctuation">;</span>com<span class="token punctuation">;</span>android<span class="token punctuation">;</span>support<span class="token punctuation">;</span>constraint<span class="token punctuation">;</span>constraint-layout<span class="token punctuation">;</span><span class="token number">1.0</span>.0-beta4         <span class="token operator">|</span> <span class="token number">1</span>            <span class="token operator">|</span> ConstraintLayout <span class="token keyword">for</span> Android <span class="token number">1.0</span>.0-beta4
  extras<span class="token punctuation">;</span>m2repository<span class="token punctuation">;</span>com<span class="token punctuation">;</span>android<span class="token punctuation">;</span>support<span class="token punctuation">;</span>constraint<span class="token punctuation">;</span>constraint-layout<span class="token punctuation">;</span><span class="token number">1.0</span>.0-beta5         <span class="token operator">|</span> <span class="token number">1</span>            <span class="token operator">|</span> ConstraintLayout <span class="token keyword">for</span> Android <span class="token number">1.0</span>.0-beta5
  extras<span class="token punctuation">;</span>m2repository<span class="token punctuation">;</span>com<span class="token punctuation">;</span>android<span class="token punctuation">;</span>support<span class="token punctuation">;</span>constraint<span class="token punctuation">;</span>constraint-layout<span class="token punctuation">;</span><span class="token number">1.0</span>.1               <span class="token operator">|</span> <span class="token number">1</span>            <span class="token operator">|</span> ConstraintLayout <span class="token keyword">for</span> Android <span class="token number">1.0</span>.1
  extras<span class="token punctuation">;</span>m2repository<span class="token punctuation">;</span>com<span class="token punctuation">;</span>android<span class="token punctuation">;</span>support<span class="token punctuation">;</span>constraint<span class="token punctuation">;</span>constraint-layout<span class="token punctuation">;</span><span class="token number">1.0</span>.2               <span class="token operator">|</span> <span class="token number">1</span>            <span class="token operator">|</span> ConstraintLayout <span class="token keyword">for</span> Android <span class="token number">1.0</span>.2
  ndk-bundle                                                                               <span class="token operator">|</span> <span class="token number">22.1</span>.7171670 <span class="token operator">|</span> NDK
  ndk<span class="token punctuation">;</span><span class="token number">16.1</span>.4479499                                                                         <span class="token operator">|</span> <span class="token number">16.1</span>.4479499 <span class="token operator">|</span> NDK <span class="token punctuation">(</span>Side by side<span class="token punctuation">)</span> <span class="token number">16.1</span>.4479499
  ndk<span class="token punctuation">;</span><span class="token number">17.2</span>.4988734                                                                         <span class="token operator">|</span> <span class="token number">17.2</span>.4988734 <span class="token operator">|</span> NDK <span class="token punctuation">(</span>Side by side<span class="token punctuation">)</span> <span class="token number">17.2</span>.4988734
  ndk<span class="token punctuation">;</span><span class="token number">18.1</span>.5063045                                                                         <span class="token operator">|</span> <span class="token number">18.1</span>.5063045 <span class="token operator">|</span> NDK <span class="token punctuation">(</span>Side by side<span class="token punctuation">)</span> <span class="token number">18.1</span>.5063045
  ndk<span class="token punctuation">;</span><span class="token number">19.2</span>.5345600                                                                         <span class="token operator">|</span> <span class="token number">19.2</span>.5345600 <span class="token operator">|</span> NDK <span class="token punctuation">(</span>Side by side<span class="token punctuation">)</span> <span class="token number">19.2</span>.5345600
  ndk<span class="token punctuation">;</span><span class="token number">20.0</span>.5594570                                                                         <span class="token operator">|</span> <span class="token number">20.0</span>.5594570 <span class="token operator">|</span> NDK <span class="token punctuation">(</span>Side by side<span class="token punctuation">)</span> <span class="token number">20.0</span>.5594570
  ndk<span class="token punctuation">;</span><span class="token number">20.1</span>.5948944                                                                         <span class="token operator">|</span> <span class="token number">20.1</span>.5948944 <span class="token operator">|</span> NDK <span class="token punctuation">(</span>Side by side<span class="token punctuation">)</span> <span class="token number">20.1</span>.5948944
  ndk<span class="token punctuation">;</span><span class="token number">21.0</span>.6113669                                                                         <span class="token operator">|</span> <span class="token number">21.0</span>.6113669 <span class="token operator">|</span> NDK <span class="token punctuation">(</span>Side by side<span class="token punctuation">)</span> <span class="token number">21.0</span>.6113669
  ndk<span class="token punctuation">;</span><span class="token number">21.1</span>.6352462                                                                         <span class="token operator">|</span> <span class="token number">21.1</span>.6352462 <span class="token operator">|</span> NDK <span class="token punctuation">(</span>Side by side<span class="token punctuation">)</span> <span class="token number">21.1</span>.6352462
  ndk<span class="token punctuation">;</span><span class="token number">21.2</span>.6472646                                                                         <span class="token operator">|</span> <span class="token number">21.2</span>.6472646 <span class="token operator">|</span> NDK <span class="token punctuation">(</span>Side by side<span class="token punctuation">)</span> <span class="token number">21.2</span>.6472646
  ndk<span class="token punctuation">;</span><span class="token number">21.3</span>.6528147                                                                         <span class="token operator">|</span> <span class="token number">21.3</span>.6528147 <span class="token operator">|</span> NDK <span class="token punctuation">(</span>Side by side<span class="token punctuation">)</span> <span class="token number">21.3</span>.6528147
  ndk<span class="token punctuation">;</span><span class="token number">21.4</span>.7075529                                                                         <span class="token operator">|</span> <span class="token number">21.4</span>.7075529 <span class="token operator">|</span> NDK <span class="token punctuation">(</span>Side by side<span class="token punctuation">)</span> <span class="token number">21.4</span>.7075529
  ndk<span class="token punctuation">;</span><span class="token number">22.0</span>.7026061                                                                         <span class="token operator">|</span> <span class="token number">22.0</span>.7026061 <span class="token operator">|</span> NDK <span class="token punctuation">(</span>Side by side<span class="token punctuation">)</span> <span class="token number">22.0</span>.7026061
  ndk<span class="token punctuation">;</span><span class="token number">22.1</span>.7171670                                                                         <span class="token operator">|</span> <span class="token number">22.1</span>.7171670 <span class="token operator">|</span> NDK <span class="token punctuation">(</span>Side by side<span class="token punctuation">)</span> <span class="token number">22.1</span>.7171670
  ndk<span class="token punctuation">;</span><span class="token number">23.0</span>.7599858                                                                         <span class="token operator">|</span> <span class="token number">23.0</span>.7599858 <span class="token operator">|</span> NDK <span class="token punctuation">(</span>Side by side<span class="token punctuation">)</span> <span class="token number">23.0</span>.7599858
  ndk<span class="token punctuation">;</span><span class="token number">23.1</span>.7779620                                                                         <span class="token operator">|</span> <span class="token number">23.1</span>.7779620 <span class="token operator">|</span> NDK <span class="token punctuation">(</span>Side by side<span class="token punctuation">)</span> <span class="token number">23.1</span>.7779620
  ndk<span class="token punctuation">;</span><span class="token number">23.2</span>.8568313                                                                         <span class="token operator">|</span> <span class="token number">23.2</span>.8568313 <span class="token operator">|</span> NDK <span class="token punctuation">(</span>Side by side<span class="token punctuation">)</span> <span class="token number">23.2</span>.8568313
  ndk<span class="token punctuation">;</span><span class="token number">24.0</span>.8215888                                                                         <span class="token operator">|</span> <span class="token number">24.0</span>.8215888 <span class="token operator">|</span> NDK <span class="token punctuation">(</span>Side by side<span class="token punctuation">)</span> <span class="token number">24.0</span>.8215888
  ndk<span class="token punctuation">;</span><span class="token number">25.0</span>.8775105                                                                         <span class="token operator">|</span> <span class="token number">25.0</span>.8775105 <span class="token operator">|</span> NDK <span class="token punctuation">(</span>Side by side<span class="token punctuation">)</span> <span class="token number">25.0</span>.8775105
  ndk<span class="token punctuation">;</span><span class="token number">25.1</span>.8937393                                                                         <span class="token operator">|</span> <span class="token number">25.1</span>.8937393 <span class="token operator">|</span> NDK <span class="token punctuation">(</span>Side by side<span class="token punctuation">)</span> <span class="token number">25.1</span>.8937393
  patcher<span class="token punctuation">;</span>v4                                                                               <span class="token operator">|</span> <span class="token number">1</span>            <span class="token operator">|</span> SDK Patch Applier v4
  platform-tools                                                                           <span class="token operator">|</span> <span class="token number">33.0</span>.3       <span class="token operator">|</span> Android SDK Platform-Tools
  platforms<span class="token punctuation">;</span>android-10                                                                     <span class="token operator">|</span> <span class="token number">2</span>            <span class="token operator">|</span> Android SDK Platform <span class="token number">10</span>
  platforms<span class="token punctuation">;</span>android-11                                                                     <span class="token operator">|</span> <span class="token number">2</span>            <span class="token operator">|</span> Android SDK Platform <span class="token number">11</span>
  platforms<span class="token punctuation">;</span>android-12                                                                     <span class="token operator">|</span> <span class="token number">3</span>            <span class="token operator">|</span> Android SDK Platform <span class="token number">12</span>
  platforms<span class="token punctuation">;</span>android-13                                                                     <span class="token operator">|</span> <span class="token number">1</span>            <span class="token operator">|</span> Android SDK Platform <span class="token number">13</span>
  platforms<span class="token punctuation">;</span>android-14                                                                     <span class="token operator">|</span> <span class="token number">4</span>            <span class="token operator">|</span> Android SDK Platform <span class="token number">14</span>
  platforms<span class="token punctuation">;</span>android-15                                                                     <span class="token operator">|</span> <span class="token number">5</span>            <span class="token operator">|</span> Android SDK Platform <span class="token number">15</span>
  platforms<span class="token punctuation">;</span>android-16                                                                     <span class="token operator">|</span> <span class="token number">5</span>            <span class="token operator">|</span> Android SDK Platform <span class="token number">16</span>
  platforms<span class="token punctuation">;</span>android-17                                                                     <span class="token operator">|</span> <span class="token number">3</span>            <span class="token operator">|</span> Android SDK Platform <span class="token number">17</span>
  platforms<span class="token punctuation">;</span>android-18                                                                     <span class="token operator">|</span> <span class="token number">3</span>            <span class="token operator">|</span> Android SDK Platform <span class="token number">18</span>
  platforms<span class="token punctuation">;</span>android-19                                                                     <span class="token operator">|</span> <span class="token number">4</span>            <span class="token operator">|</span> Android SDK Platform <span class="token number">19</span>
  platforms<span class="token punctuation">;</span>android-20                                                                     <span class="token operator">|</span> <span class="token number">2</span>            <span class="token operator">|</span> Android SDK Platform <span class="token number">20</span>
  platforms<span class="token punctuation">;</span>android-21                                                                     <span class="token operator">|</span> <span class="token number">2</span>            <span class="token operator">|</span> Android SDK Platform <span class="token number">21</span>
  platforms<span class="token punctuation">;</span>android-22                                                                     <span class="token operator">|</span> <span class="token number">2</span>            <span class="token operator">|</span> Android SDK Platform <span class="token number">22</span>
  platforms<span class="token punctuation">;</span>android-23                                                                     <span class="token operator">|</span> <span class="token number">3</span>            <span class="token operator">|</span> Android SDK Platform <span class="token number">23</span>
  platforms<span class="token punctuation">;</span>android-24                                                                     <span class="token operator">|</span> <span class="token number">2</span>            <span class="token operator">|</span> Android SDK Platform <span class="token number">24</span>
  platforms<span class="token punctuation">;</span>android-25                                                                     <span class="token operator">|</span> <span class="token number">3</span>            <span class="token operator">|</span> Android SDK Platform <span class="token number">25</span>
  platforms<span class="token punctuation">;</span>android-26                                                                     <span class="token operator">|</span> <span class="token number">2</span>            <span class="token operator">|</span> Android SDK Platform <span class="token number">26</span>
  platforms<span class="token punctuation">;</span>android-27                                                                     <span class="token operator">|</span> <span class="token number">3</span>            <span class="token operator">|</span> Android SDK Platform <span class="token number">27</span>
  platforms<span class="token punctuation">;</span>android-28                                                                     <span class="token operator">|</span> <span class="token number">6</span>            <span class="token operator">|</span> Android SDK Platform <span class="token number">28</span>
  platforms<span class="token punctuation">;</span>android-29                                                                     <span class="token operator">|</span> <span class="token number">5</span>            <span class="token operator">|</span> Android SDK Platform <span class="token number">29</span>
  platforms<span class="token punctuation">;</span>android-30                                                                     <span class="token operator">|</span> <span class="token number">3</span>            <span class="token operator">|</span> Android SDK Platform <span class="token number">30</span>
  platforms<span class="token punctuation">;</span>android-31                                                                     <span class="token operator">|</span> <span class="token number">1</span>            <span class="token operator">|</span> Android SDK Platform <span class="token number">31</span>
  platforms<span class="token punctuation">;</span>android-32                                                                     <span class="token operator">|</span> <span class="token number">1</span>            <span class="token operator">|</span> Android SDK Platform <span class="token number">32</span>
  platforms<span class="token punctuation">;</span>android-33                                                                     <span class="token operator">|</span> <span class="token number">2</span>            <span class="token operator">|</span> Android SDK Platform <span class="token number">33</span>
  platforms<span class="token punctuation">;</span>android-7                                                                      <span class="token operator">|</span> <span class="token number">3</span>            <span class="token operator">|</span> Android SDK Platform <span class="token number">7</span>
  platforms<span class="token punctuation">;</span>android-8                                                                      <span class="token operator">|</span> <span class="token number">3</span>            <span class="token operator">|</span> Android SDK Platform <span class="token number">8</span>
  platforms<span class="token punctuation">;</span>android-9                                                                      <span class="token operator">|</span> <span class="token number">2</span>            <span class="token operator">|</span> Android SDK Platform <span class="token number">9</span>
  platforms<span class="token punctuation">;</span>android-TiramisuPrivacySandbox                                                 <span class="token operator">|</span> <span class="token number">8</span>            <span class="token operator">|</span> Android SDK Platform TiramisuPrivacySandbox
  skiaparser<span class="token punctuation">;</span><span class="token number">1</span>                                                                             <span class="token operator">|</span> <span class="token number">6</span>            <span class="token operator">|</span> Layout Inspector image server <span class="token keyword">for</span> API <span class="token number">29</span>-30
  skiaparser<span class="token punctuation">;</span><span class="token number">2</span>                                                                             <span class="token operator">|</span> <span class="token number">3</span>            <span class="token operator">|</span> Layout Inspector image server <span class="token keyword">for</span> API S
  skiaparser<span class="token punctuation">;</span><span class="token number">3</span>                                                                             <span class="token operator">|</span> <span class="token number">1</span>            <span class="token operator">|</span> Layout Inspector image server <span class="token keyword">for</span> API <span class="token number">31</span> and T
  sources<span class="token punctuation">;</span>android-15                                                                       <span class="token operator">|</span> <span class="token number">2</span>            <span class="token operator">|</span> Sources <span class="token keyword">for</span> Android <span class="token number">15</span>
  sources<span class="token punctuation">;</span>android-16                                                                       <span class="token operator">|</span> <span class="token number">2</span>            <span class="token operator">|</span> Sources <span class="token keyword">for</span> Android <span class="token number">16</span>
  sources<span class="token punctuation">;</span>android-17                                                                       <span class="token operator">|</span> <span class="token number">1</span>            <span class="token operator">|</span> Sources <span class="token keyword">for</span> Android <span class="token number">17</span>
  sources<span class="token punctuation">;</span>android-18                                                                       <span class="token operator">|</span> <span class="token number">1</span>            <span class="token operator">|</span> Sources <span class="token keyword">for</span> Android <span class="token number">18</span>
  sources<span class="token punctuation">;</span>android-19                                                                       <span class="token operator">|</span> <span class="token number">2</span>            <span class="token operator">|</span> Sources <span class="token keyword">for</span> Android <span class="token number">19</span>
  sources<span class="token punctuation">;</span>android-20                                                                       <span class="token operator">|</span> <span class="token number">1</span>            <span class="token operator">|</span> Sources <span class="token keyword">for</span> Android <span class="token number">20</span>
  sources<span class="token punctuation">;</span>android-21                                                                       <span class="token operator">|</span> <span class="token number">1</span>            <span class="token operator">|</span> Sources <span class="token keyword">for</span> Android <span class="token number">21</span>
  sources<span class="token punctuation">;</span>android-22                                                                       <span class="token operator">|</span> <span class="token number">1</span>            <span class="token operator">|</span> Sources <span class="token keyword">for</span> Android <span class="token number">22</span>
  sources<span class="token punctuation">;</span>android-23                                                                       <span class="token operator">|</span> <span class="token number">1</span>            <span class="token operator">|</span> Sources <span class="token keyword">for</span> Android <span class="token number">23</span>
  sources<span class="token punctuation">;</span>android-24                                                                       <span class="token operator">|</span> <span class="token number">1</span>            <span class="token operator">|</span> Sources <span class="token keyword">for</span> Android <span class="token number">24</span>
  sources<span class="token punctuation">;</span>android-25                                                                       <span class="token operator">|</span> <span class="token number">1</span>            <span class="token operator">|</span> Sources <span class="token keyword">for</span> Android <span class="token number">25</span>
  sources<span class="token punctuation">;</span>android-26                                                                       <span class="token operator">|</span> <span class="token number">1</span>            <span class="token operator">|</span> Sources <span class="token keyword">for</span> Android <span class="token number">26</span>
  sources<span class="token punctuation">;</span>android-27                                                                       <span class="token operator">|</span> <span class="token number">1</span>            <span class="token operator">|</span> Sources <span class="token keyword">for</span> Android <span class="token number">27</span>
  sources<span class="token punctuation">;</span>android-28                                                                       <span class="token operator">|</span> <span class="token number">1</span>            <span class="token operator">|</span> Sources <span class="token keyword">for</span> Android <span class="token number">28</span>
  sources<span class="token punctuation">;</span>android-29                                                                       <span class="token operator">|</span> <span class="token number">1</span>            <span class="token operator">|</span> Sources <span class="token keyword">for</span> Android <span class="token number">29</span>
  sources<span class="token punctuation">;</span>android-30                                                                       <span class="token operator">|</span> <span class="token number">1</span>            <span class="token operator">|</span> Sources <span class="token keyword">for</span> Android <span class="token number">30</span>
  sources<span class="token punctuation">;</span>android-31                                                                       <span class="token operator">|</span> <span class="token number">1</span>            <span class="token operator">|</span> Sources <span class="token keyword">for</span> Android <span class="token number">31</span>
  sources<span class="token punctuation">;</span>android-32                                                                       <span class="token operator">|</span> <span class="token number">1</span>            <span class="token operator">|</span> Sources <span class="token keyword">for</span> Android <span class="token number">32</span>
  sources<span class="token punctuation">;</span>android-33                                                                       <span class="token operator">|</span> <span class="token number">1</span>            <span class="token operator">|</span> Sources <span class="token keyword">for</span> Android <span class="token number">33</span>
  system-images<span class="token punctuation">;</span>android-10<span class="token punctuation">;</span>default<span class="token punctuation">;</span>armeabi-v7a                                             <span class="token operator">|</span> <span class="token number">5</span>            <span class="token operator">|</span> ARM EABI v7a System Image
  system-images<span class="token punctuation">;</span>android-10<span class="token punctuation">;</span>default<span class="token punctuation">;</span>x86                                                     <span class="token operator">|</span> <span class="token number">5</span>            <span class="token operator">|</span> Intel x86 Atom System Image
  system-images<span class="token punctuation">;</span>android-10<span class="token punctuation">;</span>google_apis<span class="token punctuation">;</span>armeabi-v7a                                         <span class="token operator">|</span> <span class="token number">6</span>            <span class="token operator">|</span> Google APIs ARM EABI v7a System Image
  system-images<span class="token punctuation">;</span>android-10<span class="token punctuation">;</span>google_apis<span class="token punctuation">;</span>x86                                                 <span class="token operator">|</span> <span class="token number">6</span>            <span class="token operator">|</span> Google APIs Intel x86 Atom System Image
  system-images<span class="token punctuation">;</span>android-14<span class="token punctuation">;</span>default<span class="token punctuation">;</span>armeabi-v7a                                             <span class="token operator">|</span> <span class="token number">2</span>            <span class="token operator">|</span> ARM EABI v7a System Image
  system-images<span class="token punctuation">;</span>android-15<span class="token punctuation">;</span>default<span class="token punctuation">;</span>armeabi-v7a                                             <span class="token operator">|</span> <span class="token number">5</span>            <span class="token operator">|</span> ARM EABI v7a System Image
  system-images<span class="token punctuation">;</span>android-15<span class="token punctuation">;</span>default<span class="token punctuation">;</span>x86                                                     <span class="token operator">|</span> <span class="token number">7</span>            <span class="token operator">|</span> Intel x86 Atom System Image
  system-images<span class="token punctuation">;</span>android-15<span class="token punctuation">;</span>google_apis<span class="token punctuation">;</span>armeabi-v7a                                         <span class="token operator">|</span> <span class="token number">6</span>            <span class="token operator">|</span> Google APIs ARM EABI v7a System Image
  system-images<span class="token punctuation">;</span>android-15<span class="token punctuation">;</span>google_apis<span class="token punctuation">;</span>x86                                                 <span class="token operator">|</span> <span class="token number">7</span>            <span class="token operator">|</span> Google APIs Intel x86 Atom System Image
  system-images<span class="token punctuation">;</span>android-16<span class="token punctuation">;</span>default<span class="token punctuation">;</span>armeabi-v7a                                             <span class="token operator">|</span> <span class="token number">6</span>            <span class="token operator">|</span> ARM EABI v7a System Image
  system-images<span class="token punctuation">;</span>android-16<span class="token punctuation">;</span>default<span class="token punctuation">;</span>mips                                                    <span class="token operator">|</span> <span class="token number">1</span>            <span class="token operator">|</span> MIPS System Image
  system-images<span class="token punctuation">;</span>android-16<span class="token punctuation">;</span>default<span class="token punctuation">;</span>x86                                                     <span class="token operator">|</span> <span class="token number">7</span>            <span class="token operator">|</span> Intel x86 Atom System Image
  system-images<span class="token punctuation">;</span>android-16<span class="token punctuation">;</span>google_apis<span class="token punctuation">;</span>armeabi-v7a                                         <span class="token operator">|</span> <span class="token number">6</span>            <span class="token operator">|</span> Google APIs ARM EABI v7a System Image
  system-images<span class="token punctuation">;</span>android-16<span class="token punctuation">;</span>google_apis<span class="token punctuation">;</span>x86                                                 <span class="token operator">|</span> <span class="token number">7</span>            <span class="token operator">|</span> Google APIs Intel x86 Atom System Image
  system-images<span class="token punctuation">;</span>android-17<span class="token punctuation">;</span>default<span class="token punctuation">;</span>armeabi-v7a                                             <span class="token operator">|</span> <span class="token number">6</span>            <span class="token operator">|</span> ARM EABI v7a System Image
  system-images<span class="token punctuation">;</span>android-17<span class="token punctuation">;</span>default<span class="token punctuation">;</span>mips                                                    <span class="token operator">|</span> <span class="token number">1</span>            <span class="token operator">|</span> MIPS System Image
  system-images<span class="token punctuation">;</span>android-17<span class="token punctuation">;</span>default<span class="token punctuation">;</span>x86                                                     <span class="token operator">|</span> <span class="token number">7</span>            <span class="token operator">|</span> Intel x86 Atom System Image
  system-images<span class="token punctuation">;</span>android-17<span class="token punctuation">;</span>google_apis<span class="token punctuation">;</span>armeabi-v7a                                         <span class="token operator">|</span> <span class="token number">6</span>            <span class="token operator">|</span> Google APIs ARM EABI v7a System Image
  system-images<span class="token punctuation">;</span>android-17<span class="token punctuation">;</span>google_apis<span class="token punctuation">;</span>x86                                                 <span class="token operator">|</span> <span class="token number">7</span>            <span class="token operator">|</span> Google APIs Intel x86 Atom System Image
  system-images<span class="token punctuation">;</span>android-18<span class="token punctuation">;</span>default<span class="token punctuation">;</span>armeabi-v7a                                             <span class="token operator">|</span> <span class="token number">5</span>            <span class="token operator">|</span> ARM EABI v7a System Image
  system-images<span class="token punctuation">;</span>android-18<span class="token punctuation">;</span>default<span class="token punctuation">;</span>x86                                                     <span class="token operator">|</span> <span class="token number">4</span>            <span class="token operator">|</span> Intel x86 Atom System Image
  system-images<span class="token punctuation">;</span>android-18<span class="token punctuation">;</span>google_apis<span class="token punctuation">;</span>armeabi-v7a                                         <span class="token operator">|</span> <span class="token number">6</span>            <span class="token operator">|</span> Google APIs ARM EABI v7a System Image
  system-images<span class="token punctuation">;</span>android-18<span class="token punctuation">;</span>google_apis<span class="token punctuation">;</span>x86                                                 <span class="token operator">|</span> <span class="token number">6</span>            <span class="token operator">|</span> Google APIs Intel x86 Atom System Image
  system-images<span class="token punctuation">;</span>android-19<span class="token punctuation">;</span>default<span class="token punctuation">;</span>armeabi-v7a                                             <span class="token operator">|</span> <span class="token number">5</span>            <span class="token operator">|</span> ARM EABI v7a System Image
  system-images<span class="token punctuation">;</span>android-19<span class="token punctuation">;</span>default<span class="token punctuation">;</span>x86                                                     <span class="token operator">|</span> <span class="token number">6</span>            <span class="token operator">|</span> Intel x86 Atom System Image
  system-images<span class="token punctuation">;</span>android-19<span class="token punctuation">;</span>google_apis<span class="token punctuation">;</span>armeabi-v7a                                         <span class="token operator">|</span> <span class="token number">40</span>           <span class="token operator">|</span> Google APIs ARM EABI v7a System Image
  system-images<span class="token punctuation">;</span>android-19<span class="token punctuation">;</span>google_apis<span class="token punctuation">;</span>x86                                                 <span class="token operator">|</span> <span class="token number">40</span>           <span class="token operator">|</span> Google APIs Intel x86 Atom System Image
  system-images<span class="token punctuation">;</span>android-21<span class="token punctuation">;</span>android-tv<span class="token punctuation">;</span>armeabi-v7a                                          <span class="token operator">|</span> <span class="token number">3</span>            <span class="token operator">|</span> Android TV ARM EABI v7a System Image
  system-images<span class="token punctuation">;</span>android-21<span class="token punctuation">;</span>android-tv<span class="token punctuation">;</span>x86                                                  <span class="token operator">|</span> <span class="token number">3</span>            <span class="token operator">|</span> Android TV Intel x86 Atom System Image
  system-images<span class="token punctuation">;</span>android-21<span class="token punctuation">;</span>default<span class="token punctuation">;</span>arm64-v8a                                               <span class="token operator">|</span> <span class="token number">4</span>            <span class="token operator">|</span> ARM <span class="token number">64</span> v8a System Image
  system-images<span class="token punctuation">;</span>android-21<span class="token punctuation">;</span>default<span class="token punctuation">;</span>armeabi-v7a                                             <span class="token operator">|</span> <span class="token number">4</span>            <span class="token operator">|</span> ARM EABI v7a System Image
  system-images<span class="token punctuation">;</span>android-21<span class="token punctuation">;</span>default<span class="token punctuation">;</span>x86                                                     <span class="token operator">|</span> <span class="token number">5</span>            <span class="token operator">|</span> Intel x86 Atom System Image
  system-images<span class="token punctuation">;</span>android-21<span class="token punctuation">;</span>default<span class="token punctuation">;</span>x86_64                                                  <span class="token operator">|</span> <span class="token number">5</span>            <span class="token operator">|</span> Intel x86 Atom_64 System Image
  system-images<span class="token punctuation">;</span>android-21<span class="token punctuation">;</span>google_apis<span class="token punctuation">;</span>arm64-v8a                                           <span class="token operator">|</span> <span class="token number">32</span>           <span class="token operator">|</span> Google APIs ARM <span class="token number">64</span> v8a System Image
  system-images<span class="token punctuation">;</span>android-21<span class="token punctuation">;</span>google_apis<span class="token punctuation">;</span>armeabi-v7a                                         <span class="token operator">|</span> <span class="token number">32</span>           <span class="token operator">|</span> Google APIs ARM EABI v7a System Image
  system-images<span class="token punctuation">;</span>android-21<span class="token punctuation">;</span>google_apis<span class="token punctuation">;</span>x86                                                 <span class="token operator">|</span> <span class="token number">32</span>           <span class="token operator">|</span> Google APIs Intel x86 Atom System Image
  system-images<span class="token punctuation">;</span>android-21<span class="token punctuation">;</span>google_apis<span class="token punctuation">;</span>x86_64                                              <span class="token operator">|</span> <span class="token number">32</span>           <span class="token operator">|</span> Google APIs Intel x86 Atom_64 System Image
  system-images<span class="token punctuation">;</span>android-22<span class="token punctuation">;</span>android-tv<span class="token punctuation">;</span>x86                                                  <span class="token operator">|</span> <span class="token number">3</span>            <span class="token operator">|</span> Android TV Intel x86 Atom System Image
  system-images<span class="token punctuation">;</span>android-22<span class="token punctuation">;</span>default<span class="token punctuation">;</span>arm64-v8a                                               <span class="token operator">|</span> <span class="token number">2</span>            <span class="token operator">|</span> ARM <span class="token number">64</span> v8a System Image
  system-images<span class="token punctuation">;</span>android-22<span class="token punctuation">;</span>default<span class="token punctuation">;</span>armeabi-v7a                                             <span class="token operator">|</span> <span class="token number">2</span>            <span class="token operator">|</span> ARM EABI v7a System Image
  system-images<span class="token punctuation">;</span>android-22<span class="token punctuation">;</span>default<span class="token punctuation">;</span>x86                                                     <span class="token operator">|</span> <span class="token number">6</span>            <span class="token operator">|</span> Intel x86 Atom System Image
  system-images<span class="token punctuation">;</span>android-22<span class="token punctuation">;</span>default<span class="token punctuation">;</span>x86_64                                                  <span class="token operator">|</span> <span class="token number">6</span>            <span class="token operator">|</span> Intel x86 Atom_64 System Image
  system-images<span class="token punctuation">;</span>android-22<span class="token punctuation">;</span>google_apis<span class="token punctuation">;</span>arm64-v8a                                           <span class="token operator">|</span> <span class="token number">26</span>           <span class="token operator">|</span> Google APIs ARM <span class="token number">64</span> v8a System Image
  system-images<span class="token punctuation">;</span>android-22<span class="token punctuation">;</span>google_apis<span class="token punctuation">;</span>armeabi-v7a                                         <span class="token operator">|</span> <span class="token number">26</span>           <span class="token operator">|</span> Google APIs ARM EABI v7a System Image
  system-images<span class="token punctuation">;</span>android-22<span class="token punctuation">;</span>google_apis<span class="token punctuation">;</span>x86                                                 <span class="token operator">|</span> <span class="token number">26</span>           <span class="token operator">|</span> Google APIs Intel x86 Atom System Image
  system-images<span class="token punctuation">;</span>android-22<span class="token punctuation">;</span>google_apis<span class="token punctuation">;</span>x86_64                                              <span class="token operator">|</span> <span class="token number">26</span>           <span class="token operator">|</span> Google APIs Intel x86 Atom_64 System Image
  system-images<span class="token punctuation">;</span>android-23<span class="token punctuation">;</span>android-tv<span class="token punctuation">;</span>armeabi-v7a                                          <span class="token operator">|</span> <span class="token number">12</span>           <span class="token operator">|</span> Android TV ARM EABI v7a System Image
  system-images<span class="token punctuation">;</span>android-23<span class="token punctuation">;</span>android-tv<span class="token punctuation">;</span>x86                                                  <span class="token operator">|</span> <span class="token number">21</span>           <span class="token operator">|</span> Android TV Intel x86 Atom System Image
  system-images<span class="token punctuation">;</span>android-23<span class="token punctuation">;</span>default<span class="token punctuation">;</span>arm64-v8a                                               <span class="token operator">|</span> <span class="token number">7</span>            <span class="token operator">|</span> ARM <span class="token number">64</span> v8a System Image
  system-images<span class="token punctuation">;</span>android-23<span class="token punctuation">;</span>default<span class="token punctuation">;</span>armeabi-v7a                                             <span class="token operator">|</span> <span class="token number">6</span>            <span class="token operator">|</span> ARM EABI v7a System Image
  system-images<span class="token punctuation">;</span>android-23<span class="token punctuation">;</span>default<span class="token punctuation">;</span>x86                                                     <span class="token operator">|</span> <span class="token number">10</span>           <span class="token operator">|</span> Intel x86 Atom System Image
  system-images<span class="token punctuation">;</span>android-23<span class="token punctuation">;</span>default<span class="token punctuation">;</span>x86_64                                                  <span class="token operator">|</span> <span class="token number">10</span>           <span class="token operator">|</span> Intel x86 Atom_64 System Image
  system-images<span class="token punctuation">;</span>android-23<span class="token punctuation">;</span>google_apis<span class="token punctuation">;</span>arm64-v8a                                           <span class="token operator">|</span> <span class="token number">33</span>           <span class="token operator">|</span> Google APIs ARM <span class="token number">64</span> v8a System Image
  system-images<span class="token punctuation">;</span>android-23<span class="token punctuation">;</span>google_apis<span class="token punctuation">;</span>armeabi-v7a                                         <span class="token operator">|</span> <span class="token number">33</span>           <span class="token operator">|</span> Google APIs ARM EABI v7a System Image
  system-images<span class="token punctuation">;</span>android-23<span class="token punctuation">;</span>google_apis<span class="token punctuation">;</span>x86                                                 <span class="token operator">|</span> <span class="token number">33</span>           <span class="token operator">|</span> Google APIs Intel x86 Atom System Image
  system-images<span class="token punctuation">;</span>android-23<span class="token punctuation">;</span>google_apis<span class="token punctuation">;</span>x86_64                                              <span class="token operator">|</span> <span class="token number">33</span>           <span class="token operator">|</span> Google APIs Intel x86 Atom_64 System Image
  system-images<span class="token punctuation">;</span>android-24<span class="token punctuation">;</span>android-tv<span class="token punctuation">;</span>x86                                                  <span class="token operator">|</span> <span class="token number">22</span>           <span class="token operator">|</span> Android TV Intel x86 Atom System Image
  system-images<span class="token punctuation">;</span>android-24<span class="token punctuation">;</span>default<span class="token punctuation">;</span>arm64-v8a                                               <span class="token operator">|</span> <span class="token number">9</span>            <span class="token operator">|</span> ARM <span class="token number">64</span> v8a System Image
  system-images<span class="token punctuation">;</span>android-24<span class="token punctuation">;</span>default<span class="token punctuation">;</span>armeabi-v7a                                             <span class="token operator">|</span> <span class="token number">7</span>            <span class="token operator">|</span> ARM EABI v7a System Image
  system-images<span class="token punctuation">;</span>android-24<span class="token punctuation">;</span>default<span class="token punctuation">;</span>x86                                                     <span class="token operator">|</span> <span class="token number">8</span>            <span class="token operator">|</span> Intel x86 Atom System Image
  system-images<span class="token punctuation">;</span>android-24<span class="token punctuation">;</span>default<span class="token punctuation">;</span>x86_64                                                  <span class="token operator">|</span> <span class="token number">8</span>            <span class="token operator">|</span> Intel x86 Atom_64 System Image
  system-images<span class="token punctuation">;</span>android-24<span class="token punctuation">;</span>google_apis<span class="token punctuation">;</span>arm64-v8a                                           <span class="token operator">|</span> <span class="token number">29</span>           <span class="token operator">|</span> Google APIs ARM <span class="token number">64</span> v8a System Image
  system-images<span class="token punctuation">;</span>android-24<span class="token punctuation">;</span>google_apis<span class="token punctuation">;</span>x86                                                 <span class="token operator">|</span> <span class="token number">27</span>           <span class="token operator">|</span> Google APIs Intel x86 Atom System Image
  system-images<span class="token punctuation">;</span>android-24<span class="token punctuation">;</span>google_apis<span class="token punctuation">;</span>x86_64                                              <span class="token operator">|</span> <span class="token number">27</span>           <span class="token operator">|</span> Google APIs Intel x86 Atom_64 System Image
  system-images<span class="token punctuation">;</span>android-24<span class="token punctuation">;</span>google_apis_playstore<span class="token punctuation">;</span>x86                                       <span class="token operator">|</span> <span class="token number">19</span>           <span class="token operator">|</span> Google Play Intel x86 Atom System Image
  system-images<span class="token punctuation">;</span>android-25<span class="token punctuation">;</span>android-tv<span class="token punctuation">;</span>x86                                                  <span class="token operator">|</span> <span class="token number">16</span>           <span class="token operator">|</span> Android TV Intel x86 Atom System Image
  system-images<span class="token punctuation">;</span>android-25<span class="token punctuation">;</span>android-wear-cn<span class="token punctuation">;</span>armeabi-v7a                                     <span class="token operator">|</span> <span class="token number">4</span>            <span class="token operator">|</span> China version of Android Wear ARM EABI v7a System Image
  system-images<span class="token punctuation">;</span>android-25<span class="token punctuation">;</span>android-wear-cn<span class="token punctuation">;</span>x86                                             <span class="token operator">|</span> <span class="token number">4</span>            <span class="token operator">|</span> China version of Android Wear Intel x86 Atom System Image
  system-images<span class="token punctuation">;</span>android-25<span class="token punctuation">;</span>android-wear<span class="token punctuation">;</span>armeabi-v7a                                        <span class="token operator">|</span> <span class="token number">3</span>            <span class="token operator">|</span> Android Wear ARM EABI v7a System Image
  system-images<span class="token punctuation">;</span>android-25<span class="token punctuation">;</span>android-wear<span class="token punctuation">;</span>x86                                                <span class="token operator">|</span> <span class="token number">3</span>            <span class="token operator">|</span> Android Wear Intel x86 Atom System Image
  system-images<span class="token punctuation">;</span>android-25<span class="token punctuation">;</span>default<span class="token punctuation">;</span>arm64-v8a                                               <span class="token operator">|</span> <span class="token number">2</span>            <span class="token operator">|</span> ARM <span class="token number">64</span> v8a System Image
  system-images<span class="token punctuation">;</span>android-25<span class="token punctuation">;</span>default<span class="token punctuation">;</span>x86                                                     <span class="token operator">|</span> <span class="token number">1</span>            <span class="token operator">|</span> Intel x86 Atom System Image
  system-images<span class="token punctuation">;</span>android-25<span class="token punctuation">;</span>default<span class="token punctuation">;</span>x86_64                                                  <span class="token operator">|</span> <span class="token number">1</span>            <span class="token operator">|</span> Intel x86 Atom_64 System Image
  system-images<span class="token punctuation">;</span>android-25<span class="token punctuation">;</span>google_apis<span class="token punctuation">;</span>arm64-v8a                                           <span class="token operator">|</span> <span class="token number">20</span>           <span class="token operator">|</span> Google APIs ARM <span class="token number">64</span> v8a System Image
  system-images<span class="token punctuation">;</span>android-25<span class="token punctuation">;</span>google_apis<span class="token punctuation">;</span>armeabi-v7a                                         <span class="token operator">|</span> <span class="token number">18</span>           <span class="token operator">|</span> Google APIs ARM EABI v7a System Image
  system-images<span class="token punctuation">;</span>android-25<span class="token punctuation">;</span>google_apis<span class="token punctuation">;</span>x86                                                 <span class="token operator">|</span> <span class="token number">18</span>           <span class="token operator">|</span> Google APIs Intel x86 Atom System Image
  system-images<span class="token punctuation">;</span>android-25<span class="token punctuation">;</span>google_apis<span class="token punctuation">;</span>x86_64                                              <span class="token operator">|</span> <span class="token number">18</span>           <span class="token operator">|</span> Google APIs Intel x86 Atom_64 System Image
  system-images<span class="token punctuation">;</span>android-25<span class="token punctuation">;</span>google_apis_playstore<span class="token punctuation">;</span>x86                                       <span class="token operator">|</span> <span class="token number">9</span>            <span class="token operator">|</span> Google Play Intel x86 Atom System Image
  system-images<span class="token punctuation">;</span>android-26<span class="token punctuation">;</span>android-tv<span class="token punctuation">;</span>x86                                                  <span class="token operator">|</span> <span class="token number">14</span>           <span class="token operator">|</span> Android TV Intel x86 Atom System Image
  system-images<span class="token punctuation">;</span>android-26<span class="token punctuation">;</span>android-wear-cn<span class="token punctuation">;</span>x86                                             <span class="token operator">|</span> <span class="token number">4</span>            <span class="token operator">|</span> China version of Android Wear Intel x86 Atom System Image
  system-images<span class="token punctuation">;</span>android-26<span class="token punctuation">;</span>android-wear<span class="token punctuation">;</span>x86                                                <span class="token operator">|</span> <span class="token number">4</span>            <span class="token operator">|</span> Android Wear Intel x86 Atom System Image
  system-images<span class="token punctuation">;</span>android-26<span class="token punctuation">;</span>default<span class="token punctuation">;</span>arm64-v8a                                               <span class="token operator">|</span> <span class="token number">1</span>            <span class="token operator">|</span> ARM <span class="token number">64</span> v8a System Image
  system-images<span class="token punctuation">;</span>android-26<span class="token punctuation">;</span>default<span class="token punctuation">;</span>x86                                                     <span class="token operator">|</span> <span class="token number">1</span>            <span class="token operator">|</span> Intel x86 Atom System Image
  system-images<span class="token punctuation">;</span>android-26<span class="token punctuation">;</span>default<span class="token punctuation">;</span>x86_64                                                  <span class="token operator">|</span> <span class="token number">1</span>            <span class="token operator">|</span> Intel x86 Atom_64 System Image
  system-images<span class="token punctuation">;</span>android-26<span class="token punctuation">;</span>google_apis<span class="token punctuation">;</span>arm64-v8a                                           <span class="token operator">|</span> <span class="token number">1</span>            <span class="token operator">|</span> Google APIs ARM <span class="token number">64</span> v8a System Image
  system-images<span class="token punctuation">;</span>android-26<span class="token punctuation">;</span>google_apis<span class="token punctuation">;</span>x86                                                 <span class="token operator">|</span> <span class="token number">16</span>           <span class="token operator">|</span> Google APIs Intel x86 Atom System Image
  system-images<span class="token punctuation">;</span>android-26<span class="token punctuation">;</span>google_apis<span class="token punctuation">;</span>x86_64                                              <span class="token operator">|</span> <span class="token number">16</span>           <span class="token operator">|</span> Google APIs Intel x86 Atom_64 System Image
  system-images<span class="token punctuation">;</span>android-26<span class="token punctuation">;</span>google_apis_playstore<span class="token punctuation">;</span>x86                                       <span class="token operator">|</span> <span class="token number">7</span>            <span class="token operator">|</span> Google Play Intel x86 Atom System Image
  system-images<span class="token punctuation">;</span>android-27<span class="token punctuation">;</span>android-tv<span class="token punctuation">;</span>x86                                                  <span class="token operator">|</span> <span class="token number">9</span>            <span class="token operator">|</span> Android TV Intel x86 Atom System Image
  system-images<span class="token punctuation">;</span>android-27<span class="token punctuation">;</span>default<span class="token punctuation">;</span>arm64-v8a                                               <span class="token operator">|</span> <span class="token number">1</span>            <span class="token operator">|</span> ARM <span class="token number">64</span> v8a System Image
  system-images<span class="token punctuation">;</span>android-27<span class="token punctuation">;</span>default<span class="token punctuation">;</span>x86                                                     <span class="token operator">|</span> <span class="token number">1</span>            <span class="token operator">|</span> Intel x86 Atom System Image
  system-images<span class="token punctuation">;</span>android-27<span class="token punctuation">;</span>default<span class="token punctuation">;</span>x86_64                                                  <span class="token operator">|</span> <span class="token number">1</span>            <span class="token operator">|</span> Intel x86 Atom_64 System Image
  system-images<span class="token punctuation">;</span>android-27<span class="token punctuation">;</span>google_apis<span class="token punctuation">;</span>arm64-v8a                                           <span class="token operator">|</span> <span class="token number">1</span>            <span class="token operator">|</span> Google APIs ARM <span class="token number">64</span> v8a System Image
  system-images<span class="token punctuation">;</span>android-27<span class="token punctuation">;</span>google_apis<span class="token punctuation">;</span>x86                                                 <span class="token operator">|</span> <span class="token number">11</span>           <span class="token operator">|</span> Google APIs Intel x86 Atom System Image
  system-images<span class="token punctuation">;</span>android-27<span class="token punctuation">;</span>google_apis_playstore<span class="token punctuation">;</span>x86                                       <span class="token operator">|</span> <span class="token number">3</span>            <span class="token operator">|</span> Google Play Intel x86 Atom System Image
  system-images<span class="token punctuation">;</span>android-28<span class="token punctuation">;</span>android-tv<span class="token punctuation">;</span>x86                                                  <span class="token operator">|</span> <span class="token number">10</span>           <span class="token operator">|</span> Android TV Intel x86 Atom System Image
  system-images<span class="token punctuation">;</span>android-28<span class="token punctuation">;</span>android-wear-cn<span class="token punctuation">;</span>x86                                             <span class="token operator">|</span> <span class="token number">9</span>            <span class="token operator">|</span> China version of Wear OS Intel x86 Atom System Image
  system-images<span class="token punctuation">;</span>android-28<span class="token punctuation">;</span>android-wear<span class="token punctuation">;</span>x86                                                <span class="token operator">|</span> <span class="token number">9</span>            <span class="token operator">|</span> Wear OS Intel x86 Atom System Image
  system-images<span class="token punctuation">;</span>android-28<span class="token punctuation">;</span>default<span class="token punctuation">;</span>arm64-v8a                                               <span class="token operator">|</span> <span class="token number">1</span>            <span class="token operator">|</span> ARM <span class="token number">64</span> v8a System Image
  system-images<span class="token punctuation">;</span>android-28<span class="token punctuation">;</span>default<span class="token punctuation">;</span>x86                                                     <span class="token operator">|</span> <span class="token number">4</span>            <span class="token operator">|</span> Intel x86 Atom System Image
  system-images<span class="token punctuation">;</span>android-28<span class="token punctuation">;</span>default<span class="token punctuation">;</span>x86_64                                                  <span class="token operator">|</span> <span class="token number">4</span>            <span class="token operator">|</span> Intel x86 Atom_64 System Image
  system-images<span class="token punctuation">;</span>android-28<span class="token punctuation">;</span>google_apis<span class="token punctuation">;</span>arm64-v8a                                           <span class="token operator">|</span> <span class="token number">1</span>            <span class="token operator">|</span> Google APIs ARM <span class="token number">64</span> v8a System Image
  system-images<span class="token punctuation">;</span>android-28<span class="token punctuation">;</span>google_apis<span class="token punctuation">;</span>x86                                                 <span class="token operator">|</span> <span class="token number">12</span>           <span class="token operator">|</span> Google APIs Intel x86 Atom System Image
  system-images<span class="token punctuation">;</span>android-28<span class="token punctuation">;</span>google_apis<span class="token punctuation">;</span>x86_64                                              <span class="token operator">|</span> <span class="token number">11</span>           <span class="token operator">|</span> Google APIs Intel x86 Atom_64 System Image
  system-images<span class="token punctuation">;</span>android-28<span class="token punctuation">;</span>google_apis_playstore<span class="token punctuation">;</span>arm64-v8a                                 <span class="token operator">|</span> <span class="token number">1</span>            <span class="token operator">|</span> Google ARM64-V8a Play ARM <span class="token number">64</span> v8a System Image
  system-images<span class="token punctuation">;</span>android-28<span class="token punctuation">;</span>google_apis_playstore<span class="token punctuation">;</span>x86                                       <span class="token operator">|</span> <span class="token number">9</span>            <span class="token operator">|</span> Google Play Intel x86 Atom System Image
  system-images<span class="token punctuation">;</span>android-28<span class="token punctuation">;</span>google_apis_playstore<span class="token punctuation">;</span>x86_64                                    <span class="token operator">|</span> <span class="token number">8</span>            <span class="token operator">|</span> Google Play Intel x86 Atom_64 System Image
  system-images<span class="token punctuation">;</span>android-29<span class="token punctuation">;</span>android-tv<span class="token punctuation">;</span>x86                                                  <span class="token operator">|</span> <span class="token number">3</span>            <span class="token operator">|</span> Android TV Intel x86 Atom System Image
  system-images<span class="token punctuation">;</span>android-29<span class="token punctuation">;</span>default<span class="token punctuation">;</span>arm64-v8a                                               <span class="token operator">|</span> <span class="token number">8</span>            <span class="token operator">|</span> ARM <span class="token number">64</span> v8a System Image
  system-images<span class="token punctuation">;</span>android-29<span class="token punctuation">;</span>default<span class="token punctuation">;</span>x86                                                     <span class="token operator">|</span> <span class="token number">8</span>            <span class="token operator">|</span> Intel x86 Atom System Image
  system-images<span class="token punctuation">;</span>android-29<span class="token punctuation">;</span>default<span class="token punctuation">;</span>x86_64                                                  <span class="token operator">|</span> <span class="token number">8</span>            <span class="token operator">|</span> Intel x86 Atom_64 System Image
  system-images<span class="token punctuation">;</span>android-29<span class="token punctuation">;</span>google_apis<span class="token punctuation">;</span>arm64-v8a                                           <span class="token operator">|</span> <span class="token number">12</span>           <span class="token operator">|</span> Google APIs ARM <span class="token number">64</span> v8a System Image
  system-images<span class="token punctuation">;</span>android-29<span class="token punctuation">;</span>google_apis<span class="token punctuation">;</span>x86                                                 <span class="token operator">|</span> <span class="token number">12</span>           <span class="token operator">|</span> Google APIs Intel x86 Atom System Image
  system-images<span class="token punctuation">;</span>android-29<span class="token punctuation">;</span>google_apis<span class="token punctuation">;</span>x86_64                                              <span class="token operator">|</span> <span class="token number">12</span>           <span class="token operator">|</span> Google APIs Intel x86 Atom_64 System Image
  system-images<span class="token punctuation">;</span>android-29<span class="token punctuation">;</span>google_apis_playstore<span class="token punctuation">;</span>x86                                       <span class="token operator">|</span> <span class="token number">8</span>            <span class="token operator">|</span> Google Play Intel x86 Atom System Image
  system-images<span class="token punctuation">;</span>android-29<span class="token punctuation">;</span>google_apis_playstore<span class="token punctuation">;</span>x86_64                                    <span class="token operator">|</span> <span class="token number">8</span>            <span class="token operator">|</span> Google Play Intel x86 Atom_64 System Image
  system-images<span class="token punctuation">;</span>android-30<span class="token punctuation">;</span>android-tv<span class="token punctuation">;</span>x86                                                  <span class="token operator">|</span> <span class="token number">4</span>            <span class="token operator">|</span> Android TV Intel x86 Atom System Image
  system-images<span class="token punctuation">;</span>android-30<span class="token punctuation">;</span>android-wear-cn<span class="token punctuation">;</span>arm64-v8a                                       <span class="token operator">|</span> <span class="token number">10</span>           <span class="token operator">|</span> China version of Wear OS <span class="token number">3</span> - Preview ARM <span class="token number">64</span> v8a System Image
  system-images<span class="token punctuation">;</span>android-30<span class="token punctuation">;</span>android-wear-cn<span class="token punctuation">;</span>x86                                             <span class="token operator">|</span> <span class="token number">10</span>           <span class="token operator">|</span> China version of Wear OS <span class="token number">3</span> - Preview Intel x86 Atom System Image
  system-images<span class="token punctuation">;</span>android-30<span class="token punctuation">;</span>android-wear<span class="token punctuation">;</span>arm64-v8a                                          <span class="token operator">|</span> <span class="token number">11</span>           <span class="token operator">|</span> Wear OS <span class="token number">3</span> ARM <span class="token number">64</span> v8a System Image
  system-images<span class="token punctuation">;</span>android-30<span class="token punctuation">;</span>android-wear<span class="token punctuation">;</span>x86                                                <span class="token operator">|</span> <span class="token number">11</span>           <span class="token operator">|</span> Wear OS <span class="token number">3</span> Intel x86 Atom System Image
  system-images<span class="token punctuation">;</span>android-30<span class="token punctuation">;</span>aosp_atd<span class="token punctuation">;</span>arm64-v8a                                              <span class="token operator">|</span> <span class="token number">1</span>            <span class="token operator">|</span> AOSP ATD ARM <span class="token number">64</span> v8a System Image
  system-images<span class="token punctuation">;</span>android-30<span class="token punctuation">;</span>aosp_atd<span class="token punctuation">;</span>x86                                                    <span class="token operator">|</span> <span class="token number">1</span>            <span class="token operator">|</span> AOSP ATD Intel x86 Atom System Image
  system-images<span class="token punctuation">;</span>android-30<span class="token punctuation">;</span>default<span class="token punctuation">;</span>arm64-v8a                                               <span class="token operator">|</span> <span class="token number">1</span>            <span class="token operator">|</span> ARM <span class="token number">64</span> v8a System Image
  system-images<span class="token punctuation">;</span>android-30<span class="token punctuation">;</span>default<span class="token punctuation">;</span>x86_64                                                  <span class="token operator">|</span> <span class="token number">10</span>           <span class="token operator">|</span> Intel x86 Atom_64 System Image
  system-images<span class="token punctuation">;</span>android-30<span class="token punctuation">;</span>google-tv<span class="token punctuation">;</span>x86                                                   <span class="token operator">|</span> <span class="token number">4</span>            <span class="token operator">|</span> Google TV Intel x86 Atom System Image
  system-images<span class="token punctuation">;</span>android-30<span class="token punctuation">;</span>google_apis<span class="token punctuation">;</span>arm64-v8a                                           <span class="token operator">|</span> <span class="token number">11</span>           <span class="token operator">|</span> Google APIs ARM <span class="token number">64</span> v8a System Image
  system-images<span class="token punctuation">;</span>android-30<span class="token punctuation">;</span>google_apis<span class="token punctuation">;</span>x86                                                 <span class="token operator">|</span> <span class="token number">10</span>           <span class="token operator">|</span> Google APIs Intel x86 Atom System Image
  system-images<span class="token punctuation">;</span>android-30<span class="token punctuation">;</span>google_apis<span class="token punctuation">;</span>x86_64                                              <span class="token operator">|</span> <span class="token number">11</span>           <span class="token operator">|</span> Google APIs Intel x86 Atom_64 System Image
  system-images<span class="token punctuation">;</span>android-30<span class="token punctuation">;</span>google_apis_playstore<span class="token punctuation">;</span>x86                                       <span class="token operator">|</span> <span class="token number">9</span>            <span class="token operator">|</span> Google Play Intel x86 Atom System Image
  system-images<span class="token punctuation">;</span>android-30<span class="token punctuation">;</span>google_apis_playstore<span class="token punctuation">;</span>x86_64                                    <span class="token operator">|</span> <span class="token number">10</span>           <span class="token operator">|</span> Google Play Intel x86 Atom_64 System Image
  system-images<span class="token punctuation">;</span>android-30<span class="token punctuation">;</span>google_atd<span class="token punctuation">;</span>arm64-v8a                                            <span class="token operator">|</span> <span class="token number">1</span>            <span class="token operator">|</span> Google APIs ATD ARM <span class="token number">64</span> v8a System Image
  system-images<span class="token punctuation">;</span>android-30<span class="token punctuation">;</span>google_atd<span class="token punctuation">;</span>x86                                                  <span class="token operator">|</span> <span class="token number">1</span>            <span class="token operator">|</span> Google APIs ATD Intel x86 Atom System Image
  system-images<span class="token punctuation">;</span>android-31<span class="token punctuation">;</span>android-tv<span class="token punctuation">;</span>arm64-v8a                                            <span class="token operator">|</span> <span class="token number">4</span>            <span class="token operator">|</span> Android TV ARM <span class="token number">64</span> v8a System Image
  system-images<span class="token punctuation">;</span>android-31<span class="token punctuation">;</span>android-tv<span class="token punctuation">;</span>x86                                                  <span class="token operator">|</span> <span class="token number">4</span>            <span class="token operator">|</span> Android TV Intel x86 Atom System Image
  system-images<span class="token punctuation">;</span>android-31<span class="token punctuation">;</span>default<span class="token punctuation">;</span>arm64-v8a                                               <span class="token operator">|</span> <span class="token number">4</span>            <span class="token operator">|</span> ARM <span class="token number">64</span> v8a System Image
  system-images<span class="token punctuation">;</span>android-31<span class="token punctuation">;</span>default<span class="token punctuation">;</span>x86_64                                                  <span class="token operator">|</span> <span class="token number">4</span>            <span class="token operator">|</span> Intel x86 Atom_64 System Image
  system-images<span class="token punctuation">;</span>android-31<span class="token punctuation">;</span>google-tv<span class="token punctuation">;</span>arm64-v8a                                             <span class="token operator">|</span> <span class="token number">4</span>            <span class="token operator">|</span> Google TV ARM <span class="token number">64</span> v8a System Image
  system-images<span class="token punctuation">;</span>android-31<span class="token punctuation">;</span>google-tv<span class="token punctuation">;</span>x86                                                   <span class="token operator">|</span> <span class="token number">4</span>            <span class="token operator">|</span> Google TV Intel x86 Atom System Image
  system-images<span class="token punctuation">;</span>android-31<span class="token punctuation">;</span>google_apis<span class="token punctuation">;</span>arm64-v8a                                           <span class="token operator">|</span> <span class="token number">10</span>           <span class="token operator">|</span> Google APIs ARM <span class="token number">64</span> v8a System Image
  system-images<span class="token punctuation">;</span>android-31<span class="token punctuation">;</span>google_apis<span class="token punctuation">;</span>x86_64                                              <span class="token operator">|</span> <span class="token number">11</span>           <span class="token operator">|</span> Google APIs Intel x86 Atom_64 System Image
  system-images<span class="token punctuation">;</span>android-31<span class="token punctuation">;</span>google_apis_playstore<span class="token punctuation">;</span>x86_64                                    <span class="token operator">|</span> <span class="token number">9</span>            <span class="token operator">|</span> Google Play Intel x86 Atom_64 System Image
  system-images<span class="token punctuation">;</span>android-32<span class="token punctuation">;</span>google_apis<span class="token punctuation">;</span>x86_64                                              <span class="token operator">|</span> <span class="token number">3</span>            <span class="token operator">|</span> Google APIs Intel x86 Atom_64 System Image
  system-images<span class="token punctuation">;</span>android-32<span class="token punctuation">;</span>google_apis_playstore<span class="token punctuation">;</span>x86_64                                    <span class="token operator">|</span> <span class="token number">3</span>            <span class="token operator">|</span> Google Play Intel x86 Atom_64 System Image
  system-images<span class="token punctuation">;</span>android-33<span class="token punctuation">;</span>android-tv<span class="token punctuation">;</span>arm64-v8a                                            <span class="token operator">|</span> <span class="token number">5</span>            <span class="token operator">|</span> Android TV ARM <span class="token number">64</span> v8a System Image
  system-images<span class="token punctuation">;</span>android-33<span class="token punctuation">;</span>android-tv<span class="token punctuation">;</span>x86                                                  <span class="token operator">|</span> <span class="token number">5</span>            <span class="token operator">|</span> Android TV Intel x86 Atom System Image
  system-images<span class="token punctuation">;</span>android-33<span class="token punctuation">;</span>google-tv<span class="token punctuation">;</span>arm64-v8a                                             <span class="token operator">|</span> <span class="token number">5</span>            <span class="token operator">|</span> Google TV ARM <span class="token number">64</span> v8a System Image
  system-images<span class="token punctuation">;</span>android-33<span class="token punctuation">;</span>google-tv<span class="token punctuation">;</span>x86                                                   <span class="token operator">|</span> <span class="token number">5</span>            <span class="token operator">|</span> Google TV Intel x86 Atom System Image
  system-images<span class="token punctuation">;</span>android-33<span class="token punctuation">;</span>google_apis<span class="token punctuation">;</span>arm64-v8a                                           <span class="token operator">|</span> <span class="token number">8</span>            <span class="token operator">|</span> Google APIs ARM <span class="token number">64</span> v8a System Image
  system-images<span class="token punctuation">;</span>android-33<span class="token punctuation">;</span>google_apis<span class="token punctuation">;</span>x86_64                                              <span class="token operator">|</span> <span class="token number">8</span>            <span class="token operator">|</span> Google APIs Intel x86 Atom_64 System Image
  system-images<span class="token punctuation">;</span>android-33<span class="token punctuation">;</span>google_apis_playstore<span class="token punctuation">;</span>x86_64                                    <span class="token operator">|</span> <span class="token number">7</span>            <span class="token operator">|</span> Google Play Intel x86 Atom_64 System Image
  system-images<span class="token punctuation">;</span>android-TiramisuPrivacySandbox<span class="token punctuation">;</span>google_apis_playstore<span class="token punctuation">;</span>x86_64                <span class="token operator">|</span> <span class="token number">8</span>            <span class="token operator">|</span> Google Play Intel x86 Atom_64 System Image<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p> 以上就列出了一些稳定版的东西<br> 如果你需要安装啥，就直接<br> <code>sdkmanager &quot;platforms;android-31&quot;</code>像这样，就安装了这个 <code>platforms;android-31</code><br> <code>sdkmanager install &quot;ndk;25.1.8937393&quot;</code> 安装NDK<br> <code>sdkmanager &quot;platform-tools&quot;</code> 安装 “platform-tools”工具即 <code>ADB</code>工具（这里需要配置环境变量）</p>
<blockquote>
<p>点新建: 变量名 <code>ANDROID_HOME</code> 变量值 <code>D:\Android_SDK/platform-tools</code>点确定<br>然后打开 <code>Path</code>变量，新建，粘贴 <code>%ANDROID_HOME%/platform-tools</code> 点确定</p>
</blockquote>
<p> 回到桌面，打开 <code>CMD</code>输入 <code>adb --version</code><br> 呐能正常返回版本号，路径，说明成功</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">Android Debug Bridge version X.X.XX
Version XX.X.X-XXXXXXX
Installed as D:<span class="token punctuation">\</span>admin<span class="token punctuation">\</span>Android_SDK<span class="token punctuation">\</span>platform-tools<span class="token punctuation">\</span>adb.exe<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>

<p>至此，神功大成</p>
<h2 id="提一下，怎么卸载"><a href="#提一下，怎么卸载" class="headerlink" title="提一下，怎么卸载"></a>提一下，怎么卸载</h2><p>想卸载啥卸载啥 <code>sdkmanager --uninstall &quot;platforms;android-33&quot;</code></p>
]]></content>
      <categories>
        <category>文档</category>
        <category>教程</category>
      </categories>
      <tags>
        <tag>Android SDK配置</tag>
      </tags>
  </entry>
  <entry>
    <title>Unity-C#学习</title>
    <url>/2022/09/22/c-chu-ji-ru-men-unity/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1 id="一-Unity-C-初级编程"><a href="#一-Unity-C-初级编程" class="headerlink" title="一. Unity C#初级编程"></a>一. Unity C#初级编程</h1><h2 id="1-作为行为组件的脚本"><a href="#1-作为行为组件的脚本" class="headerlink" title="1. 作为行为组件的脚本"></a>1. 作为行为组件的脚本</h2><p>这里将脚本挂载到物体上，控制他本身材质的颜色…猜测</p>
<span id="more"></span>

<pre class="line-numbers language-c#" data-language="c#"><code class="language-c#">using UnityEngine;
using System.Collections;

public class ExampleBehaviourScript : MonoBehaviour
&#123;
    void Update()
    &#123;
        if (Input.GetKeyDown(KeyCode.R))
        &#123;
            GetComponent&lt;Renderer&gt; ().material.color &#x3D; Color.red;
        &#125;
        if (Input.GetKeyDown(KeyCode.G))
        &#123;
            GetComponent&lt;Renderer&gt;().material.color &#x3D; Color.green;
        &#125;
        if (Input.GetKeyDown(KeyCode.B))
        &#123;
            GetComponent&lt;Renderer&gt;().material.color &#x3D; Color.blue;
        &#125;
    &#125;
&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h2 id="2-变量与函数"><a href="#2-变量与函数" class="headerlink" title="2. 变量与函数"></a>2. 变量与函数</h2><p>定义变量前需要确定类型</p>
<pre class="line-numbers language-c#" data-language="c#"><code class="language-c#">using UnityEngine;
using System.Collections;

public class VariablesAndFunctions : MonoBehaviour
&#123;   
    int myInt &#x3D; 5;
  
  
    void Start ()
    &#123;
        myInt &#x3D; MultiplyByTwo(myInt);
        Debug.Log (myInt);
    &#125;
  
  
    int MultiplyByTwo (int number)
    &#123;
        int ret;
        ret &#x3D; number * 2;
        return ret;
    &#125;
&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h2 id="3-约定与语法"><a href="#3-约定与语法" class="headerlink" title="3. 约定与语法"></a>3. 约定与语法</h2><p>即代码规范</p>
<pre class="line-numbers language-c#" data-language="c#"><code class="language-c#">using UnityEngine;
using System.Collections;

public class BasicSyntax : MonoBehaviour
&#123;
    void Start ()
    &#123;
        Debug.Log(transform.position.x);
      
        if(transform.position.y &lt;&#x3D; 5f)
        &#123;
            Debug.Log (&quot;I&#39;m about to hit the ground!&quot;);
        &#125;
    &#125;
&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h2 id="4-IF语句"><a href="#4-IF语句" class="headerlink" title="4. IF语句"></a>4. IF语句</h2><pre class="line-numbers language-c#" data-language="c#"><code class="language-c#">using UnityEngine;
using System.Collections;

public class IfStatements : MonoBehaviour
&#123;
    float coffeeTemperature &#x3D; 85.0f;
    float hotLimitTemperature &#x3D; 70.0f;
    float coldLimitTemperature &#x3D; 40.0f;
  

    void Update ()
    &#123;
        if(Input.GetKeyDown(KeyCode.Space))
            TemperatureTest();
      
        coffeeTemperature -&#x3D; Time.deltaTime * 5f;
    &#125;
  
  
    void TemperatureTest ()
    &#123;
        &#x2F;&#x2F; 如果咖啡的温度高于最热的饮用温度...
        if(coffeeTemperature &gt; hotLimitTemperature)
        &#123;
            &#x2F;&#x2F; ... 执行此操作。
            print(&quot;Coffee is too hot.&quot;);
        &#125;
        &#x2F;&#x2F; 如果不是，但咖啡的温度低于最冷的饮用温度...
        else if(coffeeTemperature &lt; coldLimitTemperature)
        &#123;
            &#x2F;&#x2F; ... 执行此操作。
            print(&quot;Coffee is too cold.&quot;);
        &#125;
        &#x2F;&#x2F; 如果两者都不是，则...
        else
        &#123;
            &#x2F;&#x2F; ... 执行此操作。
            print(&quot;Coffee is just right.&quot;);
        &#125;
    &#125;
&#125;
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h2 id="5-循环"><a href="#5-循环" class="headerlink" title="5. 循环"></a>5. 循环</h2><h3 id="a-For循环"><a href="#a-For循环" class="headerlink" title="a. For循环"></a>a. <code>For</code>循环</h3><pre class="line-numbers language-c#" data-language="c#"><code class="language-c#">using UnityEngine;
using System.Collections;

public class ForLoop : MonoBehaviour
&#123;
    int numEnemies &#x3D; 3;
  
  
    void Start ()
    &#123;
        for(int i &#x3D; 0; i &lt; numEnemies; i++)
        &#123;
            Debug.Log(&quot;Creating enemy number: &quot; + i);
        &#125;
    &#125;
&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h3 id="b-While循环"><a href="#b-While循环" class="headerlink" title="b. While循环"></a>b. <code>While</code>循环</h3><pre class="line-numbers language-c#" data-language="c#"><code class="language-c#">using UnityEngine;
using System.Collections;

public class WhileLoop : MonoBehaviour
&#123;
    int cupsInTheSink &#x3D; 4;
  
  
    void Start ()
    &#123;
        while(cupsInTheSink &gt; 0)
        &#123;
            Debug.Log (&quot;I&#39;ve washed a cup!&quot;);
            cupsInTheSink--;
        &#125;
    &#125;
&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h3 id="c-DoWhile循环"><a href="#c-DoWhile循环" class="headerlink" title="c. DoWhile循环"></a>c. <code>DoWhile</code>循环</h3><pre class="line-numbers language-c#" data-language="c#"><code class="language-c#">using UnityEngine;
using System.Collections;

public class DoWhileLoop : MonoBehaviour 
&#123;
    void Start()
    &#123;
        bool shouldContinue &#x3D; false;
      
        do
        &#123;
            print (&quot;Hello World&quot;);
          
        &#125;while(shouldContinue &#x3D;&#x3D; true);
    &#125;
&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h3 id="d-Foreach循环"><a href="#d-Foreach循环" class="headerlink" title="d. Foreach循环"></a>d. <code>Foreach</code>循环</h3><pre class="line-numbers language-c#" data-language="c#"><code class="language-c#">using UnityEngine;
using System.Collections;

public class ForeachLoop : MonoBehaviour 
&#123;   
    void Start () 
    &#123;
        string[] strings &#x3D; new string[3];
      
        strings[0] &#x3D; &quot;First string&quot;;
        strings[1] &#x3D; &quot;Second string&quot;;
        strings[2] &#x3D; &quot;Third string&quot;;
      
        foreach(string item in strings)
        &#123;
            print (item);
        &#125;
    &#125;
&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h2 id="6-作用域和访问修饰符"><a href="#6-作用域和访问修饰符" class="headerlink" title="6. 作用域和访问修饰符"></a>6. 作用域和访问修饰符</h2><h3 id="ScopeAndAccessModifiers"><a href="#ScopeAndAccessModifiers" class="headerlink" title="ScopeAndAccessModifiers"></a><code>ScopeAndAccessModifiers</code></h3><pre class="line-numbers language-c#" data-language="c#"><code class="language-c#">using UnityEngine;
using System.Collections;

public class ScopeAndAccessModifiers : MonoBehaviour
&#123;
    public int alpha &#x3D; 5;
  
  
    private int beta &#x3D; 0;
    private int gamma &#x3D; 5;
  
  
    private AnotherClass myOtherClass;
  
  
    void Start ()
    &#123;
        alpha &#x3D; 29;
      
        myOtherClass &#x3D; new AnotherClass();
        myOtherClass.FruitMachine(alpha, myOtherClass.apples);
    &#125;
  
  
    void Example (int pens, int crayons)
    &#123;
        int answer;
        answer &#x3D; pens * crayons * alpha;
        Debug.Log(answer);
    &#125;
  
  
    void Update ()
    &#123;
        Debug.Log(&quot;Alpha is set to: &quot; + alpha);
    &#125;
&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h3 id="AnotherClass"><a href="#AnotherClass" class="headerlink" title="AnotherClass"></a><code>AnotherClass</code></h3><pre class="line-numbers language-c#" data-language="c#"><code class="language-c#">using UnityEngine;
using System.Collections;

public class AnotherClass
&#123;
    public int apples;
    public int bananas;
  
  
    private int stapler;
    private int sellotape;
  
  
    public void FruitMachine (int a, int b)
    &#123;
        int answer;
        answer &#x3D; a + b;
        Debug.Log(&quot;Fruit total: &quot; + answer);
    &#125;
  
  
    private void OfficeSort (int a, int b)
    &#123;
        int answer;
        answer &#x3D; a + b;
        Debug.Log(&quot;Office Supplies total: &quot; + answer);
    &#125;
&#125;
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h2 id="7-Awake-和-Start"><a href="#7-Awake-和-Start" class="headerlink" title="7.Awake 和 Start"></a>7.Awake 和 Start</h2><pre class="line-numbers language-c#" data-language="c#"><code class="language-c#">using UnityEngine;
using System.Collections;

public class AwakeAndStart : MonoBehaviour
&#123;
    &#x2F;&#x2F;只需挂载脚本，而不需要勾选
    void Awake ()
    &#123;
        Debug.Log(&quot;Awake called.&quot;);
    &#125;
  
    &#x2F;&#x2F;勾选了，才会执行这里
    void Start ()
    &#123;
        Debug.Log(&quot;Start called.&quot;);
    &#125;
&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h2 id="8-Update-和-FixedUpdate"><a href="#8-Update-和-FixedUpdate" class="headerlink" title="8. Update 和 FixedUpdate"></a>8. <code>Update</code> 和 <code>FixedUpdate</code></h2><pre class="line-numbers language-c#" data-language="c#"><code class="language-c#">using UnityEngine;
using System.Collections;

public class UpdateAndFixedUpdate : MonoBehaviour
&#123;
    &#x2F;*按照固定时间调用
    *调用之后，会立刻进行任何必要的物理计算
    *因此任何影响刚体(即物理对象)的动作，都应该使用FixedUpdate()执行
    *最好使用力来定义移动
    **&#x2F;
    void FixedUpdate ()
    &#123;
        Debug.Log(&quot;FixedUpdate time :&quot; + Time.deltaTime);
    &#125;
  
    &#x2F;*游戏中每一帧的调用
    *基本上只要需要变化或者调整
    *非物理对象的移动
    *简单的计时器
    *输入监测
    *！！请注意，update并不是按照固定时间调用的，帧与帧之间的处理时间不一致会导致Update()调用间隔
    **&#x2F;
  
    void Update ()
    &#123;
        Debug.Log(&quot;Update time :&quot; + Time.deltaTime);
    &#125;
&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>VST中在任何想要插入函数的地方按住 <code>Ctrl</code>+<code>Shift</code>+<code>M</code></p>
<h2 id="9-矢量数学"><a href="#9-矢量数学" class="headerlink" title="9. 矢量数学"></a>9. 矢量数学</h2><pre class="line-numbers language-c#" data-language="c#"><code class="language-c#">Vector3.Dot(VectorA,VectorB)
Vector3.Cross(VectorA,VectorB)&#x2F;&#x2F;用于坦克扭矩..<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<h2 id="10-启用和禁用组件"><a href="#10-启用和禁用组件" class="headerlink" title="10. 启用和禁用组件"></a>10. 启用和禁用组件</h2><pre class="line-numbers language-c#" data-language="c#"><code class="language-c#">using UnityEngine;
using System.Collections;

public class EnableComponents : MonoBehaviour
&#123;
    private Light myLight;
  
  
    void Start ()
    &#123;
        myLight &#x3D; GetComponent&lt;Light&gt;();
    &#125;
  
  
    void Update ()
    &#123;
        if(Input.GetKeyUp(KeyCode.Space))
        &#123;
            &#x2F;&#x2F;这个逻辑很棒，自动取反不需要if else啥的
            myLight.enabled &#x3D; !myLight.enabled;
        &#125;
    &#125;
&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h2 id="11-激活游戏对象"><a href="#11-激活游戏对象" class="headerlink" title="11. 激活游戏对象"></a>11. 激活游戏对象</h2><h3 id="ActiveObjects"><a href="#ActiveObjects" class="headerlink" title="ActiveObjects"></a><code>ActiveObjects</code></h3><pre class="line-numbers language-c#" data-language="c#"><code class="language-c#">using UnityEngine;
using System.Collections;

public class ActiveObjects : MonoBehaviour
&#123;
    void Start ()
    &#123;
        gameObject.SetActive(false);
    &#125;
&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h3 id="CheckState"><a href="#CheckState" class="headerlink" title="CheckState"></a><code>CheckState</code></h3><pre class="line-numbers language-c#" data-language="c#"><code class="language-c#">using UnityEngine;
using System.Collections;

public class CheckState : MonoBehaviour
&#123;
    public GameObject myObject;
  
  
    void Start ()
    &#123;
        Debug.Log(&quot;Active Self: &quot; + myObject.activeSelf);
        Debug.Log(&quot;Active in Hierarchy&quot; + myObject.activeInHierarchy);
    &#125;
&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>如果它的父对象被隐藏，需要先将父对象设置为激活状态，再操作子对象</p>
<h2 id="12-Translate-和-Rotate"><a href="#12-Translate-和-Rotate" class="headerlink" title="12. Translate 和 Rotate"></a>12. Translate 和 Rotate</h2><blockquote>
<p>平移与旋转常用函数</p>
</blockquote>
<h3 id="TransformFunctions"><a href="#TransformFunctions" class="headerlink" title="TransformFunctions"></a><code>TransformFunctions</code></h3><pre class="line-numbers language-c#" data-language="c#"><code class="language-c#">using UnityEngine;
using System.Collections;

public class TransformFunctions : MonoBehaviour
&#123;
    public float moveSpeed &#x3D; 10f;
    public float turnSpeed &#x3D; 50f;
  
  
    void Update ()
    &#123;
        &#x2F;&#x2F;这样会每帧，向z轴方向下移动，每帧移动1单位
        &#x2F;&#x2F;transform.Translate(new Vector3(0,0,1))
        if(Input.GetKey(KeyCode.UpArrow))
            &#x2F;&#x2F;按照每秒多少米的速度移动
            transform.Translate(Vector3.forward * moveSpeed * Time.deltaTime);
      
        if(Input.GetKey(KeyCode.DownArrow))
            transform.Translate(-Vector3.forward * moveSpeed * Time.deltaTime);
        &#x2F;&#x2F;Vector3.up表示围绕哪个轴转，
        &#x2F;&#x2F;turnSpeed旋转速度
        if(Input.GetKey(KeyCode.LeftArrow))
            transform.Rotate(Vector3.up, -turnSpeed * Time.deltaTime);
      
        if(Input.GetKey(KeyCode.RightArrow))
            transform.Rotate(Vector3.up, turnSpeed * Time.deltaTime);
    &#125;
&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>如果想用碰撞体移动某个对象，也就是会产生物理作用的物体，则不应该使用上者，而是应该考虑 <code>Physics</code>函数</p>
<h2 id="13-Look-At"><a href="#13-Look-At" class="headerlink" title="13. Look At"></a>13. Look At</h2><blockquote>
<p>摄像机跟随游戏物体</p>
</blockquote>
<h3 id="CameraLookAt"><a href="#CameraLookAt" class="headerlink" title="CameraLookAt"></a><code>CameraLookAt</code></h3><pre class="line-numbers language-c#" data-language="c#"><code class="language-c#">using UnityEngine;
using System.Collections;

public class CameraLookAt : MonoBehaviour
&#123;
    public Transform target;
  
    void Update ()
    &#123;
        transform.LookAt(target);
    &#125;
&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h2 id="14-线性插值"><a href="#14-线性插值" class="headerlink" title="14. 线性插值"></a>14. 线性插值</h2><p>在制作游戏时，有时可以在两个值之间进行线性插值。</p>
<p>这是通过 Lerp 函数来完成的。线性插值会在两个给定值之间找到某个百分比的值。</p>
<p>例如，我们可以在数字 3 和 5 之间按 50% 进行线性插值以得到数字 4。这是因为 4 是 3 和 5 之间距离的 50%。</p>
<p>在 Unity 中，有多个 Lerp 函数可用于不同类型。对于我们刚才使用的示例，与之等效的将是 Mathf.Lerp 函数，</p>
<p><strong>如下所示：</strong></p>
<pre class="line-numbers language-c#" data-language="c#"><code class="language-c#">&#x2F;&#x2F; 在此示例中，result &#x3D; 4
float result &#x3D; Mathf.Lerp (3f, 5f, 0.5f);<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<p>Mathf.Lerp 函数接受 3 个 float 参数：一个 float 参数表示要进行插值的起始值，另一个 float 参数表示要进行插值的结束值，最后一个 float 参数表示要进行插值的距离。在此示例中，插值为 0.5，表示 50%。如果为 0，则函数将返回“from”值；如果为 1，则函数将返回“to”值。</p>
<p>Lerp 函数的其他示例包括 <code>Color.Lerp</code> 和 <code>Vector3.Lerp</code>。这些函数的工作方式与 <code>Mathf.Lerp</code> 完全相同，但是“from”和“to”值分别为 Color 和 Vector3 类型。在每个示例中，第三个参数仍然是一个 float 参数，表示要插值的大小。这些函数的结果是找到一种颜色（两种给定颜色的某种混合）以及一个矢量（占两个给定矢量之间的百分比）。</p>
<p><strong>让我们看看另一个示例：</strong></p>
<pre class="line-numbers language-c#" data-language="c#"><code class="language-c#">Vector3 from &#x3D; new Vector3 (1f, 2f, 3f);
Vector3 to &#x3D; new Vector3 (5f, 6f, 7f);

&#x2F;&#x2F; 此处 result &#x3D; (4, 5, 6)
Vector3 result &#x3D; Vector3.Lerp (from, to, 0.75f);<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>在此示例中，结果为 (4, 5, 6)，因为 4 位于 1 到 5 之间的 75% 处，5 位于 2 到 6 之间的 75% 处，而 6 位于 3 到 7 之间的 75% 处。</p>
<p>使用 <code>Color.Lerp</code>时适用同样的原理。在 Color 结构中，颜色由代表红色、蓝色、绿色和 Alpha 的 4 个 float 参数表示。使用 Lerp 时，与 <code>Mathf.Lerp</code> 和 <code>Vector3.Lerp</code> 一样，这些 float 数值将进行插值。</p>
<p>在某些情况下，可使用 Lerp 函数使值随时间平滑。</p>
<p><strong>请考虑以下代码段：</strong></p>
<pre class="line-numbers language-c#" data-language="c#"><code class="language-c#">void Update ()
&#123;
    light.intensity &#x3D; Mathf.Lerp(light.intensity, 8f, 0.5f);
&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>

<p>如果光的强度从 0 开始，则在第一次更新后，其值将设置为 4。下一帧会将其设置为 6，然后设置为 7，再然后设置为 7.5，依此类推。因此，经过几帧后，光强度将趋向于 8，但随着接近目标，其变化速率将减慢。请注意，这是在若干个帧的过程中发生的。如果我们不希望与帧率有关，</p>
<p><strong>则可以使用以下代码：</strong></p>
<pre class="line-numbers language-c#" data-language="c#"><code class="language-c#">void Update ()
&#123;
    light.intensity &#x3D; Mathf.Lerp(light.intensity, 8f, 0.5f * Time.deltaTime);
&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>

<p>这意味着强度变化将按每秒而不是每帧发生。</p>
<p>请注意，在对值进行平滑时，通常情况下最好使用 SmoothDamp 函数。仅当您确定想要的效果时，才应使用 Lerp 进行平滑。</p>
<h3 id="tag-link"><a href="#tag-link" class="headerlink" title="tag-link"></a>tag-link</h3><blockquote>
<p><span class="exturl" data-url="aHR0cHM6Ly9sZWFybi51M2QuY24vdHV0b3JpYWwvYmVnaW5uZXItZ2FtZXBsYXktc2NyaXB0aW5nP2NoYXB0ZXJJZD02MzU2MmIyOWVkY2E3MjAwMWYyMWQxNzkjNjA0MDVlZTAyOWNiYmYwMDIxZGRhNjAz">C#初级编程 | Unity 中文课堂 (u3d.cn)<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
<h2 id="15-Destroy"><a href="#15-Destroy" class="headerlink" title="15.Destroy"></a>15.Destroy</h2><p><strong>DestroyBasic</strong></p>
<p>挂载在本身</p>
<pre class="line-numbers language-c#" data-language="c#"><code class="language-c#">using UnityEngine;
using System.Collections;

public class DestroyBasic : MonoBehaviour
&#123;
    void Update ()
    &#123;
        if(Input.GetKey(KeyCode.Space))
        &#123;
            Destroy(gameObject);
        &#125;
    &#125;
&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p><strong>DestroyOther</strong></p>
<p>让其他组件挂载在一个挂载这个脚本的组件</p>
<pre class="line-numbers language-C#" data-language="C#"><code class="language-C#">using UnityEngine;
using System.Collections;

public class DestroyOther : MonoBehaviour
&#123;
    public GameObject other;
  
  
    void Update ()
    &#123;
        if(Input.GetKey(KeyCode.Space))
        &#123;
            Destroy(other);
        &#125;
    &#125;
&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p><strong>DestroyComponent</strong></p>
<p>处理纹理，删掉相关渲染纹理~物体还在，纹理没了，应该相当于删掉了</p>
<pre class="line-numbers language-c#" data-language="c#"><code class="language-c#">using UnityEngine;
using System.Collections;

public class DestroyComponent : MonoBehaviour
&#123;
    void Update ()
    &#123;
        if(Input.GetKey(KeyCode.Space))
        &#123;
            Destroy(GetComponent&lt;MeshRenderer&gt;());
        &#125;
    &#125;
&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h2 id="16-GetButton-和-GetKey"><a href="#16-GetButton-和-GetKey" class="headerlink" title="16.GetButton 和 GetKey"></a>16.GetButton 和 GetKey</h2><pre class="line-numbers language-c#" data-language="c#"><code class="language-c#">   bool down &#x3D; Input.GetKeyDown(KeyCode.Space);
   bool held &#x3D; Input.GetKey(KeyCode.Space);
   bool up &#x3D; Input.GetKeyUp(KeyCode.Space);
&#x2F;&#x2F;按下时-&gt;按住了
down &#x3D; true
   held &#x3D; true
   up &#x3D; false
   &#x2F;&#x2F;-&gt;松开了,的一瞬间
down &#x3D; false
   held &#x3D; false
   up &#x3D; true
   &#x2F;&#x2F;松开—&gt;全部
down &#x3D; false
   held &#x3D; false
   up &#x3D; false<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p><strong>KeyInput</strong></p>
<pre class="line-numbers language-c#" data-language="c#"><code class="language-c#">using UnityEngine;
using System.Collections;

public class KeyInput : MonoBehaviour
&#123;
    public GUITexture graphic;
    public Texture2D standard;
    public Texture2D downgfx;
    public Texture2D upgfx;
    public Texture2D heldgfx;
  
    void Start()
    &#123;
        graphic.texture &#x3D; standard;
    &#125;
  
    void Update ()
    &#123;
        bool down &#x3D; Input.GetKeyDown(KeyCode.Space);
        bool held &#x3D; Input.GetKey(KeyCode.Space);
        bool up &#x3D; Input.GetKeyUp(KeyCode.Space);
      
        if(down)
        &#123;
            graphic.texture &#x3D; downgfx;
        &#125;
        else if(held)
        &#123;
            graphic.texture &#x3D; heldgfx;
        &#125;
        else if(up)
        &#123;
            graphic.texture &#x3D; upgfx;
        &#125;
        else
        &#123;
            graphic.texture &#x3D; standard; 
        &#125;
      
        guiText.text &#x3D; &quot; &quot; + down + &quot;\n &quot; + held + &quot;\n &quot; + up;
    &#125;
&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p><strong>ButtonInput</strong></p>
<pre class="line-numbers language-c#" data-language="c#"><code class="language-c#">using UnityEngine;
using System.Collections;

public class ButtonInput : MonoBehaviour
&#123;
    public GUITexture graphic;
    public Texture2D standard;
    public Texture2D downgfx;
    public Texture2D upgfx;
    public Texture2D heldgfx;
  
    void Start()
    &#123;
        graphic.texture &#x3D; standard;
    &#125;
  
    void Update ()
    &#123;
        bool down &#x3D; Input.GetButtonDown(&quot;Jump&quot;);
        bool held &#x3D; Input.GetButton(&quot;Jump&quot;);
        bool up &#x3D; Input.GetButtonUp(&quot;Jump&quot;);
      
        if(down)
        &#123;
            graphic.texture &#x3D; downgfx;
        &#125;
        else if(held)
        &#123;
            graphic.texture &#x3D; heldgfx;
        &#125;
        else if(up)
        &#123;
            graphic.texture &#x3D; upgfx;
        &#125;
        else
        &#123;
            graphic.texture &#x3D; standard;
        &#125;
  
        guiText.text &#x3D; &quot; &quot; + down + &quot;\n &quot; + held + &quot;\n &quot; + up;
    &#125;
&#125;
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h2 id="17-GetAxis"><a href="#17-GetAxis" class="headerlink" title="17.GetAxis"></a>17.GetAxis</h2><p><strong>返回的是浮点数</strong></p>
<p><code>Gravity</code>影响按钮松开后归零的速度，越大，归零越快</p>
<p><code>Dead</code>这个值越大，按按钮的动作就要越猛，可能</p>
<p><code>Sensitivity</code>控制按下时，Axis达到1或-1的速度，与 <code>Gravity</code>相反</p>
<p><code>Snap</code>同时按下正负按钮时，归零</p>
<p><strong>AxisExample</strong></p>
<pre class="line-numbers language-c#" data-language="c#"><code class="language-c#">using UnityEngine;
using System.Collections;

public class AxisExample : MonoBehaviour
&#123;
    public float range;
    public GUIText textOutput;
  
  
    void Update () 
    &#123;
        float h &#x3D; Input.GetAxis(&quot;Horizontal&quot;);
        float xPos &#x3D; h * range;
      
        transform.position &#x3D; new Vector3(xPos, 2f, 0);
        textOutput.text &#x3D; &quot;Value Returned: &quot;+h.ToString(&quot;F2&quot;);  
    &#125;
&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p><strong>AxisRawExample</strong></p>
<pre class="line-numbers language-c#" data-language="c#"><code class="language-c#">using UnityEngine;
using System.Collections;

public class AxisRawExample : MonoBehaviour
&#123;
    public float range;
    public GUIText textOutput;
  
  
    void Update () 
    &#123;
        float h &#x3D; Input.GetAxisRaw(&quot;Horizontal&quot;);
        float xPos &#x3D; h * range;
      
        transform.position &#x3D; new Vector3(xPos, 2f, 0);
        textOutput.text &#x3D; &quot;Value Returned: &quot;+h.ToString(&quot;F2&quot;);  
    &#125;
&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p><strong>DualAxisExample</strong></p>
<pre class="line-numbers language-c#" data-language="c#"><code class="language-c#">using UnityEngine;
using System.Collections;

public class DualAxisExample : MonoBehaviour 
&#123;
    public float range;
    public GUIText textOutput;
  
  
    void Update () 
    &#123;
        float h &#x3D; Input.GetAxis(&quot;Horizontal&quot;);
        float v &#x3D; Input.GetAxis(&quot;Vertical&quot;);
        float xPos &#x3D; h * range;
        float yPos &#x3D; v * range;
      
        transform.position &#x3D; new Vector3(xPos, yPos, 0);
        textOutput.text &#x3D; &quot;Horizontal Value Returned: &quot;+h.ToString(&quot;F2&quot;)+&quot;\nVertical Value Returned: &quot;+v.ToString(&quot;F2&quot;);  
    &#125;
&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
]]></content>
      <categories>
        <category>Unity</category>
      </categories>
      <tags>
        <tag>Unity</tag>
        <tag>C#</tag>
      </tags>
  </entry>
  <entry>
    <title>C#学习</title>
    <url>/2022/09/22/c-xie-cheng/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><span id="more"></span>

<pre class="line-numbers language-C#" data-language="C#"><code class="language-C#">public class Test : MonoBehaviour
&#123;
    void Start()
    &#123;
        StartCoroutine(&#39;MyPrint&#39;);
    &#125;

    IEnumerator Myprint()
    &#123;
        yield return new WaitForSeconds(2f);
        Debug.Log(&#39;hi&#39;);

    &#125;

    void Update()
    &#123;
      
    &#125;
&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
]]></content>
      <categories>
        <category>Unity</category>
      </categories>
      <tags>
        <tag>C#</tag>
        <tag>协程</tag>
      </tags>
  </entry>
  <entry>
    <title>Canvas学习</title>
    <url>/2022/09/22/canvas-xue-xi/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h4 id="控制画布大小"><a href="#控制画布大小" class="headerlink" title="控制画布大小"></a>控制画布大小</h4><p>控制画布大小</p>
<pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>canvas</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>canvas<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>500<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>500<span class="token punctuation">"</span></span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>canvas</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>

<p>或者通过 <code>css</code>控制大小</p>
<span id="more"></span>

<pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">#canvas</span> <span class="token punctuation">&#123;</span>
	<span class="token property">background</span><span class="token punctuation">:</span> #f00<span class="token punctuation">;</span>
	<span class="token property">width</span><span class="token punctuation">:</span> 500px<span class="token punctuation">;</span>
	<span class="token property">height</span><span class="token punctuation">:</span> 5400px<span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>请不要同时使用，内容会被压缩，或者拉长</p>
<p>如果不支持可以在 canvas 中添加标签，标签会代替 canvas 进行展示</p>
<pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>canvas</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>换个浏览器吧！求求了<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>canvas</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<h4 id="开始画"><a href="#开始画" class="headerlink" title="开始画"></a>开始画</h4><p>通过以下代码拿去上下文</p>
<pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">var</span> canvas <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"canvas"</span><span class="token punctuation">)</span>
<span class="token keyword">var</span> ctx <span class="token operator">=</span> canvas<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token string">"2d"</span><span class="token punctuation">)</span>
<span class="token comment">//也有可能拿不到</span>
<span class="token keyword">if</span><span class="token punctuation">(</span>canvas<span class="token punctuation">.</span>GetContext<span class="token punctuation">&#123;</span>
   <span class="token comment">//正常逻辑</span>
<span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>
    <span class="token comment">//不支持的兼容处理</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h4 id="如何下笔"><a href="#如何下笔" class="headerlink" title="如何下笔"></a>如何下笔</h4><p>坐标系</p>
<p><img src="https://cdn.jsdelivr.net/gh/Fansirsqi/blog-Images/images/202304201154598.png"></p>
<h4 id="绘制直线"><a href="#绘制直线" class="headerlink" title="绘制直线"></a>绘制直线</h4><p>通过上下文的 <code>beginPath()</code>方法新建笔画</p>
<pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">var</span> canvas <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"canvas"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> ctx <span class="token operator">=</span> canvas<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token string">"2d"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
ctx<span class="token punctuation">.</span><span class="token function">beginPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//新建画笔</span>
ctx<span class="token punctuation">.</span><span class="token function">moveTo</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//将画笔抵在画布上</span>
ctx<span class="token punctuation">.</span><span class="token function">lineTo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//将画笔移动到相应位置，但是这个时候你会发现没有(他奶奶个腿儿！)，因为画笔没有颜色，只是相当于划过，但是没有痕迹</span>
ctx<span class="token punctuation">.</span><span class="token function">stroke</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//显示痕迹轮廓</span>
ctx<span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//填充绘制的路径，如果绘制的线没有闭合，会自动连接起点与终点，闭合</span>
ctx<span class="token punctuation">.</span><span class="token function">closePath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//手动起点->终点闭合</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h4 id="绘制矩形"><a href="#绘制矩形" class="headerlink" title="绘制矩形"></a>绘制矩形</h4><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">//矩形绘制</span>
ctx<span class="token punctuation">.</span><span class="token function">rect</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> width<span class="token punctuation">,</span> height<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//如果要实心的 ctx.fill()</span>
ctx<span class="token punctuation">.</span><span class="token function">stroke</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//描边矩形</span>
<span class="token comment">//代替方案</span>
ctx<span class="token punctuation">.</span><span class="token function">strokeRect</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> width<span class="token punctuation">,</span> height<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//实心的代替方案 ctx.fillRect(x,y,width,height)</span>

<span class="token comment">//橡皮擦</span>
ctx<span class="token punctuation">.</span><span class="token function">clearRect</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h4 id="绘制圆形"><a href="#绘制圆形" class="headerlink" title="绘制圆形"></a>绘制圆形</h4><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">//x,y圆心，r半径，开始，终止角度（从x正半轴开始计算），顺逆时针，默认为false，如果要调整成逆时针调整成true即可</span>
ctx<span class="token punctuation">.</span><span class="token function">arc</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">,</span>r<span class="token punctuation">,</span>startAngle<span class="token punctuation">,</span>endAngle<span class="token punctuation">,</span>anticlockwise<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//画一个半径为50px的半圆</span>
<span class="token comment">//角度是弧度制</span>
<span class="token comment">//弧度制转成角度制是Pi</span>
<span class="token comment">//π÷180x角度</span>
ctx<span class="token punctuation">.</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token number">50</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span>Mat<span class="token punctuation">.</span><span class="token constant">PI</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
ctx<span class="token punctuation">.</span><span class="token function">stroke</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//加入想要实心的，ctx.fill()</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h4 id="贝塞尔曲线"><a href="#贝塞尔曲线" class="headerlink" title="贝塞尔曲线"></a>贝塞尔曲线</h4><p>一次贝塞尔曲线</p>
<pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">//cp1x,cp1y控制点坐标</span>
<span class="token comment">//x,y曲线结束点坐标</span>
ctx<span class="token punctuation">.</span><span class="token function">quadraticCurveTo</span><span class="token punctuation">(</span>cp1x<span class="token punctuation">,</span> cp1y<span class="token punctuation">,</span> x<span class="token punctuation">,</span> y<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>

<p>二次贝塞尔曲线</p>
<pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">//cp1x,cp1y,cp2x,cp2y控制点坐标</span>
<span class="token comment">//x,y曲线结束点坐标</span>
ctx<span class="token punctuation">.</span><span class="token function">quadraticCurveTo</span><span class="token punctuation">(</span>cp1x<span class="token punctuation">,</span> cp1y<span class="token punctuation">,</span> cp2x<span class="token punctuation">,</span> cp2y<span class="token punctuation">,</span> x<span class="token punctuation">,</span> y<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>

<h4 id="文本"><a href="#文本" class="headerlink" title="文本"></a>文本</h4><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">//text文本内容，x，y坐标，可选项，最大宽度（超过了这个宽度，文字被压缩）</span>
ctx<span class="token punctuation">.</span><span class="token function">fillText</span><span class="token punctuation">(</span>text<span class="token punctuation">,</span>x<span class="token punctuation">,</span>y<span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token punctuation">,</span>maxWidth<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
ctx<span class="token punctuation">.</span><span class="token function">strokeText</span><span class="token punctuation">(</span>text<span class="token punctuation">,</span>y<span class="token punctuation">,</span>x<span class="token punctuation">[</span><span class="token punctuation">,</span>maxWidth<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//文字样式</span>
ctx<span class="token punctuation">.</span>font<span class="token comment">//与css的font属性一致</span>
ctx<span class="token punctuation">.</span>textAlign<span class="token operator">=</span><span class="token string">"left|right|center|start|end"</span><span class="token comment">//设置文本对其</span>
ctx<span class="token punctuation">.</span>textBaseLine<span class="token operator">=</span><span class="token string">"top|hanging|middle|alphabetic|ideographic|bottom"</span><span class="token comment">//设置基线对其</span>
ctx<span class="token punctuation">.</span>direction<span class="token operator">=</span><span class="token string">"ltr|rtl|inherit"</span><span class="token comment">//文字方向</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h4 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h4><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">var</span> img <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Image</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
img<span class="token punctuation">.</span>src <span class="token operator">=</span> <span class="token string">"myInamge.png"</span><span class="token punctuation">;</span>
ctx<span class="token punctuation">.</span><span class="token function">drawImage</span><span class="token punctuation">(</span>img<span class="token punctuation">,</span> x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> width<span class="token punctuation">,</span> height<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//如果图片过大</span>
img<span class="token punctuation">.</span><span class="token function-variable function">onload</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
	ctx<span class="token punctuation">.</span><span class="token function">drawImage</span><span class="token punctuation">(</span>img<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">;</span>
img<span class="token punctuation">.</span>src <span class="token operator">=</span> <span class="token string">"xxx.png"</span><span class="token punctuation">;</span>
<span class="token comment">//截取图片部分</span>
<span class="token function">drawImage</span><span class="token punctuation">(</span>image<span class="token punctuation">,</span> sx<span class="token punctuation">,</span> sy<span class="token punctuation">,</span> sWidth<span class="token punctuation">,</span> sHeight<span class="token punctuation">,</span> dx<span class="token punctuation">,</span> dy<span class="token punctuation">,</span> dWidth<span class="token punctuation">,</span> dHeight<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>前四个参数</p>
<p><img src="https://cdn.jsdelivr.net/gh/Fansirsqi/blog-Images/images/202304201226966.png"></p>
<p>后四个参数</p>
<h3 id="样式"><a href="#样式" class="headerlink" title="样式"></a>样式</h3><blockquote>
<p><code>requestAnimationFrame()</code>让浏览器执行动画的方法，要求在浏览器的下一次重绘之前调用一个指定函数来更新这次动画</p>
</blockquote>
<pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">//定义一个回调函数</span>
<span class="token keyword">function</span> <span class="token function">animate</span><span class="token punctuation">(</span><span class="token parameter">time</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
	<span class="token comment">//更新动画状态</span>
	<span class="token function">update</span><span class="token punctuation">(</span>time<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token comment">//绘制动画帧</span>
	<span class="token function">draw</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token comment">//请求下一次动画帧</span>
	window<span class="token punctuation">.</span><span class="token function">requestAnimationFrame</span><span class="token punctuation">(</span>animate<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span>
<span class="token comment">//开始动画循环</span>
window<span class="token punctuation">.</span><span class="token function">requestAnimationFrame</span><span class="token punctuation">(</span>animate<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>让我们尝试绘制一个时钟</p>
<pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">//定义一个回调函数</span>
<span class="token keyword">function</span> <span class="token function">animate</span><span class="token punctuation">(</span><span class="token parameter">time</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
    <span class="token keyword">const</span> now <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> sec <span class="token operator">=</span> now<span class="token punctuation">.</span><span class="token function">getSeconds</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> min now<span class="token punctuation">.</span><span class="token function">getMinutes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> hr <span class="token operator">=</span> now<span class="token punctuation">.</span><span class="token function">getHours</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> ctx <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"canvas"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>getContex<span class="token punctuation">;</span>
    ctx<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">//由于每一次绘制需要获取大量上下文，所以这里先save一下</span>
    ctx<span class="token punctuation">.</span><span class="token function">clearRect</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">600</span><span class="token punctuation">,</span><span class="token number">600</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//每一帧不需要保留保证不影响下一次绘制</span>
    ctx<span class="token punctuation">.</span><span class="token function">translate</span><span class="token punctuation">(</span><span class="token number">300</span><span class="token punctuation">,</span><span class="token number">300</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//坐标轴中心移动到300,300</span>
    <span class="token comment">//由于画的是表，x是横着的，不方便，给他逆时针90</span>
    ctx<span class="token punctuation">.</span><span class="token function">rotate</span><span class="token punctuation">(</span><span class="token operator">-</span>Math<span class="token punctuation">.</span><span class="token constant">PI</span><span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//设置一些样式</span>
    ctx<span class="token punctuation">.</span>strokeStyle <span class="token operator">=</span> <span class="token string">'black'</span><span class="token punctuation">;</span> <span class="token comment">//轮廓黑色</span>
    ctx<span class="token punctuation">.</span>lineWidth <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">;</span><span class="token comment">//线宽是5</span>
    ctx<span class="token punctuation">.</span>lineCap <span class="token operator">=</span> <span class="token string">'round'</span><span class="token comment">//线的末端是个小圆</span>
    <span class="token comment">//绘制之前save一下</span>
    ctx<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span><span class="token number">12</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
        ctx<span class="token punctuation">.</span><span class="token function">beginPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        ctx<span class="token punctuation">.</span><span class="token function">rotate</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token constant">PI</span><span class="token operator">/</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        ctx<span class="token punctuation">.</span><span class="token function">moveTo</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        ctx<span class="token punctuation">.</span><span class="token function">lineTo</span><span class="token punctuation">(</span><span class="token number">120</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span>
    <span class="token punctuation">&#125;</span>
    ctx<span class="token punctuation">.</span>
    ctx<span class="token punctuation">.</span><span class="token function">restore</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    ctx<span class="token punctuation">.</span><span class="token function">restore</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">//再读取，这样可以保证下一帧的时候状态是默认的，不会被上一帧所影响</span>
    <span class="token comment">//请求下一次动画帧</span>
    window<span class="token punctuation">.</span><span class="token function">requestAnimationFrame</span><span class="token punctuation">(</span>animate<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span>
<span class="token comment">//开始动画循环</span>
window<span class="token punctuation">.</span><span class="token function">requestAnimationFrame</span><span class="token punctuation">(</span>animate<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>Canvas</tag>
        <tag>前端</tag>
      </tags>
  </entry>
  <entry>
    <title>Centos开启SSH服务</title>
    <url>/2022/05/12/centos-kai-qi-ssh-fu-wu/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h3 id="Centos开启SSH服务"><a href="#Centos开启SSH服务" class="headerlink" title="Centos开启SSH服务"></a><code>Centos</code>开启SSH服务</h3><p>首先确认是否安装 <code>openssh-server</code></p>
<p>终端输入</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">yum list installed <span class="token operator">|</span><span class="token function">grep</span> openssh-server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>或者输入以下命令，查看是否安装</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">rpm</span> <span class="token parameter variable">-qa</span> <span class="token operator">|</span> <span class="token function">grep</span> <span class="token function">ssh</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>若没安装SSH则可输入：<code>yum install openssh-server</code>安装。</p>
<span id="more"></span>

<h4 id="启动SSH服务"><a href="#启动SSH服务" class="headerlink" title="启动SSH服务"></a>启动SSH服务</h4><p>输入命令：<code>systemctl restart  sshd</code> 重启SSH服务。<br>命令：<code>systemctl start sshd</code> 启动服务<br>命令：<code>systemctl stop sshd</code> 停止服务<br>重启后可输入：<code>netstat -antp | grep sshd</code> 查看是否启动22端口（可略）。<br>查看端口(用root权限用户)<code>netstat -ant |grep 22</code><br>查看进程 <code>ps -e |grep sshd</code></p>
<h4 id="设置SSH服务为开机启动"><a href="#设置SSH服务为开机启动" class="headerlink" title="设置SSH服务为开机启动"></a>设置SSH服务为开机启动</h4><p>输入命令：<code>systemctl enable sshd</code> 即可。<br>注：若是 <code>systemctl disable sshd</code> 则禁止SSH开机启动。</p>
<p><code>&lt;font color=&#39;red&#39;&gt;</code>输入执行某些命权限不够时需加sudo,或者切换root用户<code>&lt;/font&gt;</code></p>
<h4 id="关闭防火墙"><a href="#关闭防火墙" class="headerlink" title="关闭防火墙"></a>关闭防火墙</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">systemctl status firewalld.service <span class="token comment">#查看信息 看到active(running)是已开启的状态</span>
systemctl stop firewalld.service <span class="token comment">#关闭</span>
<span class="token comment">#此时再用第一条命令看到  active(dead)就OK啦</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>ssh</tag>
        <tag>centos</tag>
      </tags>
  </entry>
  <entry>
    <title>Docker 学习</title>
    <url>/2022/05/07/dockerstudy/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h3 id="如何同时运行多个容器"><a href="#如何同时运行多个容器" class="headerlink" title="如何同时运行多个容器"></a>如何同时运行多个容器</h3><h3 id="Docker-Compose"><a href="#Docker-Compose" class="headerlink" title="Docker Compose"></a>Docker Compose</h3><p>如果您已经完成了如何运行容器？指南中，您看到必须单独启动每个容器。想象一下，如果一个工具可以用一个命令启动多个容器，那该有多好。这个工具就是 <code>Docker Compose</code>。</p>
<p>如果您查看示例应用程序的代码，您会注意到它有一个 <code>compose.yaml</code>文件。这个文件告诉 <code>Docker</code>如何运行应用程序。在文本编辑器中打开 <code>compose.yaml</code>文件以浏览说明。</p>
<p>我们将在您的项目目录中使用 <code>docker compose-up</code>命令运行此应用程序。此命令构建并运行compose文件中列出的所有服务。</p>
<p>在 <code>DockerDesktop</code>中，现在应该有两个容器在运行（<code>todo</code>应用程序和 <code>todo</code>数据库）。要查看前端，请在 <code>Containers</code>中展开应用程序堆栈，然后选择指向 <code>localhost:3000</code>的链接⁠. 在前端添加一些任务，然后在新选项卡中打开应用程序。请注意，这些任务仍然可见。</p>
<p>将配置存储在 <code>Compose</code>文件中还有另一个优点，您可以轻松地删除所有内容并重新启动。只需选择应用程序堆栈，然后在 <code>Docker Desktop</code>上选择 <code>Delete</code>。当您想重新启动时，请再次在项目文件夹中运行 <code>docker compose up</code>。这将重新启动您的应用程序。请注意，当数据库容器被删除时，创建的任何 <code>todo</code>也会丢失。</p>
<h4 id="数据持久"><a href="#数据持久" class="headerlink" title="数据持久"></a>数据持久</h4><span id="more"></span>

<p>您刚刚看到了如何同时运行多个容器。但是，当数据库容器被删除并重新创建时，您丢失了所有的 <code>todo</code>。接下来，您可以学习如何将数据持久化到数据库容器中。</p>
<p>Docker将容器中的所有内容、代码和数据与本地文件系统隔离开来。这意味着，当您在Docker Desktop中删除容器时，其中的所有内容都会被删除。有时，您可能希望持久化容器生成的数据。此时可以使用卷(volumes)。</p>
<p><code>git clone https://github.com/docker/multi-container-app</code></p>
<p>把这个B仓库下下来</p>
<p>编辑 <code>docker-compose.yml</code></p>
<p>取消注释 <code>volumes</code></p>
<p>现在，无论您多久删除和重新启动一次容器，您的数据都是持久的，并且可以通过装载数据库卷对系统上的任何容器进行访问。Docker将检查一个卷，如果没有，则创建一个卷。</p>
<h1 id="问题清单"><a href="#问题清单" class="headerlink" title="问题清单"></a>问题清单</h1><h3 id="1-出现无法停止某个容器时的做法"><a href="#1-出现无法停止某个容器时的做法" class="headerlink" title="1. 出现无法停止某个容器时的做法"></a>1. 出现无法停止某个容器时的做法</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">docker</span> stop 7b115ffde399
Error response from daemon: cannot stop container: 7b115ffde399: permission denied

aa-remove-unknown<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Docker</tag>
      </tags>
  </entry>
  <entry>
    <title>Excel 学习</title>
    <url>/2019/03/03/excel-xiang-guan/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h3 id="Excel提取批注（宏命令）"><a href="#Excel提取批注（宏命令）" class="headerlink" title="Excel提取批注（宏命令）"></a>Excel提取批注（宏命令）</h3><p><code>Alt+F11</code>点击对应sheet创建模块，在相应的引用公式即可，看不到请调整字体颜色</p>
<pre class="line-numbers language-visual-basic" data-language="visual-basic"><code class="language-visual-basic"><span class="token keyword">Function</span> pz<span class="token punctuation">(</span>X <span class="token keyword">As</span> Range<span class="token punctuation">)</span>
Application<span class="token punctuation">.</span>Volatile <span class="token boolean">True</span>
pz <span class="token operator">=</span> X<span class="token punctuation">.</span>Comment<span class="token punctuation">.</span>Text
<span class="token keyword">End</span> <span class="token keyword">Function</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>

<h3 id="计算区域内-不重复字段个数"><a href="#计算区域内-不重复字段个数" class="headerlink" title="计算区域内,不重复字段个数"></a>计算区域内,不重复字段个数</h3><p><code>=SUMPRODUCT(1/COUNTIF(A1:A5997,A1:A5997))</code></p>
<h3 id="时间格式时间戳互转"><a href="#时间格式时间戳互转" class="headerlink" title="时间格式时间戳互转"></a>时间格式时间戳互转</h3><span id="more"></span>

<blockquote>
<p><span class="exturl" data-url="aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC8zOTc5NzMxNDQ=">link<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
<h4 id="时间转10位时间戳"><a href="#时间转10位时间戳" class="headerlink" title="时间转10位时间戳"></a>时间转10位时间戳</h4><p><code>INT((A2-70*365-19)*86400-8*3600)</code></p>
]]></content>
      <categories>
        <category>Excel</category>
      </categories>
      <tags>
        <tag>Excel</tag>
      </tags>
  </entry>
  <entry>
    <title>Git 的安装使用</title>
    <url>/2019/03/03/git-de-an-zhuang-shi-yong/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h2 id="Git的安装"><a href="#Git的安装" class="headerlink" title="Git的安装"></a>Git的安装</h2><p>通过 <span class="exturl" data-url="aHR0cHM6Ly9naXQtc2NtLmNvbS9kb3dubG9hZHM=">https://git-scm.com/downloads<i class="fa fa-external-link-alt"></i></span> ，git官网下载需要的版本，一路下一步安装即可</p>
<p>装好后，在电脑文件夹的任意位置右键，即可看到git相关的命令。</p>
<p>git bash是命令行工具</p>
<p>git gui是图形化工具</p>
<p>打开git bash后，输入git –version ，能正确输出版本号，则证明安装成功。</p>
<span id="more"></span>

<h2 id="基本命令"><a href="#基本命令" class="headerlink" title="基本命令"></a>基本命令</h2><h3 id="配置用户名和邮箱"><a href="#配置用户名和邮箱" class="headerlink" title="配置用户名和邮箱"></a>配置用户名和邮箱</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> config <span class="token parameter variable">--global</span> <span class="token punctuation">[</span>user.name<span class="token punctuation">]</span><span class="token punctuation">(</span>http://user.name<span class="token punctuation">)</span> ‘自己的名字’
<span class="token function">git</span> config <span class="token parameter variable">--global</span> <span class="token punctuation">[</span>user.name<span class="token punctuation">]</span><span class="token punctuation">(</span>http://user.name<span class="token punctuation">)</span> ‘自己的邮箱’<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<ul>
<li>local 只对当前仓库有效</li>
<li>global 所有仓库有效</li>
<li>system 对系统所有用户有效</li>
</ul>
<h3 id="查看配置"><a href="#查看配置" class="headerlink" title="查看配置"></a>查看配置</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> config <span class="token parameter variable">--list</span> <span class="token parameter variable">--local</span>
<span class="token function">git</span> config <span class="token parameter variable">--list</span> <span class="token parameter variable">--global</span>
<span class="token function">git</span> config <span class="token parameter variable">--list</span> <span class="token parameter variable">--system</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>

<h3 id="清除配置"><a href="#清除配置" class="headerlink" title="清除配置"></a>清除配置</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> config <span class="token parameter variable">--unset</span> <span class="token parameter variable">--local</span> <span class="token punctuation">[</span>user.name<span class="token punctuation">]</span><span class="token punctuation">(</span>http://user.name<span class="token punctuation">)</span>
<span class="token function">git</span> config <span class="token parameter variable">--unset</span> <span class="token parameter variable">--global</span> <span class="token punctuation">[</span>user.name<span class="token punctuation">]</span><span class="token punctuation">(</span>http://user.name<span class="token punctuation">)</span>
<span class="token function">git</span> config <span class="token parameter variable">--unset</span> <span class="token parameter variable">--system</span> <span class="token punctuation">[</span>user.name<span class="token punctuation">]</span><span class="token punctuation">(</span>http://user.name<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>

<h3 id="创建仓库"><a href="#创建仓库" class="headerlink" title="创建仓库"></a>创建仓库</h3><p>进入要被托管的文件夹，执行</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> init<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<h3 id="添加文件至暂存区"><a href="#添加文件至暂存区" class="headerlink" title="添加文件至暂存区"></a>添加文件至暂存区</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> <span class="token function">add</span> 文件名<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<h3 id="提交文件"><a href="#提交文件" class="headerlink" title="提交文件"></a>提交文件</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> commit <span class="token parameter variable">-m</span> <span class="token string">'描述'</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<h3 id="查看git状态"><a href="#查看git状态" class="headerlink" title="查看git状态"></a>查看git状态</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> status<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<h3 id="查看修改内容"><a href="#查看修改内容" class="headerlink" title="查看修改内容"></a>查看修改内容</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> <span class="token function">diff</span> 文件名<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<h3 id="修改文件名字"><a href="#修改文件名字" class="headerlink" title="修改文件名字"></a>修改文件名字</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> <span class="token function">mv</span> 原文件名   新文件名<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<h3 id="查看日志"><a href="#查看日志" class="headerlink" title="查看日志"></a>查看日志</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">功能为查看日志
<span class="token function">git</span> log

查看日志，以单行显示
<span class="token function">git</span> log <span class="token parameter variable">--pretty</span><span class="token operator">=</span>oneline

功能为查看历史操作记录，比如回退版本后想要重返“未来”可以查看最新的提交版本
<span class="token function">git</span> reflog<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h3 id="通过可视化工具查看提交信息"><a href="#通过可视化工具查看提交信息" class="headerlink" title="通过可视化工具查看提交信息"></a>通过可视化工具查看提交信息</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">gitk<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<h3 id="版本回退"><a href="#版本回退" class="headerlink" title="版本回退"></a>版本回退</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">退回到上一个版本
<span class="token function">git</span> reset <span class="token parameter variable">--hard</span> <span class="token function">head</span>

当知道对应的版本号时，可以用这个命令，适用于回退和前往之前的新版本
<span class="token function">git</span> reset <span class="token parameter variable">--hard</span> 版本号<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h3 id="撤销操作"><a href="#撤销操作" class="headerlink" title="撤销操作"></a>撤销操作</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">新版本git提示用该命令进行撤销
<span class="token function">git</span> restore 文件名

旧版本用此命令做撤销，新版本也可以用
<span class="token function">git</span> checkout – 文件名

如果已经add进暂存区
<span class="token function">git</span> restore <span class="token parameter variable">--staged</span> 文件名

新版本git用该命令此为旧版本git命令，新版本也可以用  
<span class="token function">git</span> reset <span class="token function">head</span> 文件名<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h3 id="删除文件"><a href="#删除文件" class="headerlink" title="删除文件"></a>删除文件</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> <span class="token function">rm</span> <span class="token parameter variable">-f</span> 文件名  <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<h2 id="使用分支"><a href="#使用分支" class="headerlink" title="使用分支"></a>使用分支</h2><h3 id="查看当前分支"><a href="#查看当前分支" class="headerlink" title="查看当前分支"></a>查看当前分支</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> branch<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<h3 id="创建dev分支并切换过去"><a href="#创建dev分支并切换过去" class="headerlink" title="创建dev分支并切换过去"></a>创建dev分支并切换过去</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">-b表示创建并切换，相当于下面两条命令
<span class="token function">git</span> checkout <span class="token parameter variable">-b</span> dev

创建分支
<span class="token function">git</span> branch dev

切换分支
<span class="token function">git</span> checkout dev<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p><strong>注意：上面是老版本的命令，创建分支和撤销都用checkout容易分不清，因此新版本创建分支推荐用</strong></p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">switch
创建并切换到dev
<span class="token function">git</span> switch <span class="token parameter variable">-c</span> dev

直接切换到已有的dev分支
<span class="token function">git</span> switch dev<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h3 id="合并分支"><a href="#合并分支" class="headerlink" title="合并分支"></a>合并分支</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">将dev分支合并到当前分支，合并后会丢失原来分支的信息
<span class="token function">git</span> merge dev

合并dev到当前分支，–no-ff表示禁用fast forwad,之后查看日志时是可以看到已被删除分支的信息
<span class="token function">git</span> merge --no-ff <span class="token parameter variable">-m</span> “merge with no-ff” dev<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h3 id="删除分支"><a href="#删除分支" class="headerlink" title="删除分支"></a>删除分支</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> branch <span class="token parameter variable">-d</span> dev
<span class="token function">git</span> branh <span class="token parameter variable">-D</span> dev<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<p>如果dev没有被合并过用大写 -D</p>
<h3 id="查看分支合并情况"><a href="#查看分支合并情况" class="headerlink" title="查看分支合并情况"></a>查看分支合并情况</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> log <span class="token parameter variable">--graph</span> <span class="token parameter variable">--pretty</span><span class="token operator">=</span>oneline --abbrev-commit<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<h3 id="stash的使用（bug分支）"><a href="#stash的使用（bug分支）" class="headerlink" title="stash的使用（bug分支）"></a>stash的使用（bug分支）</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">保存当前的工作现场
<span class="token function">git</span> stash

查看所有被保存的工作
<span class="token function">git</span> stash list

恢复并删除工作现场，等价于git stash apply + <span class="token function">git</span> stash drop
<span class="token function">git</span> stash pop<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>开发环境在dev分支下，bug修复是提交在master中，如何快速合并至dev下：转移至dev分支下，执行下面命令</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> cherry-pick bug分支的提交版本号<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<h3 id="远程克隆到本地"><a href="#远程克隆到本地" class="headerlink" title="远程克隆到本地"></a>远程克隆到本地</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> clone 自己的git项目地址<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<h3 id="关联"><a href="#关联" class="headerlink" title="关联"></a>关联</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ <span class="token function">git</span> remote <span class="token function">add</span> origin 自己的git项目地址
$ <span class="token function">git</span> remote <span class="token function">add</span> origin https://github.com/xxxx/axxxx.git<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<p>如果本地先建好了项目，那么执行这个命令将本地仓库与远程仓库关联</p>
<p>如果是本地没有项目，从远程往下拉项目则是克隆</p>
<p>备注：如果关联错了，解决办法如下</p>
<p>暴力解决：删除 <code>.git</code>文件夹，重新建立本地仓库</p>
<p>优雅解决：&#96;&#96;git remote remove origin&#96; 再重新关联仓库</p>
<p>提交代码到 GitHub 仓库</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> push origin master<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<h3 id="拉取远程的更新"><a href="#拉取远程的更新" class="headerlink" title="拉取远程的更新"></a>拉取远程的更新</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> pull<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>第一和远程关联上之后，在提交之前要先拉去一下远程的更新才行</p>
<h3 id="基本推送"><a href="#基本推送" class="headerlink" title="基本推送"></a>基本推送</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">第一次推送是要加上-u，可以把本地的master和远程的master关联起来，方便以后的推送或者拉取
<span class="token function">git</span> push <span class="token parameter variable">-u</span> origin master

之后推送可以直接用该命令
<span class="token function">git</span> push origin master<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h3 id="查看远程仓库信息"><a href="#查看远程仓库信息" class="headerlink" title="查看远程仓库信息"></a>查看远程仓库信息</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> remote

此命令可显示更详细信息
<span class="token function">git</span> remote <span class="token parameter variable">-v</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>

<h3 id="多人协作"><a href="#多人协作" class="headerlink" title="多人协作"></a>多人协作</h3><ul>
<li><strong>git checkout -b 分支名 origin&#x2F;分支名</strong>，在本地创建和远程分支对应的分支，名称最好一致</li>
<li><strong>git branch –set-upstream-to&#x3D;origin&#x2F;dev dev</strong>，建立本地分支和远程分支的关联</li>
<li><strong>git pull</strong>，先抓取远程的更新，如果有冲突，手动解决冲突</li>
<li><strong>git push origin 分支名</strong>，解决冲突后推送</li>
</ul>
<h2 id="标签"><a href="#标签" class="headerlink" title="标签"></a>标签</h2><h3 id="基本操作"><a href="#基本操作" class="headerlink" title="基本操作"></a>基本操作</h3><p>标签的作用可以简单理解为给版本起名字</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">查看所有标签
<span class="token function">git</span> tag

把当前分支的最新提交打上标签，标签名字自己起
<span class="token function">git</span> tag 标签名

把某个版本号的提交打上标签
<span class="token function">git</span> tag 标签名 对应commit版本号

可以用这种方式给标签增加说明，-a对应标签名，-m对应描述信息
<span class="token function">git</span> tag <span class="token parameter variable">-a</span> v0.1 <span class="token parameter variable">-m</span> “描述信息” 版本号

查看标签具体信息
<span class="token function">git</span> show 标签名

删除标签
<span class="token function">git</span> tag <span class="token parameter variable">-d</span> 标签名<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h3 id="推送标签"><a href="#推送标签" class="headerlink" title="推送标签"></a>推送标签</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">推送某个标签到远程
<span class="token function">git</span> push origin 标签名

推送所有标签到远程
<span class="token function">git</span> push origin <span class="token parameter variable">--tags</span>

删除远程标签：
先删除本地标签
<span class="token function">git</span> tag <span class="token parameter variable">-d</span> 标签名

然后从远程删除
<span class="token function">git</span> push origin: refs/tags/标签名<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
]]></content>
      <categories>
        <category>Git</category>
      </categories>
      <tags>
        <tag>Git安装</tag>
      </tags>
  </entry>
  <entry>
    <title>Git命令学习</title>
    <url>/2022/05/12/git-xue-xi/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p><code>git clone</code>克隆远程分支<br><code>git checkout</code>切换分支<br>默认远程分支的名字叫 <code>origin/xxx</code> 切换到远程分支会切换到分离状态</p>
<h2 id="git-fetch"><a href="#git-fetch" class="headerlink" title="git fetch"></a>git fetch</h2><h3 id="git-fetch-做了些什么"><a href="#git-fetch-做了些什么" class="headerlink" title="git fetch 做了些什么"></a>git fetch 做了些什么</h3><p><code>git fetch</code> 完成了仅有的但是很重要的两步:</p>
<ul>
<li>从远程仓库下载本地仓库中缺失的提交记录</li>
<li>更新远程分支指针(如 <code>o/main</code>)</li>
</ul>
<p><code>git fetch</code> 实际上将本地仓库中的远程分支更新成了远程仓库相应分支最新的状态。</p>
<span id="more"></span>

<p>如果你还记得上一节课程中我们说过的，远程分支反映了远程仓库在你<strong>最后一次与它通信时</strong>的状态，<code>git fetch</code> 就是你与远程仓库通信的方式了！希望我说的够明白了，你已经了解 <code>git fetch</code> 与远程分支之间的关系了吧。</p>
<p><code>git fetch</code> 通常通过互联网（使用 <code>http://</code> 或 <code>git://</code> 协议) 与远程仓库通信。</p>
<h3 id="git-fetch-不会做的事"><a href="#git-fetch-不会做的事" class="headerlink" title="git fetch 不会做的事"></a>git fetch 不会做的事</h3><p><code>git fetch</code> 并不会改变你本地仓库的状态。它不会更新你的 <code>main</code> 分支，也不会修改你磁盘上的文件。</p>
<p>理解这一点很重要，因为许多开发人员误以为执行了 <code>git fetch</code> 以后，他们本地仓库就与远程仓库同步了。它可能已经将进行这一操作所需的所有数据都下载了下来，但是<strong>并没有</strong>修改你本地的文件。我们在后面的课程中将会讲解能完成该操作的命令 :D</p>
<p>所以, 你可以将 <code>git fetch</code> 的理解为单纯的下载操作。</p>
<h2 id="Git-Pull"><a href="#Git-Pull" class="headerlink" title="Git Pull"></a>Git Pull</h2><p>既然我们已经知道了如何用 <code>git fetch</code> 获取远程的数据, 现在我们学习如何将这些变化更新到我们的工作当中。</p>
<p>其实有很多方法的 —— 当远程分支中有新的提交时，你可以像合并本地分支那样来合并远程分支。也就是说就是你可以执行以下命令:</p>
<ul>
<li><code>git cherry-pick o/main</code></li>
<li><code>git rebase o/main</code></li>
<li><code>git merge o/main</code></li>
<li>等等</li>
</ul>
<p>实际上，由于先抓取更新再合并到本地分支这个流程很常用，因此 Git 提供了一个专门的命令来完成这两个操作。它就是我们要讲的 <code>git pull</code>。</p>
<p><img src="https://cdn.jsdelivr.net/gh/Fansirsqi/blog-Images/images/202303311108334.png"></p>
<p><code>git fench</code><br><code>git merge o/main</code></p>
<p><img src="https://cdn.jsdelivr.net/gh/Fansirsqi/blog-Images/images/202303311110300.png"></p>
<p>我们用 <code>fetch</code> 下载了 <code>C3</code>, 然后通过 <code>git merge o/main</code> 合并了这一提交记录。现在我们的 <code>main</code> 分支包含了远程仓库中的更新（在本例中远程仓库名为 <code>origin</code>）</p>
<p>如果使用 <code>git pull</code> 呢?</p>
<p>其实是同样的结果！这清楚地说明了 <code>git pull</code> 就是 <code>git fetch</code> 和 <code>git merge</code> 的缩写！</p>
<h2 id="Git-Push"><a href="#Git-Push" class="headerlink" title="Git Push"></a>Git Push</h2><p>OK，我们已经学过了如何从远程仓库获取更新并合并到本地的分支当中。这非常棒……但是我如何与大家分享<strong>我的</strong>成果呢？</p>
<p>嗯，上传自己分享内容与下载他人的分享刚好相反，那与 <code>git pull</code> 相反的命令是什么呢？<code>git push</code>！</p>
<p><code>git push</code> 负责将<strong>你的</strong>变更上传到指定的远程仓库，并在远程仓库上合并你的新提交记录。一旦 <code>git push</code> 完成, 你的朋友们就可以从这个远程仓库下载你分享的成果了！</p>
<p>你可以将 <code>git push</code> 想象成发布你成果的命令。它有许多应用技巧，稍后我们会了解到，但是咱们还是先从基础的开始吧……</p>
<p><em>注意 —— <code>git push</code> 不带任何参数时的行为与 Git 的一个名为 <code>push.default</code> 的配置有关。它的默认值取决于你正使用的 Git 的版本，但是在教程中我们使用的是 <code>upstream</code>。 这没什么太大的影响，但是在你的项目中进行推送之前，最好检查一下这个配置。</em></p>
<p><img src="https://cdn.jsdelivr.net/gh/Fansirsqi/blog-Images/images/202303311121832.png"></p>
<h2 id="案例"><a href="#案例" class="headerlink" title="案例"></a>案例</h2><p>假设你周一克隆了一个仓库，然后开始研发某个新功能。到周五时，你新功能开发测试完毕，可以发布了。但是 —— 天啊！你的同事这周写了一堆代码，还改了许多你的功能中使用的 API，这些变动会导致你新开发的功能变得不可用。但是他们已经将那些提交推送到远程仓库了，因此你的工作就变成了基于项目<strong>旧版</strong>的代码，与远程仓库最新的代码不匹配了。</p>
<p>这种情况下, <code>git push</code> 就不知道该如何操作了。如果你执行 <code>git push</code>，Git 应该让远程仓库回到星期一那天的状态吗？还是直接在新代码的基础上添加你的代码，亦或由于你的提交已经过时而直接忽略你的提交？</p>
<p>因为这情况（历史偏离）有许多的不确定性，Git 是不会允许你 <code>push</code> 变更的。实际上它会强制你先合并远程最新的代码，然后才能分享你的工作。</p>
<p><img src="https://cdn.jsdelivr.net/gh/Fansirsqi/blog-Images/images/202303311124395.png"></p>
<p>我们用 <code>git fetch</code> 更新了本地仓库中的远程分支，然后用 rebase 将我们的工作移动到最新的提交记录下，最后再用 <code>git push</code> 推送到远程仓库。<br><img src="https://cdn.jsdelivr.net/gh/Fansirsqi/blog-Images/images/202303311127783.png"></p>
<p>还有其它的方法可以在远程仓库变更了以后更新我的工作吗? 当然有，我们还可以使用 <code>merge</code></p>
<p>尽管 <code>git merge</code> 不会移动你的工作（它会创建新的合并提交），但是它会告诉 Git 你已经合并了远程仓库的所有变更。这是因为远程分支现在是你本地分支的祖先，也就是说你的提交已经包含了远程分支的所有变化。</p>
<p><img src="https://cdn.jsdelivr.net/gh/Fansirsqi/blog-Images/images/202303311130949.png"></p>
<p>很好！但是要敲那么多命令，有没有更简单一点的？</p>
<p>当然 —— 前面已经介绍过 <code>git pull</code> 就是 <code>fetch</code> 和 <code>merge</code> 的简写-<code>git pull</code></p>
<p>类似的 <code>git pull --rebase</code> 就是 <code>fetch</code> 和 <code>rebase</code> 的简写！</p>
<p>让我们看看简写命令是如何工作的。</p>
<p><img src="https://cdn.jsdelivr.net/gh/Fansirsqi/blog-Images/images/202303311131580.png"></p>
]]></content>
      <categories>
        <category>Git</category>
      </categories>
      <tags>
        <tag>git</tag>
        <tag>学习</tag>
      </tags>
  </entry>
  <entry>
    <title>Shell 命令学习</title>
    <url>/2022/05/07/howtoshell/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1 id="How-To-Shell"><a href="#How-To-Shell" class="headerlink" title="How To Shell ?"></a>How To Shell ?</h1><h2 id="if-判断"><a href="#if-判断" class="headerlink" title="if 判断"></a><code>if</code> 判断</h2><p>在Shell脚本中，可以使用 <code>if</code>语句进行条件判断。<code>if</code>语句的基本结构如下：</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token keyword">if</span> <span class="token punctuation">[</span> condition <span class="token punctuation">]</span>
<span class="token keyword">then</span>
    <span class="token comment"># 执行条件为真时的操作</span>
<span class="token keyword">else</span>
    <span class="token comment"># 执行条件为假时的操作</span>
<span class="token keyword">fi</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<span id="more"></span>

<p>在上述代码中，<code>condition</code>是一个表达式，根据其结果（真或假），决定执行哪个代码块。如果 <code>condition</code>为真，则执行 <code>then</code>块中的代码；如果 <code>condition</code>为假，则执行 <code>else</code>块中的代码（如果有）。</p>
<p>下面是一些常见的条件表达式及其使用方法：</p>
<ol>
<li><p>字符串比较：</p>
<ul>
<li><code>-z string</code>：如果字符串为空，则为真。</li>
<li><code>-n string</code>：如果字符串不为空，则为真。</li>
<li><code>string1 = string2</code>：如果两个字符串相等，则为真。</li>
<li><code>string1 != string2</code>：如果两个字符串不相等，则为真。</li>
</ul>
</li>
<li><p>数值比较：</p>
<ul>
<li><code>num1 -eq num2</code>：如果num1等于num2，则为真。</li>
<li><code>num1 -ne num2</code>：如果num1不等于num2，则为真。</li>
<li><code>num1 -lt num2</code>：如果num1小于num2，则为真。</li>
<li><code>num1 -gt num2</code>：如果num1大于num2，则为真。</li>
<li><code>num1 -le num2</code>：如果num1小于或等于num2，则为真。</li>
<li><code>num1 -ge num2</code>：如果num1大于或等于num2，则为真。</li>
</ul>
</li>
<li><p>文件&#x2F;目录判断：</p>
<ul>
<li><code>-e file</code>：如果文件&#x2F;目录存在，则为真。</li>
<li><code>-f file</code>：如果文件存在且为普通文件，则为真。</li>
<li><code>-d directory</code>：如果目录存在，则为真。</li>
</ul>
</li>
</ol>
<p>下面是一个简单的示例，演示如何在Shell中使用 <code>if</code>语句进行条件判断：</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token shebang important">#!/bin/bash</span>

<span class="token assign-left variable">number</span><span class="token operator">=</span><span class="token number">42</span>

<span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token variable">$number</span> <span class="token parameter variable">-eq</span> <span class="token number">42</span> <span class="token punctuation">]</span>
<span class="token keyword">then</span>
    <span class="token builtin class-name">echo</span> <span class="token string">"The number is 42."</span>
<span class="token keyword">else</span>
    <span class="token builtin class-name">echo</span> <span class="token string">"The number is not 42."</span>
<span class="token keyword">fi</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>在上述示例中，如果 <code>$number</code>的值等于42，则输出”The number is 42.”，否则输出”The number is not 42.”。</p>
<p>请注意，Shell中的条件表达式要用方括号 <code>[]</code>括起来，并且每个表达式的左右两侧都要有空格。另外，<code>then</code>和 <code>else</code>之后需要用换行符或分号 <code>;</code>分隔。</p>
<h2 id="case-跳转"><a href="#case-跳转" class="headerlink" title="case 跳转"></a><code>case</code> 跳转</h2><p>在Shell脚本中，<code>case</code>语句用于根据变量的不同取值执行不同的操作。<code>case</code>语句的基本结构如下：</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token keyword">case</span> variable <span class="token keyword">in</span>
    pattern1<span class="token punctuation">)</span>
        <span class="token comment"># 如果 variable 匹配 pattern1，则执行对应操作</span>
        <span class="token punctuation">;</span><span class="token punctuation">;</span>
    pattern2<span class="token punctuation">)</span>
        <span class="token comment"># 如果 variable 匹配 pattern2，则执行对应操作</span>
        <span class="token punctuation">;</span><span class="token punctuation">;</span>
    pattern3<span class="token punctuation">)</span>
        <span class="token comment"># 如果 variable 匹配 pattern3，则执行对应操作</span>
        <span class="token punctuation">;</span><span class="token punctuation">;</span>
    *<span class="token punctuation">)</span>
        <span class="token comment"># 如果 variable 不匹配任何 pattern，则执行默认操作</span>
        <span class="token punctuation">;</span><span class="token punctuation">;</span>
<span class="token keyword">esac</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>在上述代码中，<code>variable</code>是需要进行匹配的变量，<code>pattern</code>是要匹配的模式，<code>;;</code>表示一个模式匹配结束，<code>*</code>表示默认情况下的操作。</p>
<p>下面是一个示例，演示如何在Shell中使用 <code>case</code>语句：</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token shebang important">#!/bin/bash</span>

<span class="token assign-left variable">fruit</span><span class="token operator">=</span><span class="token string">"apple"</span>

<span class="token keyword">case</span> <span class="token variable">$fruit</span> <span class="token keyword">in</span>
    <span class="token string">"apple"</span><span class="token punctuation">)</span>
        <span class="token builtin class-name">echo</span> <span class="token string">"It's an apple."</span>
        <span class="token punctuation">;</span><span class="token punctuation">;</span>
    <span class="token string">"banana"</span><span class="token punctuation">)</span>
        <span class="token builtin class-name">echo</span> <span class="token string">"It's a banana."</span>
        <span class="token punctuation">;</span><span class="token punctuation">;</span>
    <span class="token string">"orange"</span><span class="token punctuation">)</span>
        <span class="token builtin class-name">echo</span> <span class="token string">"It's an orange."</span>
        <span class="token punctuation">;</span><span class="token punctuation">;</span>
    *<span class="token punctuation">)</span>
        <span class="token builtin class-name">echo</span> <span class="token string">"It's an unknown fruit."</span>
        <span class="token punctuation">;</span><span class="token punctuation">;</span>
<span class="token keyword">esac</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>在上述示例中，根据 <code>$fruit</code>的取值，<code>case</code>语句会匹配相应的模式，并执行对应的操作。如果 <code>$fruit</code>是”apple”，则输出”It’s an apple.”；如果 <code>$fruit</code>是”banana”，则输出”It’s a banana.”；如果 <code>$fruit</code>是”orange”，则输出”It’s an orange.”；如果 <code>$fruit</code>不匹配任何模式，则输出”It’s an unknown fruit.”。</p>
<p>请注意，在每个模式结束时，需要使用 <code>;;</code>表示匹配结束，以确保只执行对应的操作块。最后，<code>esac</code>表示 <code>case</code>语句的结束。</p>
<h2 id="read-读取"><a href="#read-读取" class="headerlink" title="read 读取"></a><code>read</code> 读取</h2><p>在Shell脚本中，<code>read</code>命令用于从标准输入（通常是键盘）读取用户输入，并将输入的值赋给一个或多个变量。<code>read</code>命令的基本语法如下：</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">read</span> <span class="token punctuation">[</span>options<span class="token punctuation">]</span> variable1 variable2 <span class="token punctuation">..</span>.<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>在上述语法中，<code>variable1</code>、<code>variable2</code>等是要接收输入值的变量名。当用户输入完成后，<code>read</code>命令将输入值赋给这些变量。</p>
<p>以下是一些常用的 <code>read</code>命令选项：</p>
<ul>
<li><code>-p prompt</code>：显示一个提示符 <code>prompt</code>，然后等待用户输入。</li>
<li><code>-s</code>：静默模式，用户输入时不显示在屏幕上，用于处理密码等敏感信息。</li>
<li><code>-t timeout</code>：设置超时时间（秒），如果用户在指定的超时时间内未输入，则 <code>read</code>命令会退出。</li>
</ul>
<p>下面是一个简单的示例，演示如何在Shell中使用 <code>read</code>命令：</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token shebang important">#!/bin/bash</span>

<span class="token builtin class-name">echo</span> <span class="token string">"Please enter your name:"</span>
<span class="token builtin class-name">read</span> name

<span class="token builtin class-name">echo</span> <span class="token string">"Please enter your age:"</span>
<span class="token builtin class-name">read</span> age

<span class="token builtin class-name">echo</span> <span class="token string">"Hello, <span class="token variable">$name</span>! You are <span class="token variable">$age</span> years old."</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>在上述示例中，首先显示提示信息，要求用户输入姓名。然后，<code>read</code>命令将用户输入的值赋给变量 <code>name</code>。接着，显示另一个提示信息，要求用户输入年龄。再次使用 <code>read</code>命令将用户输入的值赋给变量 <code>age</code>。最后，脚本会输出类似于”Hello, John! You are 30 years old.”的消息，其中 <code>$name</code>和 <code>$age</code>会被用户输入的值替换。</p>
<p>当脚本执行到 <code>read</code>命令时，它会等待用户输入，并在用户按下回车键后继续执行下一条命令。</p>
<h2 id="echo-输出"><a href="#echo-输出" class="headerlink" title="echo 输出"></a><code>echo</code> 输出</h2><p>在Shell脚本中，<code>echo</code>命令用于在终端上输出文本或变量的值。<code>echo</code>命令的基本语法如下：</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">echo</span> <span class="token punctuation">[</span>options<span class="token punctuation">]</span> <span class="token punctuation">[</span>string<span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>在上述语法中，<code>string</code>是要输出的文本或变量。<code>echo</code>命令会将该文本或变量的值显示在终端上。</p>
<p>以下是一些常用的 <code>echo</code>命令选项：</p>
<ul>
<li><code>-n</code>：不输出行末的换行符，即不换行。</li>
<li><code>-e</code>：启用特殊字符的解析。例如，可以使用 <code>\n</code>表示换行符、<code>\t</code>表示制表符等。</li>
</ul>
<p>下面是一些示例，演示了在Shell中使用 <code>echo</code>命令的不同用法：</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token shebang important">#!/bin/bash</span>

<span class="token comment"># 输出文本</span>
<span class="token builtin class-name">echo</span> <span class="token string">"Hello, World!"</span>

<span class="token comment"># 输出变量的值</span>
<span class="token assign-left variable">name</span><span class="token operator">=</span><span class="token string">"John"</span>
<span class="token builtin class-name">echo</span> <span class="token string">"My name is <span class="token variable">$name</span>."</span>

<span class="token comment"># 不换行输出</span>
<span class="token builtin class-name">echo</span> <span class="token parameter variable">-n</span> <span class="token string">"This is "</span>
<span class="token builtin class-name">echo</span> <span class="token string">"a single line."</span>

<span class="token comment"># 解析特殊字符</span>
<span class="token builtin class-name">echo</span> <span class="token parameter variable">-e</span> <span class="token string">"Line 1<span class="token entity" title="\n">\n</span>Line 2<span class="token entity" title="\t">\t</span>Tabbed"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>在上述示例中，<code>echo</code>命令用于输出不同的信息。第一个 <code>echo</code>语句输出字符串”Hello, World!”。第二个 <code>echo</code>语句输出变量 <code>$name</code>的值，结果为”My name is John.”。第三个 <code>echo</code>语句使用了 <code>-n</code>选项，不会在输出之后换行，而是继续输出下一个 <code>echo</code>语句的内容。最后一个 <code>echo</code>语句使用了 <code>-e</code>选项，并在字符串中使用了特殊字符 <code>\n</code>表示换行和 <code>\t</code>表示制表符，输出两行文本和一个制表符。</p>
<p>需要注意的是，当输出字符串包含变量时，可以使用双引号或不使用引号。双引号将允许解析变量的值，而不使用引号将直接将变量和文本拼接输出。</p>
<p>这就是在Shell中使用 <code>echo</code>命令输出文本或变量的基本方法。如有任何进一步的问题，请随时提问。</p>
<h2 id="exit-1-非零状态-yi’chang-退出"><a href="#exit-1-非零状态-yi’chang-退出" class="headerlink" title="exit 1 非零状态[yi’chang]退出"></a><code>exit 1</code> 非零状态[yi’chang]退出</h2><p>在Shell脚本中，<code>exit 1</code>表示脚本以非零的状态码退出。<code>exit</code>命令用于终止当前正在执行的Shell脚本，并指定一个退出状态码。</p>
<p>在Unix和类Unix系统中，退出状态码是一个用于表示脚本执行结果的整数值。按照约定，如果脚本成功执行并且没有错误，退出状态码为0。非零的退出状态码通常表示脚本执行过程中发生了错误或异常。</p>
<p><code>exit 1</code>表示脚本以状态码1退出，它通常用于指示脚本执行失败或遇到了某种错误情况。状态码可以是从1到255的任何整数值。具体状态码的含义可以根据脚本的需要进行定义和解释。</p>
<p>当脚本执行到 <code>exit 1</code>时，它将立即终止脚本的执行，并将状态码1返回给调用脚本的进程。在命令行中执行脚本时，可以通过特殊变量 <code>$?</code>来获取最后一次执行的命令的退出状态码。</p>
<p>以下是一个示例，展示了在脚本中使用 <code>exit 1</code>的情况：</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token shebang important">#!/bin/bash</span>

<span class="token comment"># 检查文件是否存在</span>
<span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token operator">!</span> <span class="token parameter variable">-f</span> <span class="token string">"myfile.txt"</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>
  <span class="token builtin class-name">echo</span> <span class="token string">"File not found."</span>
  <span class="token builtin class-name">exit</span> <span class="token number">1</span>
<span class="token keyword">fi</span>

<span class="token comment"># 执行其他操作</span>
<span class="token comment"># ...</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>在上述示例中，脚本首先检查文件 <code>myfile.txt</code>是否存在。如果文件不存在，脚本将输出一条错误消息，并使用 <code>exit 1</code>退出状态码1来表示脚本执行失败。</p>
<p>通过使用适当的退出状态码，可以在脚本执行期间检测和处理错误情况，以便在脚本结束后能够了解脚本的执行结果。</p>
<p>希望这个解释对你有帮助。如果还有其他问题，请随时提问。</p>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>shell</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux 系统通过openssl命令生成ssl 证书</title>
    <url>/2022/05/07/linux-xi-tong-tong-guo-openssl-ming-ling-sheng-cheng-ssl-zheng-shu/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h3 id="Linux-系统通过openssl命令生成ssl-证书。"><a href="#Linux-系统通过openssl命令生成ssl-证书。" class="headerlink" title="Linux 系统通过openssl命令生成ssl 证书。"></a>Linux 系统通过openssl命令生成ssl 证书。</h3><p>首先执行如下命令生成一个key</p>
<p><code>openssl genrsa -des3 -out ssl.key 1024</code></p>
<p>然后他会要求你输入这个key文件的密码。不推荐输入。因为以后要给nginx使用。每次reload nginx配置时候都要你验证这个PAM密码的。<br>由于生成时候必须输入密码。你可以输入后 再删掉。</p>
<p><code>mv ssl.key xxx.key openssl rsa -in xxx.key -out ssl.key rm xxx.key</code></p>
<p>然后根据这个key文件生成证书请求文件</p>
<span id="more"></span>

<p><code>openssl req -new -key ssl.key -out ssl.csr</code></p>
<p>以上命令生成时候要填很多东西 一个个看着写吧（可以随便，毕竟这是自己生成的证书）</p>
<p>最后根据这2个文件生成crt证书文件</p>
<p><code>openssl x509 -req -days 365 -in ssl.csr -signkey ssl.key -out ssl.crt</code></p>
<p>这里365是证书有效期 。这个大家随意。最后使用到的文件是key和crt文件。</p>
<p>如果需要用pfx 可以用以下命令生成</p>
<p><code>openssl pkcs12 -export -inkey ssl.key -in ssl.crt -out ssl.pfx</code></p>
<p>在需要使用证书的nginx配置文件的server节点里加入以下配置就可以了。</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">server <span class="token punctuation">&#123;</span>
listen <span class="token number">443</span><span class="token punctuation">;</span>
server_name bbs.nau.edu.cn<span class="token punctuation">;</span>

<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$uri</span> <span class="token operator">!</span>~ *<span class="token string">"/logging.php$"</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
rewrite ^/<span class="token punctuation">(</span>.*<span class="token punctuation">)</span>$ <span class="token punctuation">[</span>http://<span class="token variable">$host</span>/<span class="token variable">$1</span><span class="token punctuation">]</span><span class="token punctuation">(</span>http://%24host/%241<span class="token punctuation">)</span> redirect<span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span>
ssl on<span class="token punctuation">;</span>
ssl_certificate /home/ssl.crt<span class="token punctuation">;</span>
ssl_certificate_key /home/ssl.key<span class="token punctuation">;</span>
ssl_session_timeout 5m<span class="token punctuation">;</span>
ssl_protocols SSLv2 SSLv3 TLSv1<span class="token punctuation">;</span>
ssl_ciphers ALL:<span class="token operator">!</span>ADH:<span class="token operator">!</span>EXPORT56:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv2:+EXP<span class="token punctuation">;</span>
ssl_prefer_server_ciphers on<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>SSL证书</tag>
        <tag>生成SSL证书</tag>
        <tag>网站证书</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux设置用户名密码</title>
    <url>/2022/05/12/linux-she-zhi-root-mi-ma/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h3 id="Linux修改-root用户密码"><a href="#Linux修改-root用户密码" class="headerlink" title="Linux修改 root用户密码"></a><code>Linux</code>修改 <code>root</code>用户密码</h3><p>有些发行版 <code>Linux</code>安装好后，root初始密码（默认密码）不知道，<br>当你从输入 <code>su - root</code>或者 <code>sudo</code>会提示鉴权失败!<br>其实su的密码需要我们设置一下。</p>
<span id="more"></span>

<ol>
<li>在普通用户状态下</li>
<li><code>sudo passwd</code>  Enter</li>
<li>输入新密码，重复输入密码，最后提示 <code>passwd:password updated sucessfully</code>此时已完成root密码的设置</li>
<li>输入：<code>su - root</code>切换用户到root试试…….</li>
<li>大功告成!</li>
</ol>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>修改root用户密码</tag>
      </tags>
  </entry>
  <entry>
    <title>P2P终结者-绿色高级版</title>
    <url>/2023/03/27/p2p-zhong-jie-zhe-lu-se-gao-ji-ban/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h2 id="P2P-终结者是什么"><a href="#P2P-终结者是什么" class="headerlink" title="P2P 终结者是什么"></a>P2P 终结者是什么</h2><p><code>P2P终结者</code>是由 Net.Soft 工作室开发的一套专门用来控制企业网络 P2P 下载流量的网络管理软件。软件针对目前 P2P 软件过多占用带宽的问题，提供了一个非常简单的解决方案。软件基于底层协议分析处理实现，具有很好的透明性。软件可以适应绝大多数网络环境，包括代理服务器、ADSL 路由器共享上网，Lan 专线等网络接入环境。</p>
<ol>
<li>软件的使用前提：<br>p2p 终结者使用的前提是：对方主机没有开启 ARP 防火墙，但实际上，目前任何一款桌面软件包括 360 卫士，金山卫士等，默认的都是开启了 ARP 防火墙。只要对方开启了 ARP 防火墙，P2P 终结者就无法再进行控制，相反只会增加整个局域网的负荷。所以就目前而言，想通过 P2P 终结者控制对方主机的网速基本上是不可能。</li>
<li>软件的副作用：<br>软件通过截获路由器数据包，修改 IP 以及 MAC 缓存，从而达到控制网速的目的，简单一点去理解的话，P2P 终结者就是通过不停的“攻击”路由器，从而达到控制网速的目的，也正是因为 P2P 终结者的这种攻击，导致整个网络的负荷严重增加。<br><code>&lt;font color=&quot;#f00&quot;&gt;</code>经过测试发现：开启了 p2p 终结者的局域网，ping 测试结果，有明显的“掉链”现象。p2p 终结者已经严重的影响了整个局域网的网速，所以在这里必须提醒大家，在不使用的情况下，一定要退出该程序。<br>本段主要功能<code>&lt;/font&gt;</code></li>
</ol>
<h2 id="P2P-终结者具有以下功能："><a href="#P2P-终结者具有以下功能：" class="headerlink" title="P2P 终结者具有以下功能："></a>P2P 终结者具有以下功能：</h2><span id="more"></span>

<ol>
<li>支持目前主流 P2P 协议控制(Bittorent,BaiduX,PP,Poco,Kamun,Thunder,Kugoo,eMule 等).</li>
<li>支持 P2P 下载带宽限制自定义.</li>
<li>支持指定主机全局带宽限制.</li>
<li>主机网络带宽实时查看功能，可以使网络管理员对网络带宽使用情况做到一目了然.</li>
<li>完全集成一些网络攻击工具的断开公网连接功能.</li>
<li>IP-MAC 绑定控制功能.</li>
<li>网络主机通讯详细信息(IP 报文内容分析)实时查看功能.</li>
<li>HTTP 下载自定义文件后缀控制功能.</li>
<li>FTP 下载限制功能.</li>
<li>WWW 站点自定义控制功能，支持黑名单、白名单方式.</li>
<li>QQ,MSN，PoPo,UC 聊天工具控制功能.</li>
<li>控制日志记录.</li>
<li>局域网非法 Sniffer 主机检测功能.</li>
</ol>
<p><img src="https://cdn.jsdelivr.net/gh/Fansirsqi/blog-Images/images/202303281033019.png"></p>
<p>下载地址：<br><span class="exturl" data-url="aHR0cHM6Ly9mYW5zaXJzLmxhbnpvdWIuY29tL2lUd0FQMHJhd2h6Yw==">兰奏云<i class="fa fa-external-link-alt"></i></span></p>
]]></content>
      <categories>
        <category>坏软分享</category>
      </categories>
      <tags>
        <tag>PC软件</tag>
        <tag>网络拦截</tag>
      </tags>
  </entry>
  <entry>
    <title>Pandas</title>
    <url>/2021/10/22/pandas/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>用值列表生成 <span class="exturl" data-url="aHR0cHM6Ly9wYW5kYXMucHlkYXRhLm9yZy9wYW5kYXMtZG9jcy9zdGFibGUvcmVmZXJlbmNlL2FwaS9wYW5kYXMuU2VyaWVzLmh0bWwjcGFuZGFzLlNlcmllcw==">Series<i class="fa fa-external-link-alt"></i></span> 时，Pandas 默认自动生成整数索引：</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python">In <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">:</span> s <span class="token operator">=</span> pd<span class="token punctuation">.</span>Series<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> np<span class="token punctuation">.</span>nan<span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

In <span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">:</span> s
Out<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">:</span> 
<span class="token number">0</span>    <span class="token number">1.0</span>
<span class="token number">1</span>    <span class="token number">3.0</span>
<span class="token number">2</span>    <span class="token number">5.0</span>
<span class="token number">3</span>    NaN
<span class="token number">4</span>    <span class="token number">6.0</span>
<span class="token number">5</span>    <span class="token number">8.0</span>


dtype<span class="token punctuation">:</span> float64<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<span id="more"></span>

<p>用含日期时间索引与标签的 NumPy 数组生成 <span class="exturl" data-url="aHR0cHM6Ly9wYW5kYXMucHlkYXRhLm9yZy9wYW5kYXMtZG9jcy9zdGFibGUvcmVmZXJlbmNlL2FwaS9wYW5kYXMuRGF0YUZyYW1lLmh0bWwjcGFuZGFzLkRhdGFGcmFtZQ==">DataFrame<i class="fa fa-external-link-alt"></i></span></p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python">In <span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">:</span> dates <span class="token operator">=</span> pd<span class="token punctuation">.</span>date_range<span class="token punctuation">(</span><span class="token string">'20130101'</span><span class="token punctuation">,</span> periods<span class="token operator">=</span><span class="token number">6</span><span class="token punctuation">)</span>

In <span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">:</span> dates
Out<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">:</span> 
DatetimeIndex<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'2013-01-01'</span><span class="token punctuation">,</span> <span class="token string">'2013-01-02'</span><span class="token punctuation">,</span> <span class="token string">'2013-01-03'</span><span class="token punctuation">,</span> <span class="token string">'2013-01-04'</span><span class="token punctuation">,</span>
               <span class="token string">'2013-01-05'</span><span class="token punctuation">,</span> <span class="token string">'2013-01-06'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
              dtype<span class="token operator">=</span><span class="token string">'datetime64[ns]'</span><span class="token punctuation">,</span> freq<span class="token operator">=</span><span class="token string">'D'</span><span class="token punctuation">)</span>

In <span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">:</span> df <span class="token operator">=</span> pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span>np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>randn<span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">,</span> index<span class="token operator">=</span>dates<span class="token punctuation">,</span> columns<span class="token operator">=</span><span class="token builtin">list</span><span class="token punctuation">(</span><span class="token string">'ABCD'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

In <span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">:</span> df
Out<span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">:</span> 
                   A         B         C         D
<span class="token number">2013</span><span class="token operator">-</span><span class="token number">01</span><span class="token operator">-</span><span class="token number">01</span>  <span class="token number">0.469112</span> <span class="token operator">-</span><span class="token number">0.282863</span> <span class="token operator">-</span><span class="token number">1.509059</span> <span class="token operator">-</span><span class="token number">1.135632</span>
<span class="token number">2013</span><span class="token operator">-</span><span class="token number">01</span><span class="token operator">-</span><span class="token number">02</span>  <span class="token number">1.212112</span> <span class="token operator">-</span><span class="token number">0.173215</span>  <span class="token number">0.119209</span> <span class="token operator">-</span><span class="token number">1.044236</span>
<span class="token number">2013</span><span class="token operator">-</span><span class="token number">01</span><span class="token operator">-</span><span class="token number">03</span> <span class="token operator">-</span><span class="token number">0.861849</span> <span class="token operator">-</span><span class="token number">2.104569</span> <span class="token operator">-</span><span class="token number">0.494929</span>  <span class="token number">1.071804</span>
<span class="token number">2013</span><span class="token operator">-</span><span class="token number">01</span><span class="token operator">-</span><span class="token number">04</span>  <span class="token number">0.721555</span> <span class="token operator">-</span><span class="token number">0.706771</span> <span class="token operator">-</span><span class="token number">1.039575</span>  <span class="token number">0.271860</span>
<span class="token number">2013</span><span class="token operator">-</span><span class="token number">01</span><span class="token operator">-</span><span class="token number">05</span> <span class="token operator">-</span><span class="token number">0.424972</span>  <span class="token number">0.567020</span>  <span class="token number">0.276232</span> <span class="token operator">-</span><span class="token number">1.087401</span>
<span class="token number">2013</span><span class="token operator">-</span><span class="token number">01</span><span class="token operator">-</span><span class="token number">06</span> <span class="token operator">-</span><span class="token number">0.673690</span>  <span class="token number">0.113648</span> <span class="token operator">-</span><span class="token number">1.478427</span>  <span class="token number">0.524988</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>Pandas</tag>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>QSGIN</title>
    <url>/2023/03/27/qsgin/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h2 id="QSGIN"><a href="#QSGIN" class="headerlink" title="QSGIN"></a>QSGIN</h2><p><code>docker run -d --restart=always --name qsign -p &#123;host_port&#125;:&#123;internal_port&#125; -e BASE_PATH=/srv/qsign/qsign/txlib/&#123;version&#125; -v &#123;host_abs_config.json_path&#125;:/srv/qsign/qsign/txlib/&#123;version&#125;/config.json xzhouqd/qsign:core-&#123;core-ver&#125;</code></p>
<pre class="line-numbers language-none"><code class="language-none">host_port: 宿主机侧访问的端口
internal_port: 容器内服务端口（在config.json配置！）
host_abs_config.json_path: 宿主机侧config.json文件绝对路径
version: 协议版本号，如8.9.63
core-ver: 核心版本号，如1.1.7
两个版本号的搭配见上方镜像tag与包含协议txlib情况表格<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<span id="more"></span>

<p><code>docker run -d --restart=always --name qsign -p 13579:8080 -e BASE_PATH=/srv/qsign/qsign/txlib/8.9.63 xzhouqd/qsign:core-1.1.7b2</code></p>
<p><code>docker run -d --restart=always --name qsign -p 13579:8080 -e BASE_PATH=/srv/qsign/qsign/txlib/8.9.63 -v /root/qsigin/config.json:/srv/qsign/qsign/txlib/8.9.63/config.json xzhouqd/qsign:core-1.1.7b2</code></p>
<p><code>docker run -d --restart=always --name qsign -p 13579:8080 -e ANDROID_ID=e5237330b4a3f578 -e BASE_PATH=/srv/qsign/qsign/txlib/8.9.63 -v /root/qsigin/config.json:/srv/qsign/qsign/txlib/8.9.63/config.json xzhouqd/qsign:8.9.63</code></p>
<p><code>ANDROID_ID=e5237330b4a3f578</code></p>
<h1 id="出现无法停止某个容器时的做法"><a href="#出现无法停止某个容器时的做法" class="headerlink" title="出现无法停止某个容器时的做法"></a>出现无法停止某个容器时的做法</h1><p><code>docker stop 7b115ffde399</code><br><code>Error response from daemon: cannot stop container: 7b115ffde399: permission denied</code></p>
<p><code>aa-remove-unknown</code></p>
]]></content>
      <categories>
        <category>Other</category>
      </categories>
      <tags>
        <tag>QSGIN</tag>
        <tag>qq机器人</tag>
      </tags>
  </entry>
  <entry>
    <title>SQL 入门</title>
    <url>/2021/11/10/sql-ru-men-xiao-ji/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>创建<br>怎么创建?<br>数据类型<br>表的列,字段<br>创建表</p>
<h3 id="SQL-Plus命令行工具"><a href="#SQL-Plus命令行工具" class="headerlink" title="SQL*Plus命令行工具"></a>SQL*Plus命令行工具</h3><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">sqlplus <span class="token operator">/</span>nolog
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<span id="more"></span>

<p>只是启动了一个客户端进程，并没有与服务器连接，连接到 <code>Oracle</code>服务器的命令是：</p>
<p><code>conn</code> 用户名&#x2F;密码 <code>as</code> 连接身份</p>
<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">conn system<span class="token operator">/</span>admin <span class="token keyword">as</span> sysdba
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>Oracle服务开关闭用命令：</p>
<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">startup <span class="token keyword">open</span>
<span class="token keyword">shutdown</span> immediate
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">--注释</span>
<span class="token comment">--鼠标选中执行语句</span>

<span class="token keyword">create</span> <span class="token keyword">table</span> table_name <span class="token comment">--创建表</span>
<span class="token punctuation">(</span>xuehao number<span class="token punctuation">,</span>
name var<span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
English mubmer<span class="token punctuation">,</span>
shuxue number<span class="token punctuation">,</span>
yuwen mubmer<span class="token punctuation">,</span>
dili mubmer<span class="token punctuation">,</span>
wuli mubmer
<span class="token punctuation">)</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h3 id="查询列-逐步添加条件"><a href="#查询列-逐步添加条件" class="headerlink" title="查询列,逐步添加条件"></a>查询列,逐步添加条件</h3><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> table_name <span class="token comment">--查询该表*(所有列)</span>

<span class="token keyword">select</span> yuwen <span class="token keyword">from</span> table_name <span class="token comment">--查询指定的列名(yuwen)</span>

<span class="token keyword">select</span> yuwen <span class="token keyword">from</span> table_name <span class="token keyword">where</span> yingyu<span class="token operator">&lt;</span><span class="token string">'90'</span> <span class="token comment">--查询英yingyu于90的yuwen数据</span>

<span class="token keyword">select</span> yuwen <span class="token keyword">from</span> table_name <span class="token keyword">where</span> yingyu<span class="token operator">></span><span class="token string">'90'</span> <span class="token operator">and</span> yingyu<span class="token operator">&lt;=</span><span class="token string">'120'</span> <span class="token comment">--查询英yingyu大于90小于等于120 的yuwen数据</span>

<span class="token keyword">select</span> yuwen <span class="token keyword">from</span> table_name <span class="token keyword">where</span> yingyu<span class="token operator">></span><span class="token string">'90'</span> <span class="token operator">and</span> yingyu<span class="token operator">&lt;=</span><span class="token string">'120'</span> <span class="token keyword">order</span> <span class="token keyword">by</span> yuwen <span class="token keyword">desc</span><span class="token operator">/</span><span class="token keyword">asc</span><span class="token punctuation">;</span>
<span class="token comment">-- 查询英yingyu大于90小于等于120 的yuwen数据并且按(降序/升序)排列</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p><strong>修改表中数据</strong></p>
<blockquote>
<p>更新数据</p>
</blockquote>
<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">update</span> table_name <span class="token keyword">set</span> yuwen<span class="token operator">=</span><span class="token string">'150'</span> <span class="token keyword">where</span> yingyu<span class="token operator">=</span><span class="token string">'120'</span>
<span class="token comment">--插入,修改,更新数据,yuwen=120,条件是yingyu=120该行</span>

<span class="token keyword">delete</span> <span class="token keyword">from</span> table_name
<span class="token comment">--删除该表所有数据</span>

<span class="token keyword">delete</span> <span class="token keyword">from</span> table_name <span class="token keyword">where</span> yingyu<span class="token operator">=</span><span class="token string">'120'</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<blockquote>
<p>插入数据</p>
</blockquote>
<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">insert</span> <span class="token keyword">into</span> table_name <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">'001'</span><span class="token punctuation">,</span><span class="token string">'zhangsan'</span><span class="token punctuation">,</span><span class="token string">'120'</span><span class="token punctuation">,</span><span class="token string">'150'</span><span class="token punctuation">,</span><span class="token string">'135'</span><span class="token punctuation">,</span><span class="token string">'60'</span><span class="token punctuation">,</span><span class="token string">'120'</span><span class="token punctuation">)</span> <span class="token comment">--插入数据</span>
<span class="token comment">--插入一行xuehao=001,name=zhangsan....wuli=120</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">create</span> <span class="token keyword">table</span> s_test
<span class="token punctuation">(</span>id number<span class="token punctuation">,</span>        <span class="token comment">--编号</span>
name varchar2<span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  <span class="token comment">--姓名</span>
addr varchar2<span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  <span class="token comment">--地址</span>
score number        <span class="token comment">--分数</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">--向s_test 表插入如下数据</span>
<span class="token comment">--   id    name         addr               score</span>
<span class="token comment">--   1    zhangsan</span>
<span class="token comment">--   2    lishi</span>
<span class="token comment">--   3    wangwu     shenzhen futian</span>
<span class="token keyword">insert</span> <span class="token keyword">into</span> s_test <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">'1'</span><span class="token punctuation">,</span><span class="token string">'zhangsan'</span><span class="token punctuation">,</span><span class="token boolean">null</span><span class="token punctuation">,</span><span class="token boolean">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">insert</span> <span class="token keyword">into</span> s_test <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">'2'</span><span class="token punctuation">,</span><span class="token string">'lishi'</span><span class="token punctuation">,</span><span class="token boolean">null</span><span class="token punctuation">,</span><span class="token boolean">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">insert</span>  <span class="token keyword">into</span> s_test <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">'3'</span><span class="token punctuation">,</span><span class="token string">'wangwu'</span><span class="token punctuation">,</span><span class="token string">'futian '</span><span class="token punctuation">,</span><span class="token boolean">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">update</span> s_test <span class="token keyword">set</span> addr<span class="token operator">=</span><span class="token string">'china guandon'</span> <span class="token keyword">where</span> id<span class="token operator">=</span><span class="token string">'2'</span><span class="token punctuation">;</span><span class="token comment">--3. 将s_test中id等于2的addr内容更改为 china guandon;</span>
<span class="token keyword">update</span> s_test <span class="token keyword">set</span>  addr<span class="token operator">=</span><span class="token string">'american'</span> <span class="token keyword">where</span>  id<span class="token operator">=</span><span class="token string">'3'</span><span class="token punctuation">;</span><span class="token comment">-- 将s_test中id等于3的addr内容更改为 american;</span>
<span class="token keyword">update</span> s_test <span class="token keyword">set</span> score<span class="token operator">=</span><span class="token string">'99'</span> <span class="token keyword">where</span> id<span class="token operator">=</span><span class="token string">'1'</span><span class="token punctuation">;</span><span class="token comment">-- 将s_test中id等于1的score内容更改为99;</span>
<span class="token keyword">update</span> s_test <span class="token keyword">set</span> score<span class="token operator">=</span><span class="token string">'80'</span> <span class="token keyword">where</span> id<span class="token operator">=</span><span class="token string">'2'</span><span class="token punctuation">;</span><span class="token comment">-- 将s_test中id等于2的score内容更改为80;</span>
<span class="token keyword">update</span> s_test <span class="token keyword">set</span> score<span class="token operator">=</span><span class="token string">'100'</span> <span class="token keyword">where</span>  id<span class="token operator">=</span><span class="token string">'3'</span><span class="token punctuation">;</span><span class="token comment">-- 将s_test中id等于3的score内容更改为100;</span>
<span class="token keyword">commit</span><span class="token punctuation">;</span><span class="token comment">--提交</span>
<span class="token comment">--select * from s_test;</span>
<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> s_test <span class="token keyword">where</span> score<span class="token operator">></span><span class="token string">'80'</span><span class="token punctuation">;</span><span class="token comment">--查询出t_test中socre大于80的所有信息</span>
<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> s_test <span class="token keyword">where</span> score<span class="token operator">></span><span class="token string">'80'</span> <span class="token operator">and</span> score<span class="token operator">&lt;</span><span class="token string">'100'</span><span class="token punctuation">;</span><span class="token comment">--查询出t_test中socre大于80，小于100的所有信息。</span>
<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> s_test <span class="token keyword">order</span> <span class="token keyword">by</span> id <span class="token keyword">desc</span><span class="token punctuation">;</span><span class="token comment">--将s_test中的记录按id降序输出</span>
<span class="token keyword">delete</span> <span class="token keyword">from</span> s_test <span class="token keyword">where</span> ID<span class="token operator">=</span><span class="token string">'1'</span><span class="token punctuation">;</span> <span class="token comment">-- 将s_test中的id等于1的记录删除</span>
<span class="token keyword">commit</span><span class="token punctuation">;</span><span class="token comment">--提交</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h3 id="说明："><a href="#说明：" class="headerlink" title="说明："></a>说明：</h3><ul>
<li>连接身份：表示该用户连接后拥有的权限。<ul>
<li><code>sysdba</code>： 即数据库管理员，权限包括：打开数据库服务器、关闭数据库服务器、备份数据库、恢复数据库、日志归档、会话限制、管理功能、创建数据库。<code>sys</code>用户必须用 <code>sysdba</code>身份才能登录，system用户可以用普通身份登录。</li>
<li><code>sysoper</code>：即数据库操作员，权限包括：打开数据库服务器、关闭数据库服务器、备份数据库、恢复数据库、日志归档、会话限制。</li>
<li><code>normal</code>：即普通用户，权限只有查询某些数据表的数据。默认的身份是 <code>normal</code>用户。</li>
</ul>
</li>
</ul>
<h3 id="创建用户"><a href="#创建用户" class="headerlink" title="创建用户"></a>创建用户</h3><p><code>CREATE USER</code> 用户名 <code>IDENTIFIED BY</code> 口令 [<code>ACCOUNT LOCK</code>|<code>UNLOCK</code>]</p>
<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">CREATE</span> <span class="token keyword">USER</span> admin IDENTIFIED <span class="token keyword">BY</span> account <span class="token keyword">lock</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">SQL</span><span class="token operator">></span> <span class="token keyword">CREATE</span> <span class="token keyword">USER</span> jerry
IDENTIFIED <span class="token keyword">BY</span> tom
ACCOUNT <span class="token keyword">UNLOCK</span><span class="token punctuation">;</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>

<p><code>&lt;font color=red&gt;</code>创建后并不能马上使用该用户访问数据库<code>&lt;/font&gt;</code></p>
<h3 id="还有一个概念就是数据库角色（role），数据库角色就是若干个系统权限的集合。下面介绍几个常用角色："><a href="#还有一个概念就是数据库角色（role），数据库角色就是若干个系统权限的集合。下面介绍几个常用角色：" class="headerlink" title="还有一个概念就是数据库角色（role），数据库角色就是若干个系统权限的集合。下面介绍几个常用角色："></a>还有一个概念就是数据库角色（<code>role</code>），数据库角色就是若干个系统权限的集合。下面介绍几个常用角色：</h3><p>Ø <code>CONNECT</code>角色，主要应用在临时用户，特别是那些不需要建表的用户，通常只赋予他们 <code>CONNECT role</code>。<code>CONNECT</code>是使用 <code>Oracle</code>的简单权限，拥有 <code>CONNECT</code>角色的用户，可以与服务器建立连接会话（<code>session</code>，客户端对服务器连接，称为会话）。</p>
<p>Ø <code>RESOURCE</code>角色<strong>，</strong>更可靠和正式的数据库用户可以授予RESOURCE role。RESOURCE提供给用户另外的权限以创建他们自己的表、序列、过程（<code>procedure</code>）、触发器（<code>trigger</code>）、索引（<code>index</code>）等。</p>
<p>Ø <code>DBA</code>角色，<code>DBA role</code>拥有所有的系统权限—-包括无限制的空间限额和给其他用户授予各种权限的能力。用户 <code>SYSTEM</code>拥有DBA角色。</p>
<p>一般情况下，一个普通的用户（如 <code>SCOTT</code>），拥有 <code>CONNECT</code>和 <code>RESOURC</code>E两个角色即可进行常规的数据库开发工作。</p>
<p>可以把某个权限授予某个角色，可以把权限、角色授予某个用户。系统权限只能由 <code>DBA</code>用户授权，对象权限由拥有该对象的用户授权，授权语法是：</p>
<blockquote>
<p>GRANT  角色|权限 TO 用户（角色）</p>
</blockquote>
<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">SQL</span><span class="token operator">></span> <span class="token keyword">GRANT</span> <span class="token keyword">CONNECT</span> <span class="token keyword">TO</span> jerry<span class="token punctuation">;</span>
授权成功。
<span class="token keyword">SQL</span><span class="token operator">></span> <span class="token keyword">GRANT</span> RESOURCE <span class="token keyword">TO</span> jerry<span class="token punctuation">;</span>
授权成功。
<span class="token keyword">SQL</span><span class="token operator">></span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<blockquote>
<p>其他语法</p>
</blockquote>
<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">//回收权限</span>
<span class="token keyword">REVOKE</span> 角色<span class="token operator">|</span>权限 <span class="token keyword">FROM</span> 用户（角色）
<span class="token comment">//修改用户的密码</span>
<span class="token keyword">ALTER</span> <span class="token keyword">USER</span> 用户名 IDENTIFIED <span class="token keyword">BY</span> 新密码
<span class="token comment">//修改用户处于锁定（非锁定）状态</span>
<span class="token keyword">ALTER</span> <span class="token keyword">USER</span> 用户名 ACCOUNT <span class="token keyword">LOCK</span><span class="token operator">|</span><span class="token keyword">UNLOCK</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h3 id="删除表"><a href="#删除表" class="headerlink" title="删除表"></a>删除表</h3><blockquote>
<p>TRUNCATE和DELETE都能把表中的数据全部删除，他们的区别是：</p>
<ul>
<li>-TRUNCATE是DDL命令，删除的数据不能恢复,如果一个表中数据记录很多，TRUNCATE相对DELETE速度快。</li>
<li>-DELETE命令是DML命令，删除后的数据可以通过日志文件恢复。</li>
</ul>
</blockquote>
<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">drop</span> <span class="token keyword">table</span> table_name
<span class="token keyword">delete</span> <span class="token keyword">from</span> Table_name <span class="token keyword">where</span> 条件
<span class="token keyword">truncate</span> table_name
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>

<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">create</span> <span class="token keyword">table</span> table_name
<span class="token punctuation">(</span>student_number number<span class="token punctuation">,</span>
name <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
sex <span class="token keyword">char</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
birthday <span class="token keyword">date</span>
<span class="token punctuation">)</span>
<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> table_name
<span class="token keyword">insert</span> <span class="token keyword">into</span> table_name <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">'001'</span><span class="token punctuation">,</span><span class="token string">'Tom'</span><span class="token punctuation">,</span><span class="token string">'man'</span><span class="token punctuation">,</span>to_date<span class="token punctuation">(</span><span class="token string">'2020-09-18'</span><span class="token punctuation">,</span><span class="token string">'yyyy-mm-dd'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">--插入date数据to_date('2020-09-18','yyyy-mm-dd')</span>
<span class="token keyword">insert</span> <span class="token keyword">into</span> table_name <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">'002'</span><span class="token punctuation">,</span><span class="token string">'Jack'</span><span class="token punctuation">,</span><span class="token string">'man'</span><span class="token punctuation">,</span>to_date<span class="token punctuation">(</span><span class="token string">'2020-09-28'</span><span class="token punctuation">,</span><span class="token string">'yyyy-mm-dd'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">delete</span> <span class="token keyword">from</span> table_name <span class="token keyword">where</span> sex<span class="token operator">=</span><span class="token string">'man'</span>
<span class="token keyword">alter</span> <span class="token keyword">table</span> table_name <span class="token keyword">modify</span> STUDENT_NUMBER NUMBER<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token comment">--修改数据类型,列为空列才可以</span>
<span class="token keyword">commit</span><span class="token punctuation">;</span>

<span class="token keyword">alter</span> <span class="token keyword">table</span> table_name <span class="token keyword">rename</span> <span class="token keyword">to</span> table_new_name<span class="token comment">--重命名表</span>
<span class="token keyword">alter</span> <span class="token keyword">table</span> table_name <span class="token keyword">add</span> <span class="token punctuation">(</span>scores number<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">--添加列</span>
<span class="token keyword">alter</span> <span class="token keyword">table</span> table_name <span class="token keyword">rename</span> <span class="token keyword">column</span> scores <span class="token keyword">to</span> score<span class="token comment">--重命名列</span>

<span class="token keyword">create</span> <span class="token keyword">table</span> day2
<span class="token punctuation">(</span>studentid number<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span> <span class="token keyword">primary</span> <span class="token keyword">key</span><span class="token punctuation">,</span><span class="token comment">--主键,可以对某列进行限制重复数据</span>
studdent_IdCard number<span class="token punctuation">(</span><span class="token number">32</span><span class="token punctuation">)</span> <span class="token keyword">unique</span><span class="token punctuation">,</span><span class="token comment">--唯一约束</span>
name <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span> <span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">,</span><span class="token comment">--非空约束</span>
sex <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
scores number<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token keyword">check</span><span class="token punctuation">(</span>scores<span class="token operator">>=</span><span class="token number">0</span> <span class="token operator">and</span> scores<span class="token operator">&lt;=</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
birth <span class="token keyword">date</span>
<span class="token punctuation">)</span>
<span class="token keyword">insert</span> <span class="token keyword">into</span> day2 <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">'0221'</span><span class="token punctuation">,</span><span class="token string">'12372'</span><span class="token punctuation">,</span><span class="token string">'hom'</span><span class="token punctuation">,</span><span class="token string">'man'</span><span class="token punctuation">,</span><span class="token string">'99.99'</span><span class="token punctuation">,</span>to_date<span class="token punctuation">(</span><span class="token string">'12'</span><span class="token punctuation">,</span><span class="token string">'mm'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">insert</span> <span class="token keyword">into</span> day2 <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">'003'</span><span class="token punctuation">,</span><span class="token string">'0918'</span><span class="token punctuation">,</span><span class="token string">'eee'</span><span class="token punctuation">,</span><span class="token string">'man'</span><span class="token punctuation">,</span><span class="token string">'99.99'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">insert</span> <span class="token keyword">into</span> day2 <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">'004'</span><span class="token punctuation">,</span><span class="token string">'ert'</span><span class="token punctuation">,</span><span class="token string">'man'</span><span class="token punctuation">,</span><span class="token string">'99.99'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">insert</span> <span class="token keyword">into</span> day2 <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">'005'</span><span class="token punctuation">,</span><span class="token string">'rel'</span><span class="token punctuation">,</span><span class="token string">'man'</span><span class="token punctuation">,</span><span class="token string">'99.99'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">select</span> scores<span class="token operator">*</span><span class="token number">4</span> <span class="token keyword">from</span> day2<span class="token comment">--备份表结构</span>
<span class="token keyword">create</span> <span class="token keyword">table</span> day2_bak2 <span class="token keyword">as</span> <span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> day2 emp <span class="token keyword">where</span> emp
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h3 id="2021-9-15"><a href="#2021-9-15" class="headerlink" title="2021-9-15"></a>2021-9-15</h3><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">---------------1------------------创建学生表定义学号,姓名性别年龄所在部门院系</span>
<span class="token keyword">create</span> <span class="token keyword">table</span> Students
<span class="token punctuation">(</span>Sno <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token keyword">primary</span> <span class="token keyword">KEY</span><span class="token punctuation">,</span>
Sname <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">,</span>
Ssex <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span> <span class="token keyword">check</span><span class="token punctuation">(</span>Ssex<span class="token operator">=</span><span class="token string">'男'</span> <span class="token operator">or</span> Ssex<span class="token operator">=</span><span class="token string">'女'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
Sage number <span class="token keyword">check</span><span class="token punctuation">(</span>Sage<span class="token operator">&lt;=</span><span class="token number">30</span> <span class="token operator">and</span> Sage<span class="token operator">>=</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
Sdept <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span>
<span class="token punctuation">)</span>

<span class="token comment">---------------2------------------</span>

<span class="token keyword">alter</span> <span class="token keyword">table</span> Students <span class="token keyword">add</span> <span class="token punctuation">(</span>BZR <span class="token keyword">char</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">--------------3--------------------</span>

<span class="token keyword">insert</span> <span class="token keyword">into</span> Students <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">'9512101'</span><span class="token punctuation">,</span><span class="token string">'李勇'</span><span class="token punctuation">,</span><span class="token string">'男'</span><span class="token punctuation">,</span><span class="token string">'19'</span><span class="token punctuation">,</span><span class="token string">'计算机系'</span><span class="token punctuation">,</span><span class="token string">'李老师'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">insert</span> <span class="token keyword">into</span> Students <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">'9512102'</span><span class="token punctuation">,</span><span class="token string">'刘晨'</span><span class="token punctuation">,</span><span class="token string">'男'</span><span class="token punctuation">,</span><span class="token string">'20'</span><span class="token punctuation">,</span><span class="token string">'计算机系'</span><span class="token punctuation">,</span><span class="token string">'李老师'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">insert</span> <span class="token keyword">into</span> Students <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">'9512103'</span><span class="token punctuation">,</span><span class="token string">'王敏'</span><span class="token punctuation">,</span><span class="token string">'女'</span><span class="token punctuation">,</span><span class="token string">'20'</span><span class="token punctuation">,</span><span class="token string">'计算机系'</span><span class="token punctuation">,</span><span class="token string">'李老师'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">insert</span> <span class="token keyword">into</span> Students <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">'9521101'</span><span class="token punctuation">,</span><span class="token string">'张立'</span><span class="token punctuation">,</span><span class="token string">'男'</span><span class="token punctuation">,</span><span class="token string">'22'</span><span class="token punctuation">,</span><span class="token string">'信息系'</span><span class="token punctuation">,</span><span class="token string">'王老师'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">insert</span> <span class="token keyword">into</span> Students <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">'9521102'</span><span class="token punctuation">,</span><span class="token string">'吴宾'</span><span class="token punctuation">,</span><span class="token string">'女'</span><span class="token punctuation">,</span><span class="token string">'21'</span><span class="token punctuation">,</span><span class="token string">'信息系'</span><span class="token punctuation">,</span><span class="token string">'王老师'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">insert</span> <span class="token keyword">into</span> Students <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">'9521103'</span><span class="token punctuation">,</span><span class="token string">'张海'</span><span class="token punctuation">,</span><span class="token string">'男'</span><span class="token punctuation">,</span><span class="token string">'20'</span><span class="token punctuation">,</span><span class="token string">'信息系'</span><span class="token punctuation">,</span><span class="token string">'王老师'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">insert</span> <span class="token keyword">into</span> Students <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">'9531101'</span><span class="token punctuation">,</span><span class="token string">'钱小平'</span><span class="token punctuation">,</span><span class="token string">'女'</span><span class="token punctuation">,</span><span class="token string">'18'</span><span class="token punctuation">,</span><span class="token string">'数学系'</span><span class="token punctuation">,</span><span class="token string">'周老师'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">insert</span> <span class="token keyword">into</span> Students <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">'9531102'</span><span class="token punctuation">,</span><span class="token string">'王大力'</span><span class="token punctuation">,</span><span class="token string">'男'</span><span class="token punctuation">,</span><span class="token string">'19'</span><span class="token punctuation">,</span><span class="token string">'数学系'</span><span class="token punctuation">,</span><span class="token string">'周老师'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">commit</span><span class="token punctuation">;</span>

<span class="token comment">-----------------4----------------查询全体学生的学号与姓名。</span>

<span class="token keyword">select</span> Sno<span class="token punctuation">,</span>Sname <span class="token keyword">from</span> Students<span class="token punctuation">;</span>

<span class="token comment">-----------------5----------------查询全体学生的姓名，学号和所在系。</span>

<span class="token keyword">select</span> Sname<span class="token punctuation">,</span>Sno<span class="token punctuation">,</span>Sdept <span class="token keyword">from</span> Students<span class="token punctuation">;</span>

<span class="token comment">-----------------6----------------查询计算机系全体学生的姓名。</span>

<span class="token keyword">select</span> Sname <span class="token keyword">from</span> Students <span class="token keyword">where</span> Sdept<span class="token operator">=</span><span class="token string">'计算机系'</span><span class="token punctuation">;</span>

<span class="token comment">-----------------7----------------查询所有年龄在20岁以下的学生的姓名及年龄。</span>

<span class="token keyword">select</span> Sname<span class="token punctuation">,</span>Sage <span class="token keyword">from</span> Students <span class="token keyword">where</span> Sage<span class="token operator">&lt;</span><span class="token number">20</span><span class="token punctuation">;</span>

<span class="token comment">-----------------8----------------查询年龄在20~23岁之间的学生的姓名，所在系和年龄。</span>

<span class="token keyword">select</span> Sname<span class="token punctuation">,</span>Sdept<span class="token punctuation">,</span>Sage <span class="token keyword">from</span> Students <span class="token keyword">where</span> Sage<span class="token operator">>=</span><span class="token number">20</span> <span class="token operator">and</span> Sage<span class="token operator">&lt;=</span><span class="token number">23</span><span class="token punctuation">;</span>
<span class="token keyword">select</span> Sname<span class="token punctuation">,</span>Sdept<span class="token punctuation">,</span>Sage <span class="token keyword">from</span> Students <span class="token keyword">where</span> sage <span class="token operator">between</span> <span class="token number">20</span> <span class="token operator">and</span> <span class="token number">23</span><span class="token punctuation">;</span>
<span class="token comment">-----------------9----------------查询年龄不在20~23之间的学生的姓名，所在系和年龄。</span>

<span class="token keyword">select</span> Sname<span class="token punctuation">,</span>Sdept<span class="token punctuation">,</span>Sage <span class="token keyword">from</span> Students <span class="token keyword">where</span> Sage<span class="token operator">&lt;</span><span class="token number">20</span> <span class="token operator">or</span> Sage<span class="token operator">></span><span class="token number">23</span><span class="token punctuation">;</span>

<span class="token comment">-----------------10----------------查询 数学系和计算机系学生的姓名和性别。</span>

<span class="token keyword">select</span> Sname<span class="token punctuation">,</span>Ssex <span class="token keyword">from</span> Students <span class="token keyword">where</span> Sdept<span class="token operator">=</span><span class="token string">'数学系'</span> <span class="token operator">or</span> Sdept<span class="token operator">=</span><span class="token string">'计算机系'</span><span class="token punctuation">;</span>
<span class="token comment">---用in操作</span>
<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> students <span class="token keyword">where</span> sdept <span class="token operator">in</span><span class="token punctuation">(</span><span class="token string">'计算机系'</span><span class="token punctuation">,</span><span class="token string">'信息系'</span><span class="token punctuation">)</span>

<span class="token comment">-----------------11----------------查询既不属于信息系，也不属于计算机系的学生的姓名和性别。</span>

<span class="token keyword">select</span> Sname<span class="token punctuation">,</span>Ssex <span class="token keyword">from</span> Students <span class="token keyword">where</span> Sdept<span class="token operator">!=</span><span class="token string">'数学系'</span> <span class="token operator">and</span> Sdept<span class="token operator">!=</span><span class="token string">'计算机系'</span><span class="token punctuation">;</span>

<span class="token comment">-----------------12----------------查询计算机系年龄在20岁以下的学生的姓名。</span>

<span class="token keyword">select</span> Sname <span class="token keyword">from</span> Students <span class="token keyword">where</span> Sdept<span class="token operator">=</span><span class="token string">'计算机系'</span> <span class="token operator">and</span> Sage<span class="token operator">&lt;</span><span class="token number">20</span><span class="token punctuation">;</span>

<span class="token comment">--题13：将学生信息按年龄升序排序输出。</span>

<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> Students <span class="token keyword">order</span> <span class="token keyword">by</span> Sage <span class="token keyword">asc</span><span class="token punctuation">;</span>

<span class="token comment">--题14：建一张和学生表一样的表，只包含计算机系学生的数据</span>

<span class="token keyword">create</span> <span class="token keyword">table</span> PC_s <span class="token keyword">as</span> <span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> Students <span class="token keyword">where</span> Sdept<span class="token operator">=</span><span class="token string">'计算机系'</span><span class="token punctuation">;</span>

<span class="token comment">--题15：将王大力的年龄修改成20</span>

<span class="token keyword">update</span> Students <span class="token keyword">set</span> Sage<span class="token operator">=</span><span class="token string">'20'</span> <span class="token keyword">where</span> Sname<span class="token operator">=</span><span class="token string">'王大力'</span><span class="token punctuation">;</span>

<span class="token comment">--题16：删除学号是‘9531102’的信息</span>

<span class="token keyword">delete</span> <span class="token keyword">from</span> Students <span class="token keyword">where</span> Sno<span class="token operator">=</span><span class="token string">'9531102'</span><span class="token punctuation">;</span>

<span class="token keyword">commit</span><span class="token punctuation">;</span>

<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> students<span class="token punctuation">;</span>
<span class="token keyword">create</span> <span class="token keyword">table</span> scores
<span class="token punctuation">(</span>Term <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token keyword">check</span><span class="token punctuation">(</span>term<span class="token operator">=</span><span class="token string">'s1'</span> <span class="token operator">or</span> term<span class="token operator">=</span><span class="token string">'s2'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
Sno <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span> <span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">,</span>
Examno <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">)</span> <span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">,</span>
writtenscore number<span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">,</span>
labscore number<span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">not</span> <span class="token boolean">null</span>
<span class="token punctuation">)</span>
<span class="token keyword">alter</span> <span class="token keyword">table</span> scores <span class="token keyword">add</span> <span class="token keyword">constraint</span> test_yyds <span class="token keyword">foreign</span> <span class="token keyword">key</span><span class="token punctuation">(</span>sno<span class="token punctuation">)</span> <span class="token keyword">references</span> students<span class="token punctuation">(</span>sno<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">--添加外键约束</span>
<span class="token keyword">insert</span> <span class="token keyword">into</span> scores <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">'s1'</span><span class="token punctuation">,</span><span class="token string">'9512101'</span><span class="token punctuation">,</span><span class="token string">'001'</span><span class="token punctuation">,</span><span class="token string">'200'</span><span class="token punctuation">,</span><span class="token string">'200'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">insert</span> <span class="token keyword">into</span> scores <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">'s1'</span><span class="token punctuation">,</span><span class="token string">'9512222'</span><span class="token punctuation">,</span><span class="token string">'001'</span><span class="token punctuation">,</span><span class="token string">'200'</span><span class="token punctuation">,</span><span class="token string">'200'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> emp<span class="token punctuation">;</span>
<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> dept t
<span class="token keyword">select</span> ename 姓名<span class="token punctuation">,</span> sal 月薪<span class="token punctuation">,</span> sal<span class="token operator">*</span><span class="token number">12</span> 年薪 <span class="token keyword">from</span> emp<span class="token punctuation">;</span>
<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> emp <span class="token keyword">order</span> <span class="token keyword">by</span> hiredate<span class="token punctuation">;</span>
<span class="token keyword">select</span> ename<span class="token operator">||</span><span class="token string">'`s job is'</span><span class="token operator">||</span>job<span class="token operator">||</span><span class="token string">',salary is'</span><span class="token operator">||</span>sal<span class="token operator">||</span><span class="token string">',annual salary is'</span><span class="token operator">||</span>sal<span class="token operator">*</span><span class="token number">12</span><span class="token operator">||</span><span class="token string">'.'</span> <span class="token keyword">from</span> emp
<span class="token comment">----???删除相同行</span>
<span class="token keyword">create</span> <span class="token keyword">table</span> emp_bak <span class="token keyword">as</span> <span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> emp<span class="token punctuation">;</span>
<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> emp_bak<span class="token punctuation">;</span>
<span class="token keyword">insert</span> <span class="token keyword">into</span> emp_bak <span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> emp <span class="token keyword">where</span> deptno<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">;</span>
<span class="token keyword">select</span> <span class="token keyword">distinct</span> <span class="token operator">*</span> <span class="token keyword">from</span> emp_bak<span class="token punctuation">;</span>
<span class="token keyword">select</span> <span class="token keyword">distinct</span> deptno <span class="token keyword">from</span> emp_bak<span class="token punctuation">;</span>
<span class="token comment">---in操作</span>
<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> students <span class="token keyword">where</span> sdept <span class="token operator">in</span><span class="token punctuation">(</span><span class="token string">'计算机系'</span><span class="token punctuation">,</span><span class="token string">'信息系'</span><span class="token punctuation">)</span>
<span class="token comment">----</span>

<span class="token keyword">select</span> Sname<span class="token punctuation">,</span>Sdept<span class="token punctuation">,</span>Sage <span class="token keyword">from</span> Students <span class="token keyword">where</span> Sage<span class="token operator">>=</span><span class="token number">20</span> <span class="token operator">and</span> Sage<span class="token operator">&lt;=</span><span class="token number">23</span><span class="token punctuation">;</span>
<span class="token keyword">select</span> Sname<span class="token punctuation">,</span>Sdept<span class="token punctuation">,</span>Sage <span class="token keyword">from</span> Students <span class="token keyword">where</span> sage <span class="token operator">between</span> <span class="token number">20</span> <span class="token operator">and</span> <span class="token number">23</span><span class="token punctuation">;</span>
<span class="token comment">--集合-----</span>
<span class="token comment">--交集</span>
<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> emp
<span class="token keyword">intersect</span>
<span class="token keyword">select</span> <span class="token operator">*</span><span class="token keyword">from</span> emp_bak
<span class="token comment">--并集</span>
<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> emp
<span class="token keyword">union</span>
<span class="token keyword">select</span> <span class="token operator">*</span><span class="token keyword">from</span> emp_bak

<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> emp
<span class="token keyword">union</span> <span class="token keyword">all</span>
<span class="token keyword">select</span> <span class="token operator">*</span><span class="token keyword">from</span> emp_bak
<span class="token comment">--补集(数据对比用途)务必相互查询对比</span>
<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> emp
minus
<span class="token keyword">select</span> <span class="token operator">*</span><span class="token keyword">from</span> emp_bak

<span class="token keyword">select</span> <span class="token operator">*</span><span class="token keyword">from</span> emp_bak
minus
<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> emp
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h3 id="表连接"><a href="#表连接" class="headerlink" title="表连接"></a>表连接</h3><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> emp<span class="token punctuation">;</span>
<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> dept
<span class="token comment">--查询员工姓名,所在部门</span>
<span class="token keyword">select</span> ename 姓名<span class="token punctuation">,</span>dname 部门名称 <span class="token keyword">from</span> emp <span class="token keyword">join</span> dept <span class="token keyword">on</span> emp<span class="token punctuation">.</span>deptno<span class="token operator">=</span>dept<span class="token punctuation">.</span>deptno<span class="token punctuation">;</span>
<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> emp <span class="token keyword">join</span> dept <span class="token keyword">on</span> emp<span class="token punctuation">.</span>deptno<span class="token operator">=</span>dept<span class="token punctuation">.</span>deptno
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h3 id="查询"><a href="#查询" class="headerlink" title="查询"></a>查询</h3><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">---模糊查询</span>
<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> students <span class="token keyword">where</span> sname <span class="token operator">like</span> <span class="token string">'%刘%'</span> <span class="token punctuation">;</span>
<span class="token comment">--名字包含小字</span>
<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> students <span class="token keyword">where</span> sname <span class="token operator">like</span> <span class="token string">'_小%'</span> <span class="token punctuation">;</span>
<span class="token comment">--名字第二个字是小字</span>
<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> emp <span class="token keyword">where</span> ename <span class="token operator">like</span> <span class="token string">'_A%S'</span> <span class="token punctuation">;</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>day 4</p>
<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">SELECT</span> e<span class="token punctuation">.</span>ENAME<span class="token punctuation">,</span>e<span class="token punctuation">.</span>JOB<span class="token punctuation">,</span>e<span class="token punctuation">.</span>SAL<span class="token punctuation">,</span>d<span class="token punctuation">.</span>DNAME <span class="token keyword">FROM</span> EMP e <span class="token keyword">JOIN</span> DEPT d <span class="token keyword">ON</span> e<span class="token punctuation">.</span>DEPTNO<span class="token operator">=</span>d<span class="token punctuation">.</span>DEPTNO <span class="token keyword">WHERE</span> e<span class="token punctuation">.</span>SAL<span class="token operator">></span><span class="token number">2000</span><span class="token punctuation">;</span>
<span class="token keyword">select</span> ename<span class="token punctuation">,</span>job<span class="token punctuation">,</span>sal<span class="token punctuation">,</span>dname <span class="token keyword">from</span> emp <span class="token keyword">join</span> dept <span class="token keyword">on</span> emp<span class="token punctuation">.</span>deptno<span class="token operator">=</span>dept<span class="token punctuation">.</span>deptno <span class="token keyword">where</span> sal<span class="token operator">></span><span class="token number">2000</span><span class="token punctuation">;</span>
<span class="token keyword">SELECT</span> e<span class="token punctuation">.</span>ENAME<span class="token punctuation">,</span>e<span class="token punctuation">.</span>JOB<span class="token punctuation">,</span>e<span class="token punctuation">.</span>SAL<span class="token punctuation">,</span>d<span class="token punctuation">.</span>DNAME <span class="token keyword">FROM</span> EMP e <span class="token keyword">RIGHT</span> <span class="token keyword">OUTER</span> <span class="token keyword">JOIN</span> DEPT d <span class="token keyword">ON</span> e<span class="token punctuation">.</span>DEPTNO<span class="token operator">=</span>d<span class="token punctuation">.</span>DEPTNO
<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> emp  <span class="token keyword">join</span> dept <span class="token keyword">on</span> emp<span class="token punctuation">.</span>deptno<span class="token operator">=</span>dept<span class="token punctuation">.</span>deptno<span class="token punctuation">;</span>
<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> emp<span class="token punctuation">;</span>
<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> dept
<span class="token keyword">select</span> deptno 部门 <span class="token keyword">from</span> emp <span class="token keyword">where</span> ename<span class="token operator">=</span><span class="token string">'BLAKE'</span>

<span class="token keyword">select</span> ename 姓名<span class="token punctuation">,</span>hiredate 受雇日期<span class="token punctuation">,</span>EMP<span class="token punctuation">.</span>deptno 部门 <span class="token keyword">from</span> EMP <span class="token keyword">join</span> DEPT <span class="token keyword">on</span> emp<span class="token punctuation">.</span>deptno<span class="token operator">=</span>dept<span class="token punctuation">.</span>deptno <span class="token keyword">where</span> EMP<span class="token punctuation">.</span>deptno<span class="token operator">=</span><span class="token punctuation">(</span><span class="token keyword">select</span> deptno <span class="token keyword">from</span> emp <span class="token keyword">where</span> ename<span class="token operator">=</span><span class="token string">'BLAKE'</span><span class="token punctuation">)</span> <span class="token operator">AND</span> ENAME<span class="token operator">!=</span><span class="token string">'BLAKE'</span><span class="token punctuation">;</span>

<span class="token keyword">SELECT</span> ename 姓名<span class="token punctuation">,</span>JOB 工作 <span class="token keyword">from</span> EMP <span class="token keyword">join</span> DEPT <span class="token keyword">on</span> emp<span class="token punctuation">.</span>deptno<span class="token operator">=</span>dept<span class="token punctuation">.</span>deptno <span class="token keyword">where</span> LOC<span class="token operator">=</span><span class="token string">'DALLAS'</span><span class="token punctuation">;</span>

<span class="token keyword">select</span> ename 姓名<span class="token punctuation">,</span>SAL 工资 <span class="token keyword">FROM</span> EMP <span class="token keyword">WHERE</span> MGR<span class="token operator">=</span><span class="token punctuation">(</span><span class="token keyword">SELECT</span> EMPNO <span class="token keyword">FROM</span> EMP <span class="token keyword">WHERE</span> ENAME<span class="token operator">=</span><span class="token string">'KING'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">select</span> ename 姓名<span class="token punctuation">,</span>hiredate 受雇日期<span class="token punctuation">,</span>SAL 工资 <span class="token keyword">from</span> EMP <span class="token keyword">join</span> DEPT <span class="token keyword">on</span> emp<span class="token punctuation">.</span>deptno<span class="token operator">=</span>dept<span class="token punctuation">.</span>deptno <span class="token keyword">where</span> SAL<span class="token operator">=</span><span class="token punctuation">(</span><span class="token keyword">SELECT</span> SAL <span class="token keyword">FROM</span> EMP <span class="token keyword">WHERE</span> ENAME<span class="token operator">=</span><span class="token string">'SCOTT'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">select</span> rownum line<span class="token punctuation">,</span>e<span class="token punctuation">.</span>ename <span class="token keyword">from</span> emp e<span class="token punctuation">;</span>
<span class="token keyword">select</span> e<span class="token punctuation">.</span>sal <span class="token keyword">from</span> emp e <span class="token keyword">order</span> <span class="token keyword">by</span> sal <span class="token keyword">desc</span>
<span class="token keyword">select</span> s <span class="token keyword">from</span> <span class="token punctuation">(</span><span class="token keyword">select</span> rownum line<span class="token punctuation">,</span>s <span class="token keyword">from</span> <span class="token punctuation">(</span><span class="token keyword">select</span> e<span class="token punctuation">.</span>sal s <span class="token keyword">from</span> emp e <span class="token keyword">order</span> <span class="token keyword">by</span> sal <span class="token keyword">desc</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">where</span> line <span class="token operator">between</span> <span class="token number">5</span> <span class="token operator">and</span> <span class="token number">10</span><span class="token punctuation">;</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
]]></content>
      <categories>
        <category>软件测试</category>
      </categories>
      <tags>
        <tag>数据库</tag>
        <tag>SQL</tag>
      </tags>
  </entry>
  <entry>
    <title>SQL Server命令以Mac OS，MySQL为例</title>
    <url>/2021/11/11/sql-ming-ling-su-cha/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p><strong>1. 启动服务</strong></p>
<span id="more"></span>

<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> /usr/local/MySQL/support-files/MySQL.server start<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p><strong>2. 停止服务</strong></p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> /usr/local/MySQL/support-files/MySQL.server stop<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p><strong>3. 重启服务</strong></p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> /usr/local/MySQL/support-files/MySQL.server restart<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p><strong>4. 连接数据库</strong></p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> /usr/local/MySQL/bin/

./MySQL <span class="token parameter variable">-uroot</span> <span class="token parameter variable">-p</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>

<p>接着按提示输入密码</p>
<p><strong>5. 远程连接</strong></p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">ssh</span> root@远程ip地址<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>接着输入远程服务器登录密码</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">MySQL <span class="token parameter variable">-u</span> root <span class="token parameter variable">-p</span> <span class="token parameter variable">-h</span> localhost<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>按提示输入密码</p>
<p><strong>6. 停止服务</strong></p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">exit/quit<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p><strong>7. 查看版本</strong></p>
<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">select</span> version<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<h3 id="二、数据库命令"><a href="#二、数据库命令" class="headerlink" title="二、数据库命令"></a><strong>二、数据库命令</strong></h3><p><strong>1. 创建数据库</strong></p>
<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">CREATE</span> <span class="token keyword">DATABASE</span> 数据库名 <span class="token keyword">CHARSET</span> <span class="token operator">=</span> UTF8<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p><strong>2. 选择&#x2F;使用数据库</strong></p>
<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">USE</span> 数据库名<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p><strong>3. 删除数据库</strong></p>
<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">DROP</span> <span class="token keyword">DATABASE</span> 数据库名<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p><strong>4. 查看当前数据库</strong></p>
<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">SELECT</span> <span class="token keyword">DATABASE</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p><strong>5. 查看数据库信息</strong></p>
<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">SHOW</span> <span class="token keyword">CREATE</span> <span class="token keyword">DATABASE</span> 数据库名<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<h3 id="三、表命令"><a href="#三、表命令" class="headerlink" title="三、表命令"></a><strong>三、表命令</strong></h3><p><strong>1.查看当前数据库所有表</strong></p>
<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">SHOW</span> <span class="token keyword">TABLES</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p><strong>2.创建表</strong></p>
<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">DEOP TABEL <span class="token keyword">IF</span> <span class="token keyword">EXISTS</span> 表名<span class="token punctuation">;</span>

<span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> 表名<span class="token punctuation">(</span>列名<span class="token punctuation">,</span>类型<span class="token punctuation">,</span>约束<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>

<p>Eg:</p>
<pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">DROP TABLE IF EXISTS example; #为避免同名表格影响，若有同名旧表，则清理

CREATE TABLE example(

id INT NOT NULL AUTO_INCREMENT PRIMARY KEY COMMENT &#39;序号&#39;,

order_id VARCHAR(255) NOT NULL COMMENT &#39;订单号&#39;,

) ENGINE &#x3D; INnoDB DEFAULT CHARSET &#x3D; utf8;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p><strong>1）建表约束</strong></p>
<p><code>NOT NULL</code>——列不能存储NULL值</p>
<p><code>UNIQUE</code>——列唯一值</p>
<p><code>PRIMARY KEY</code>——主键,确保（多）列有特定（且唯一）的记录可以查询</p>
<p><code>FOREIGN KEY</code>——当前表与外部表格有相对应的参照字段进行关联</p>
<p><code>CHECK</code>——确保列的值符合特定条件</p>
<p><code>DEFAULT</code>——规定列没有赋值时的默认值</p>
<p><strong>2）字符含义</strong></p>
<p><code>INT</code>——整数</p>
<p><code>VARCHAR</code>——文本</p>
<p><code>AUTO_INCREMENT</code>——自动编号</p>
<p><code>COMMENT</code>——备注</p>
<p><code>ENGINE</code>——引擎</p>
<p><code>CHARSET=UTF8</code>——编码为 <code>UTF8</code></p>
<p><strong>3.查看建表语句</strong></p>
<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">SHOW</span> <span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> 表名<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p><strong>4.查看表结构</strong></p>
<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">DESC</span> 表名<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p><strong>5.重命表名</strong></p>
<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">RENAME</span> <span class="token keyword">TABLE</span> 旧表名 <span class="token keyword">TO</span> 新表名<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p><strong>6.更新表数据</strong></p>
<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> 表名 <span class="token keyword">ADD</span><span class="token operator">/</span>CHANGE<span class="token operator">/</span><span class="token keyword">MODIFY</span><span class="token operator">/</span><span class="token keyword">DROP</span> 列操作<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p><strong>7.删除表</strong></p>
<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">DROP</span> <span class="token keyword">TABLE</span> 表名<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<h3 id="四、功能命令"><a href="#四、功能命令" class="headerlink" title="四、功能命令"></a><strong>四、功能命令</strong></h3><p><strong>1.增</strong></p>
<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> 表名<span class="token punctuation">(</span>列<span class="token number">1</span><span class="token punctuation">,</span> 列<span class="token number">2.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span> <span class="token keyword">VALUES</span><span class="token punctuation">(</span>值<span class="token number">1</span><span class="token punctuation">,</span>值<span class="token number">2.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p><strong>2.删</strong></p>
<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">DELETE</span> <span class="token keyword">FROM</span> 表名 <span class="token keyword">WHERE</span> 条件<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>*请必须加 <code>WHERE</code>，否则删除所有相关数据，而不是选择性数据</p>
<p><strong>3.改</strong></p>
<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">UPDATE</span> 表名 <span class="token keyword">SET</span> 列<span class="token number">1</span> <span class="token operator">=</span> 值<span class="token number">1</span><span class="token punctuation">,</span> 列<span class="token number">2</span> <span class="token operator">=</span> 值<span class="token number">2</span><span class="token punctuation">,</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> <span class="token keyword">WHERE</span> 条件<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p><strong>4.查</strong></p>
<p><strong>（1）查询所有数据</strong></p>
<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> 表名<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p><strong>（2）查询特定数据</strong></p>
<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">SELECT</span> 列名 <span class="token keyword">FROM</span> 表名<span class="token punctuation">;</span>

<span class="token keyword">SELECT</span> 列名 <span class="token keyword">FROM</span> 表名 <span class="token keyword">LIMIT</span> 起始列数<span class="token punctuation">,</span>提取列数多少<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>

<p><strong>（3）去重查询</strong></p>
<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">SELECT</span> <span class="token keyword">DISTINCT</span> 列名 <span class="token keyword">FROM</span> 表名<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p><strong>（4）条件查询</strong></p>
<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">SELECT</span> 列名 <span class="token keyword">FROM</span> 表名 <span class="token keyword">WHERE</span> 条件<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p><strong>条件部分</strong></p>
<p><strong>1）相关运算符含义</strong></p>
<p><code>=</code>等于</p>
<p><code>&lt;&gt;</code> 不等于</p>
<p><code>!=</code>不等于</p>
<p><code>&gt;</code> 大于</p>
<p><code>&lt;</code> 小于</p>
<p><code>&gt;=</code> 大于等于</p>
<p><code>&lt;=</code>小于等于</p>
<p><code>BETWEEN</code> 在某个范围之内，或在…之间</p>
<p><code>LIKE</code> 搜索某个特征&#x2F;模式</p>
<p><code>IN</code> 在选取的列的一定范围内的值</p>
<p><code>AND</code> 并且</p>
<p><code>OR</code> 或</p>
<p><code>AND&amp;OR</code> 组合使用</p>
<p><code>IS NULL</code> 空</p>
<p><code>IS NOT NULL</code> 非空</p>
<p><strong>2）通配符含义（搭配LIKE使用）</strong></p>
<p><code>%</code> 替代0-多个字符</p>
<p><code>_</code> 替代1个字符</p>
<p><code>[ ]</code>选定列的任何单个字符</p>
<p><code>[^]</code> 或 <code>[!]</code>不在选定列的任何单个字符</p>
<p><strong>（5）聚合函数</strong></p>
<p>SELECT 聚合函数(列名) FROM 表名;</p>
<p>1）<code>COUNT</code> 计数</p>
<p>2）<code>SUM</code> 求和</p>
<p>3）<code>MAX</code> 最大值</p>
<p>4）<code>MIN</code> 最小值</p>
<p>5）<code>AVG</code> 均值</p>
<p><strong>（6）分组</strong></p>
<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">SELECT</span> 列名 <span class="token keyword">FROM</span> 表名 <span class="token keyword">GROUP</span> <span class="token keyword">BY</span> 列名<span class="token punctuation">;</span>

<span class="token keyword">SELECT</span> 列名 <span class="token keyword">FROM</span> 表名 <span class="token keyword">GROUP</span> <span class="token keyword">BY</span> 列名 <span class="token keyword">HAVING</span> 列名<span class="token operator">+</span>条件<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>

<p><strong>（7）排序</strong></p>
<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">SELECT</span> 列名 <span class="token keyword">FROM</span> 表名 <span class="token keyword">ORDER</span> <span class="token keyword">BY</span> 列名<span class="token punctuation">;</span> <span class="token comment">#升序</span>

<span class="token keyword">SELECT</span> 列名 <span class="token keyword">FROM</span> 表名 <span class="token keyword">ORDER</span> <span class="token keyword">BY</span> 列名 <span class="token keyword">DESC</span><span class="token punctuation">;</span> <span class="token comment">#降序</span>

<span class="token keyword">SELECT</span> 列名 <span class="token keyword">FROM</span> 表名 <span class="token keyword">GROUP</span> <span class="token keyword">BY</span> 列名 <span class="token keyword">ORDER</span> <span class="token keyword">BY</span> 列名<span class="token punctuation">;</span> <span class="token comment">#分组后排序</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p><strong>（8）JOIN连接</strong></p>
<p><code>JOIN</code>主要将2个及以上的表格关联起来，共有 <code>LEFT JOIN</code>，<code>RIGHT JOIN</code>，<code>INNER JOIN</code>，<code>FULL JOIN</code>&#x2F;<code>OUTER JOIN</code>等7种用法。</p>
<p><strong>1）INNER JOIN：若都存在至少一个匹配值，则返回行</strong></p>
<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">SELECT</span> 表<span class="token number">1.</span>字段<span class="token number">1</span><span class="token punctuation">,</span>表<span class="token number">2.</span>字段<span class="token number">2</span> <span class="token keyword">FROM</span> 表<span class="token number">1</span> <span class="token keyword">INNER</span> <span class="token keyword">JOIN</span>表<span class="token number">2</span> <span class="token keyword">ON</span> 表<span class="token number">1.</span>相同外键<span class="token operator">=</span>表<span class="token number">2.</span>相同外键<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p><strong>2）LEFT JOIN：若右表没有匹配值，则返回左表所有的行</strong></p>
<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">SELECT</span> 表<span class="token number">1.</span>字段<span class="token number">1</span>，表<span class="token number">2.</span>字段<span class="token number">2</span> <span class="token keyword">FROM</span> 表<span class="token number">1</span> <span class="token keyword">LEFT</span> <span class="token keyword">JOIN</span>表<span class="token number">2</span> <span class="token keyword">ON</span> 表<span class="token number">1.</span>外键<span class="token operator">=</span>表<span class="token number">2.</span>外键<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p><strong>3）RIGHT JOIN：若左表没有匹配值，则返回右表所有的行</strong></p>
<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">SELECT</span> 表<span class="token number">1.</span>字段<span class="token number">1</span>，表<span class="token number">2.</span>字段<span class="token number">2</span> <span class="token keyword">FROM</span> 表<span class="token number">1</span> <span class="token keyword">RIGHT</span> <span class="token keyword">JOIN</span>表<span class="token number">2</span> <span class="token keyword">ON</span> 表<span class="token number">1.</span>外键<span class="token operator">=</span>表<span class="token number">2.</span>外键<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p><strong>4）FULL JOIN&#x2F;OUTER JOIN：只要其中一个表有匹配值，则返回行</strong></p>
<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">SELECT</span> 表<span class="token number">1.</span>字段<span class="token number">1</span>，表<span class="token number">2.</span>字段<span class="token number">2</span> <span class="token keyword">FROM</span> 表<span class="token number">1</span> <span class="token keyword">FULL</span> <span class="token keyword">JOIN</span>表<span class="token number">2</span> <span class="token keyword">ON</span> 表<span class="token number">1.</span>外键<span class="token operator">=</span>表<span class="token number">2.</span>外键<span class="token punctuation">;</span> <span class="token comment">##（MySQL不支持此用法）</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">SELECT 表1.字段1，表2.字段2 FROM表1 LEFT JOIN 表2 ON表1.外键&#x3D;表2.外键 UNION SELECT 表1.字段1，表2.字段2 FROM 表1 RIGHT JOIN表2 ON表1.外键&#x3D;表2.外键;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p><strong>（9）UNION联合</strong></p>
<p><strong>1）去重联合——<code>UNION</code></strong></p>
<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">SELECT</span> 表<span class="token number">1.</span>字段<span class="token number">1</span>FROM 表<span class="token number">1</span> <span class="token keyword">UNION</span> <span class="token keyword">SELECT</span>表<span class="token number">2.</span>字段<span class="token number">2</span> <span class="token keyword">FROM</span> 表<span class="token number">2</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p><strong>2）不去重联合——<code>UNION ALL</code></strong></p>
<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">SELECT</span> 表<span class="token number">1.</span>字段<span class="token number">1</span>FROM 表<span class="token number">1</span> <span class="token keyword">UNION</span> <span class="token keyword">ALL</span> <span class="token keyword">SELECT</span>表<span class="token number">2.</span>字段<span class="token number">2</span> <span class="token keyword">FROM</span> 表<span class="token number">2</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
]]></content>
      <categories>
        <category>MYSQL</category>
      </categories>
      <tags>
        <tag>MYSQL</tag>
        <tag>SQL命令</tag>
      </tags>
  </entry>
  <entry>
    <title>VS2019 较常用快捷键</title>
    <url>/2021/10/22/vs2019-kuai-jie-jian/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h2 id="较常用快捷键"><a href="#较常用快捷键" class="headerlink" title="较常用快捷键"></a>较常用快捷键</h2><p><code>Ctrl + K + F</code> 格式化代码</p>
<p><code>Ctrl + K + C </code> 注释代码</p>
<p><code>Ctrl + K + U</code>取消注释</p>
<p>Tab + Tab &#x3D; 代码联想</p>
<p>Alt + Enter &#x3D; 快速引用</p>
<p>Ctrl + Shift + C 新建类</p>
<span id="more"></span>

<p>Ctrl + E + E &#x3D; 在交互窗口中运行选中代码(很实用)</p>
<p>F6 &#x3D; 生成(整个解决方案中类库)</p>
<p>Shift + F6 &#x3D; 生成(当前类库)</p>
<p>Ctrl + R + G &#x3D; 删除无效Using</p>
<p>Ctrl + H &#x3D; 批量替换</p>
<p>Ctrl + G &#x3D; 跳转到指定行</p>
<p>Shift + F9 &#x3D; 监控(代码运行时)</p>
<p>Shift + F12 &#x3D; 查找所有引用</p>
<p>Ctor + Tab + Tab &#x3D; 生成无参构造器</p>
<p>项目相关的快捷键<br>Ctrl + Shift + B &#x3D; 生成项目</p>
<p>Ctrl + Alt + L &#x3D; 显示 Solution Explorer（解决方案资源管理器）</p>
<p>Shift + Alt+ C &#x3D; 添加新类</p>
<p>Shift + Alt + A &#x3D; 添加新项目到项目</p>
<p>编辑相关的键盘快捷键<br>Ctrl + Enter &#x3D; 在当前行插入空行</p>
<p>Ctrl + Shift + Enter &#x3D; 在当前行下方插入空行</p>
<p>Ctrl + 空格键 &#x3D; 使用 IntelliSense（智能感知）自动完成</p>
<p>Alt + Shift + 箭头键(←,↑,↓,→) &#x3D; 选择代码的自定义部分</p>
<p>Ctrl + } &#x3D; 匹配大括号、括号</p>
<p>Ctrl + Shift +} &#x3D; 在匹配的括号、括号内选择文本</p>
<p>Ctrl + Shift + S &#x3D; 保存所有文件和项目</p>
<p>Ctrl + K，Ctrl + C &#x3D; 注释选定行</p>
<p>Ctrl + K，Ctrl + U &#x3D; 取消选定行的注释</p>
<p>Ctrl + K，Ctrl + D &#x3D; 正确对齐所有代码</p>
<p>Shift + End &#x3D; 从头到尾选择整行</p>
<p>Shift + Home &#x3D; 从尾到头选择整行</p>
<p>Ctrl + Delete &#x3D; 删除光标右侧的所有字</p>
<p>导航相关的键盘快捷键<br>Ctrl +Up&#x2F;Down &#x3D; 滚动窗口但不移动光标</p>
<p>Ctrl + - &#x3D; 让光标移动到它先前的位置</p>
<p>Ctrl ++ &#x3D; 让光标移动到下一个位置</p>
<p>F12 &#x3D; 转到定义</p>
<p>调试相关的键盘快捷键<br>Ctrl + Alt + P &#x3D; 附加到进程</p>
<p>F10 &#x3D; 调试单步执行</p>
<p>F5 &#x3D; 开始调试</p>
<p>Shift + F5 &#x3D; 停止调试</p>
<p>Ctrl + Alt + Q &#x3D; 添加快捷匹配</p>
<p>F9 &#x3D; 设置或删除断点</p>
<p>搜索相关的键盘快捷键<br>Ctrl + K Ctrl + K &#x3D; 将当前行添加书签</p>
<p>Ctrl + K Ctrl + N &#x3D; 导航至下一个书签</p>
<p>Ctrl + . &#x3D; 如果你键入一个类名如 Collection，且命名空间导入不正确的话，那么这个快捷方式组合将自动插入导入</p>
<p>Ctrl + Shift + F &#x3D; 在文件中查找</p>
<p>Shift + F12 &#x3D; 查找所有引用</p>
<p>Ctrl + F &#x3D; 显示查找对话框</p>
<p>Ctrl + H &#x3D; 显示替换对话框</p>
<p>Ctrl + G &#x3D; 跳转到行号或行</p>
<p>Ctrl + Shift + F &#x3D; 查找所选条目在整个解决方案中的引用</p>
<p>VS常用快捷键搜集<br>以下内容来自网络，没有进行一一验证，不同版本VS肯定会有所差别，最常用的也就是打开窗口，代码编辑及调试类的快捷键。</p>
<p>窗口操作快捷键<br>Ctrl+W,W: 浏览器窗口</p>
<p>Ctrl+W,S: 解决方案管理器</p>
<p>Ctrl+W,C: 类视图</p>
<p>Ctrl+W,E: 错误列表</p>
<p>Ctrl+W,O: 输出视图</p>
<p>Ctrl+W,P: 属性窗口</p>
<p>Ctrl+W,T: 任务列表</p>
<p>Ctrl+W,X: 工具箱</p>
<p>Ctrl+W,B: 书签窗口</p>
<p>Ctrl+W,U: 文档大纲</p>
<p>Ctrl+D,B: 断点窗口</p>
<p>Ctrl+D,I: 即时窗口</p>
<p>Ctrl+Tab: 活动窗体切换</p>
<p>Ctrl+Shift+N: 新建项目</p>
<p>Ctrl+Shift+O: 打开项目</p>
<p>Ctrl+Shift+S: 全部保存</p>
<p>Shift+Alt+C: 新建类</p>
<p>Ctrl+Shift+A: 新建项</p>
<p>项目快捷键<br>CTRL + SHIFT + B生成解决方案</p>
<p>CTRL + F7 生成编译</p>
<p>CTRL + O 打开文件</p>
<p>CTRL + SHIFT + O打开项目</p>
<p>CTRL + SHIFT + C显示类视图窗口</p>
<p>F4 显示属性窗口</p>
<p>SHIFT + F4显示项目属性窗口</p>
<p>CTRL + SHIFT + E显示资源视图</p>
<p>F12 转到定义</p>
<p>CTRL + F12转到声明</p>
<p>CTRL + ALT + J对象浏览</p>
<p>CTRL + ALT + F1帮助目录</p>
<p>CTRL + F1 动态帮助</p>
<p>F1 帮助</p>
<p>SHIFT + F1当前窗口帮助</p>
<p>CTRL + ALT + F3帮助-搜索</p>
<p>SHIFT + ALT + ENTER全屏显示</p>
<p>CTRL + -向后定位</p>
<p>CTRL + SHIFT + -向前定位</p>
<p>CTRL + F4关闭文档窗口</p>
<p>CTRL + PAGE DOWN光标定位到窗口上方</p>
<p>CTRL + PAGE UP光标定位到窗口下方</p>
<p>CTRL + F6</p>
<p>CTRL + TAB下一个文档窗口</p>
<p>CTRL + SHIFT + F6</p>
<p>CTRL + SHIFT + TAB上一个文档窗口</p>
<p>ALT + F6下一个面板窗口</p>
<p>CTRL + K, CTRL + L取消remark</p>
<p>CTRL + K, CTRL + C注释选择的代码</p>
<p>CTRL + K, CTRL + U取消对选择代码的注释</p>
<p>CTRL + M, CTRL + O折叠代码定义</p>
<p>CTRL + M, CTRL + L展开代码定义</p>
<p>CTRL + DELETE删除至词尾</p>
<p>CTRL + BACKSPACE删除至词头</p>
<p>SHIFT + TAB取消制表符</p>
<p>CTRL + U转小写</p>
<p>CTRL + SHIFT + U转大写</p>
<p>CTRL + SHIFT + END选择至文档末尾</p>
<p>CTRL + SHIFT + HOME选择至文档末尾开始</p>
<p>SHIFT + END选择至行尾</p>
<p>SHIFT + HOME选择至行开始处</p>
<p>SHIFT + ALT + END垂直选择到最后尾</p>
<p>SHIFT + ALT + HOME垂直选择到最前面</p>
<p>CTRL + A全选</p>
<p>CTRL + W选择当前单词</p>
<p>CTRL + SHIFT + PAGE UP选择至本页前面</p>
<p>CTRL + SHIFT + PAGE DOWN选择至本页后面</p>
<p>CTRL + END文档定位到最后</p>
<p>CTRL + HOME文档定位到最前</p>
<p>CTRL + G转到…</p>
<p>CTRL + K, CTRL + P上一个标签</p>
<p>CTRL + K, CTRL + N下一个标签</p>
<p>ALT + F10调试-ApplyCodeChanges</p>
<p>CTRL + ALT+ Break停止调试</p>
<p>CTRL + SHIFT + F9 取消所有断点</p>
<p>CTRL + F9允许中断</p>
<p>CTRL + SHIFT + F5调试-重新开始</p>
<p>F5运行调试</p>
<p>CTRL + F5运行不调试</p>
<p>F10跨过程序执行</p>
<p>F11单步逐句执行</p>
<p>CTRL + J列出成员</p>
<p>CTRL + PAGE DOWN下一个视图</p>
<p>CTRL + B格式-粗体</p>
<p>CTRL + SHIFT + T格式-文字缩进</p>
<p>调试快捷键<br>F6: 生成解决方案</p>
<p>Ctrl+F6: 生成当前项目</p>
<p>F7: 查看代码</p>
<p>Shift+F7: 查看窗体设计器</p>
<p>F5: 启动调试</p>
<p>Ctrl+F5: 开始执行(不调试)</p>
<p>Shift+F5: 停止调试</p>
<p>Ctrl+Shift+F5: 重启调试</p>
<p>F9: 切换断点</p>
<p>Ctrl+F9: 启用&#x2F;停止断点</p>
<p>Ctrl+Shift+F9: 删除全部断点</p>
<p>F10: 逐过程</p>
<p>Ctrl+F10: 运行到光标处</p>
<p>F11: 逐语句</p>
<p>编辑快捷键<br>Ctrl+E,D —-格式化全部代码</p>
<p>Ctrl+E,F —-格式化选中的代码</p>
<p>Shift+Alt+Enter: 切换全屏编辑</p>
<p>Ctrl+B,T &#x2F; Ctrl+K,K: 切换书签开关</p>
<p>Ctrl+B,N &#x2F; Ctrl+K,N: 移动到下一书签</p>
<p>Ctrl+B,P: 移动到上一书签</p>
<p>Ctrl+B,C: 清除全部标签</p>
<p>Ctrl+I: 渐进式搜索</p>
<p>Ctrl+Shift+I: 反向渐进式搜索</p>
<p>Ctrl+F: 查找</p>
<p>Ctrl+Shift+F: 在文件中查找</p>
<p>F3: 查找下一个</p>
<p>Shift+F3: 查找上一个</p>
<p>Ctrl+H: 替换</p>
<p>Ctrl+Shift+H: 在文件中替换</p>
<p>Alt+F12: 查找符号(列出所有查找结果)</p>
<p>Ctrl+Shift+V: 剪贴板循环</p>
<p>Ctrl+左右箭头键: 一次可以移动一个单</p>
<p>词</p>
<p>Ctrl+上下箭头键: 滚动代码屏幕，但不移动光标位置。</p>
<p>Ctrl+Shift+L: 删除当前行</p>
<p>Ctrl+M,M: 隐藏或展开当前嵌套的折叠状态</p>
<p>Ctrl+M,L: 将所有过程设置为相同的隐藏或展开状态</p>
<p>Ctrl+M,P: 停止大纲显示</p>
<p>Ctrl+E,S: 查看空白</p>
<p>Ctrl+E,W: 自动换行</p>
<p>Ctrl+G: 转到指定行</p>
<p>Shift+Alt+箭头键: 选择矩形文本</p>
<p>Alt+鼠标左按钮: 选择矩形文本</p>
<p>Ctrl+Shift+U: 全部变为大写</p>
<p>Ctrl+U: 全部变为小写</p>
<p>代码快捷键<br>Ctrl+J &#x2F; Ctrl+K,L: 列出成员</p>
<p>Ctrl+Shift+空格键 &#x2F; Ctrl+K,P: 参数信息</p>
<p>Ctrl+K,I: 快速信息</p>
<p>Ctrl+E,C &#x2F; Ctrl+K,C: 注释选定内容</p>
<p>Ctrl+E,U &#x2F; Ctrl+K,U: 取消选定注释内容</p>
<p>Ctrl+K,M: 生成方法存根</p>
<p>Ctrl+K,X: 插入代码段</p>
<p>Ctrl+K,S: 插入外侧代码</p>
<p>F12: 转到所调用过程或变量的定义</p>
<p>单元测试<br>Ctrl + R , A : 执行所有测试</p>
<p>Ctrl + R , T : 执行当前所在测试方法<br>Ctrl + R , D: 执行最后一次测试的所有测试<br>Ctrl + R , F: 执行最后一次测试的所有测试的失败测试</p>
]]></content>
      <categories>
        <category>IDE</category>
      </categories>
      <tags>
        <tag>VS2019</tag>
      </tags>
  </entry>
  <entry>
    <title>Vite-admin学习</title>
    <url>/2022/09/22/vite-admin/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h2 id="架构"><a href="#架构" class="headerlink" title="架构"></a>架构</h2><pre class="line-numbers language-none"><code class="language-none">src
-components&#x2F;&#x2F;组件文件
-hooks&#x2F;&#x2F;业务逻辑文件
-router&#x2F;&#x2F;路由文件
-service&#x2F;&#x2F;发起请求文件
-store&#x2F;&#x2F;状态管理文件
-utils&#x2F;&#x2F;公共文件
-views&#x2F;&#x2F;页面级组件<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p><code>npm i axios vuex vue-router</code></p>
<span id="more"></span>

<p><code>axios</code>发起请求<br><code>vuex</code>状态管理<br><code>vue-router</code>路由</p>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>vue</tag>
        <tag>vite-admin</tag>
      </tags>
  </entry>
  <entry>
    <title>Centos 安装docker</title>
    <url>/2020/09/30/centos-an-zhuang-docker/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>卸载旧版本</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> yum remove <span class="token function">docker</span> <span class="token punctuation">\</span>
                 docker-client <span class="token punctuation">\</span>
                 docker-client-latest <span class="token punctuation">\</span>
                 docker-common <span class="token punctuation">\</span>
                 docker-latest <span class="token punctuation">\</span>
                 docker-latest-logrotate <span class="token punctuation">\</span>
                 docker-logrotate <span class="token punctuation">\</span>
                 docker-engine
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><span id="more"></span>

<h3 id="设置储存库"><a href="#设置储存库" class="headerlink" title="设置储存库"></a>设置储存库</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> yum <span class="token function">install</span> <span class="token parameter variable">-y</span> yum-utils

<span class="token function">sudo</span> yum-config-manager <span class="token punctuation">\</span>
   --add-repo <span class="token punctuation">\</span>
   https://download.docker.com/linux/centos/docker-ce.repo<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h3 id="安装docker引擎"><a href="#安装docker引擎" class="headerlink" title="安装docker引擎"></a>安装docker引擎</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> yum <span class="token function">install</span> docker-ce docker-ce-cli containerd.io docker-compose-plugin<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<h3 id="列出版本号"><a href="#列出版本号" class="headerlink" title="列出版本号"></a>列出版本号</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">yum list docker-ce <span class="token parameter variable">--showduplicates</span> <span class="token operator">|</span> <span class="token function">sort</span> <span class="token parameter variable">-r</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@VM-4-11-centos /<span class="token punctuation">]</span><span class="token comment">#  yum list docker-ce --showduplicates | sort -r</span>
Repository epel is listed <span class="token function">more</span> than once <span class="token keyword">in</span> the configuration
Loading mirror speeds from cached hostfile
Loaded plugins: fastestmirror, langpacks
Installed Packages
docker-ce.x86_64            <span class="token number">3</span>:24.0.4-1.el7                     docker-ce-stable 
docker-ce.x86_64            <span class="token number">3</span>:24.0.4-1.el7                     @docker-ce-stable
docker-ce.x86_64            <span class="token number">3</span>:24.0.3-1.el7                     docker-ce-stable 
<span class="token comment">#&lt;VERSION_STRING>            ---版本号</span>
<span class="token comment">#docker-ce.x86_64            3:&lt;VERSION_STRING>-1.el7                     docker-ce-stable </span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h3 id="安装指定版本号的软件"><a href="#安装指定版本号的软件" class="headerlink" title="安装指定版本号的软件"></a>安装指定版本号的软件</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> yum <span class="token function">install</span> docker-ce-<span class="token operator">&lt;</span>VERSION_STRING<span class="token operator">></span> docker-ce-cli-<span class="token operator">&lt;</span>VERSION_STRING<span class="token operator">></span> containerd.io docker-compose-plugin<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p><strong>eg</strong>:安装</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> yum <span class="token function">install</span> docker-ce-24.0.4 docker-ce-cli-24.0.4 containerd.io docker-compose-plugin<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<h2 id="启动docker"><a href="#启动docker" class="headerlink" title="启动docker"></a>启动docker</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> systemctl start <span class="token function">docker</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>centos</tag>
        <tag>docker安装</tag>
      </tags>
  </entry>
  <entry>
    <title>Centos 虚拟机部署指南</title>
    <url>/2023/11/01/centos-xu-ni-ji-bu-shu-zhi-nan/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h2 id="部署完毕后发现不能用ifconfig"><a href="#部署完毕后发现不能用ifconfig" class="headerlink" title="部署完毕后发现不能用ifconfig"></a>部署完毕后发现不能用ifconfig</h2><p>度了一下解决方法如下</p>
<ol>
<li><p>root角色权限</p>
</li>
<li><p><code>cd /etc/sysconfig/network-scripts/</code></p>
<p>此时ls看下目录下的文件</p>
</li>
</ol>
<p><img src="https://cdn.jsdelivr.net/gh/Fansirsqi/blog-Images@main/images/202310311150471.png"></p>
<p>我编辑的就是这个b文件</p>
<span id="more"></span>

<p><code>vi ifcfg-enxxxx</code></p>
<p>把ONBOOT改为“yes”，保存退出</p>
<p>重启网卡 <code>service network restart</code></p>
<p>然后可以 <code>yum install net-tools</code>一直y,完成后就可以ifconfig了</p>
<p><img src="https://cdn.jsdelivr.net/gh/Fansirsqi/blog-Images@main/images/202310311157755.png" alt="image-20231031115735707"></p>
<p>就成功的看到了ip</p>
<h2 id="装个vim"><a href="#装个vim" class="headerlink" title="装个vim"></a>装个vim</h2><p><code>yum install vim</code></p>
<h2 id="下个jdk"><a href="#下个jdk" class="headerlink" title="下个jdk"></a>下个jdk</h2><p><code>curl https://mirrors.tuna.tsinghua.edu.cn/Adoptium/8/jdk/x64/linux/OpenJDK8U-jdk_x64_linux_hotspot_8u392b08.tar.gz -o OpenJDK8U-jdk_x64_linux_hotspot_8u392b08.tar.gz</code></p>
<h2 id="Mysql-5-7安装"><a href="#Mysql-5-7安装" class="headerlink" title="Mysql-5.7安装"></a>Mysql-5.7安装</h2><p><code>cd /opt</code><br>推荐这个下载：<code>wget https://dev.mysql.com/get/mysql57-community-release-el7-9.noarch.rpm</code></p>
<p>这个理论能下，但是好像不太行：<code>curl https://dev.mysql.com/get/mysql57-community-release-el7-9.noarch.rpm -o mysql57-community-release-el7-9.noarch.rpm</code></p>
<p>如果wget命令无法使用，先安装wget<br><code>yum install -y wget</code></p>
<p>安装rpm文件<br><code>rpm -ivh mysql57-community-release-el7-9.noarch.rpm</code></p>
<p>安装mysql，官方5.7版本默认没有GPG key， 所以添加 –nogpgcheck 进行强制安装。<br><code>yum install mysql-server --nogpgcheck</code></p>
<p>检查是否安装成功<br><code>rpm -qa | grep mysql</code></p>
<p>mysql的启动和停止命令集合，先把mysql启动起来</p>
<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">systemctl <span class="token keyword">start</span> mysqld<span class="token punctuation">.</span>service <span class="token comment">#启动 mysql</span>
systemctl restart mysqld<span class="token punctuation">.</span>service <span class="token comment">#重启 mysql</span>
systemctl stop mysqld<span class="token punctuation">.</span>service <span class="token comment">#停止 mysql</span>
systemctl <span class="token keyword">status</span> mysqld<span class="token punctuation">.</span>service <span class="token comment">#查看 mysql 状态</span>
systemctl <span class="token keyword">enable</span> mysqld<span class="token punctuation">.</span>service <span class="token comment">#设置 mysql 开机启动</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>打印出默认登录密码<br><code>cat /var/log/mysqld.log |grep password</code></p>
<p>登录mysql，需要输入上一步查询出来的密码<br><code>mysql -uroot -p </code><br># 输入上步查到的密码（输入的时候是不见密码的）</p>
<p>修改密码（登录到mysql执行）–先执行下面的也许可能<br><code>alter user &#39;root&#39;@&#39;localhost&#39; identified BY &#39;root123&#39;;</code><br>如果密码太简单，会提示ERROR，需要配置密码策略和长度（登录到mysql执行）<br><code>set global validate_password_policy=LOW;</code><br><code>set global validate_password_length=1;</code></p>
<p>配置mysql允许远程登录（登录到mysql执行）<br><code>GRANT ALL PRIVILEGES ON *.* TO root@&quot;%&quot; IDENTIFIED BY &quot;root&quot;;</code></p>
<p>退出mysql（登录到mysql执行）<br><code>exit</code></p>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Centos</tag>
        <tag>mysql</tag>
        <tag>环境部署</tag>
      </tags>
  </entry>
  <entry>
    <title>cmd 命令学习</title>
    <url>/2021/10/25/cmd/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h2 id="dir"><a href="#dir" class="headerlink" title="dir"></a><code>dir</code></h2><p>列出所有文件</p>
<p><code>dir /b</code> 过滤掉文件夹</p>
<span id="more"></span>

<p><code>dir /b /a:-h</code> 筛选出所有不隐藏的文件</p>
<p><code>dir /b /a:h</code> 筛选出所有隐藏的文件</p>
]]></content>
      <categories>
        <category>Other</category>
      </categories>
      <tags>
        <tag>dos命令</tag>
      </tags>
  </entry>
  <entry>
    <title>python学习</title>
    <url>/2021/10/22/docs/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h2 id="namedtuple"><a href="#namedtuple" class="headerlink" title="namedtuple"></a><code>namedtuple</code></h2><span id="more"></span>

<!-- more -->

<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">Stu</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span>  <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>name<span class="token punctuation">,</span>sex<span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>_name <span class="token operator">=</span> name
        self<span class="token punctuation">.</span>_sex <span class="token operator">=</span> sex
    <span class="token decorator annotation punctuation">@property</span> <span class="token comment"># 将属性改成只读</span>
    <span class="token keyword">def</span>  <span class="token function">name</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">return</span> self<span class="token punctuation">.</span>_name
    <span class="token decorator annotation punctuation">@property</span>
    <span class="token keyword">def</span> <span class="token function">sex</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">return</span> self<span class="token punctuation">.</span>_sex
s <span class="token operator">=</span> Stu<span class="token punctuation">(</span><span class="token string">'小明'</span><span class="token punctuation">,</span><span class="token string">'男'</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span>name<span class="token punctuation">)</span>

<span class="token keyword">from</span> collections <span class="token keyword">import</span> namedtuple

Stu <span class="token operator">=</span>  namedtuple<span class="token punctuation">(</span><span class="token string">'Stu'</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string">'name'</span><span class="token punctuation">,</span><span class="token string">'sex'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

s <span class="token operator">=</span> Stu<span class="token punctuation">(</span><span class="token string">'小明'</span><span class="token punctuation">,</span><span class="token string">'男'</span><span class="token punctuation">)</span>

<span class="token keyword">print</span><span class="token punctuation">(</span>Stu<span class="token punctuation">)</span> <span class="token comment"># &lt;class '__main__.Stu'></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>namedtuple</tag>
      </tags>
  </entry>
  <entry>
    <title>linux 命令小记</title>
    <url>/2020/09/30/linux-chang-yong-ming-ling/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h2 id="解压缩"><a href="#解压缩" class="headerlink" title="解压缩"></a>解压缩</h2><h3 id="1-tar包和gz包"><a href="#1-tar包和gz包" class="headerlink" title="1.tar包和gz包"></a>1.tar包和gz包</h3><p>tar包和gz包是两个不同的文件包，有三种不同后缀。.tar   .gz    .tar.gz</p>
<ul>
<li>tar包：使用tar命令，打包文件或者文件夹，只打包，不压缩</li>
<li>gz包：使用gzip命令，只压缩文件，不打包，所以gz包操作不能对文件夹直接操作，如果要对文件夹下所有文件进行压缩，使用-r参数，gzip -r 文件夹路径</li>
</ul>
<p><strong>tar.gz：使用 <code>tar</code>加 <code>-z</code>参数，<code>tar -zcvf filename.tar.gz dir/file</code>  打包压缩文件或者文件夹</strong></p>
<p><code>tar</code>参数有 <code>z</code>，<code>c</code>，<code>x</code>，<code>v</code>，<code>f</code></p>
<span id="more"></span>

<p><code>-z </code>表示压缩操作类型是 .tar.gz</p>
<p><code>-c </code>表示当前行为是打包</p>
<p><code>-x </code>表示当前行为是解压文件包</p>
<p><code>-v</code> 参数要求显示命令执行过程</p>
<p><code>-f</code> 指定打包后文件名</p>
<p><code>-C</code> 解压到指定路径</p>
<p>&#x3D;&#x3D;常用<strong>压缩</strong>打包命令：&#x3D;&#x3D;</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">tar</span> <span class="token parameter variable">-zcvf</span> xxxx.tar.gz dir/xxxx
<span class="token function">tar</span> <span class="token parameter variable">-jcvf</span>  xxxx.tar.bz2  dir/xxxx<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<p>&#x3D;&#x3D;常用<strong>解压缩</strong>命令：&#x3D;&#x3D;</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">tar</span> <span class="token parameter variable">-zxvf</span> xxxx.tar.gz <span class="token parameter variable">-C</span> /dir   ----gz
<span class="token function">tar</span> <span class="token parameter variable">-jxvf</span>  xxxx.tar.bz2 /dir    ----bz2<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<p><strong>gzip常用参数有 d，c，t，v</strong></p>
<p><code>-d</code> 解压gz压缩包</p>
<p><code>-c</code> 控制台窗口打印压缩后文件内容，源文件不变，执行后不生成压缩包</p>
<p><code>-v</code> 显示压缩百分比</p>
<p><code>-t</code> 测试已压缩文件是否正确，需要文件压缩成压缩文件后执行</p>
<p>&#x3D;&#x3D;直接压缩文件命令：&#x3D;&#x3D;</p>
<p><code>gzip fileName</code></p>
<p>&#x3D;&#x3D;解压缩文件：&#x3D;&#x3D;</p>
<p><code>gzip -d fileName.gz</code></p>
<p><code>&lt;font color=&#39;red&#39;&gt;</code>注意：gzip命令默认是直接改变源文件，也就是执行gzip filename后，当前路径只有压缩后的文件，文件名是 原文件名.gz <code>&lt;/font&gt;</code></p>
<p>要同时保留原文件和压缩文件，需要手动将写入压缩文件：</p>
<p><code>gzip -c fileName &gt; fileName.gz</code></p>
<p>解压操作保留原文件：</p>
<p><code>gzip -dc fileName.gz &gt; fileName</code></p>
<h3 id="2-zip包"><a href="#2-zip包" class="headerlink" title="2.zip包"></a>2.zip包</h3><p>从本地打包上传到服务器的压缩包，一般都是zip或者rar格式，而不是tar包格式。</p>
<p>zip包上传到服务器后，使用unzip命令解压，压缩成zip包使用zip命令</p>
<p>zip和unzip命令需要安装，使用yum直接安装：</p>
<p><code>yum install zip -y</code></p>
<p><code>yum install unzip -y</code></p>
<p><strong>zip常用参数有 r，q，d</strong></p>
<p><code>-r </code>压缩文件夹，递归执行，压缩文件夹下所有文件</p>
<p><code>-q </code>不显示压缩过程，默认会在控制台打印压缩文件过程</p>
<p><code>-d </code>压缩过程中剔除指定文件， -d参数后跟随的文件不打包到压缩包里</p>
<p>压缩文件夹且排除指定文件不压缩：</p>
<p><code>ip -r dirpath/ -d a.txt b.text</code></p>
<p><strong>unzip常用参数有 n，v，d</strong></p>
<p><code>-n</code> 解压后不覆盖已存在文件，如果压缩包文件中与解压路径有同名文件，跳过该文件</p>
<p><code>-v</code> 控制台打印显示压缩包内容，但是不解压，-v参数只进行查看</p>
<p><code>-d</code> 指定解压后文件存放路径</p>
<p>&#x3D;&#x3D;unzip常直接使用，解压到当前路径，覆盖同名文件：&#x3D;&#x3D;</p>
<p><code>unzip file.zip</code></p>
<p>解压到指定路径，不覆盖已有同名文件：</p>
<p><code>unzip -n file.zip -d dir/</code></p>
<h2 id="目录操作"><a href="#目录操作" class="headerlink" title="目录操作"></a>目录操作</h2><ul>
<li><code>pwd</code>显示当前位置目录</li>
<li><code>cd</code>回到用户 <code>home</code>目录</li>
<li>返回上次进入的目录 <code>cd ~</code></li>
<li><code>ls</code>显示当前或指定目录下的内容</li>
</ul>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">ls</span>
<span class="token function">ls</span> <span class="token function">dirname</span>
<span class="token function">ls</span> /home
<span class="token function">ls</span> <span class="token parameter variable">-l</span> 可简写成 ll
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>

<h2 id="删除文件、目录"><a href="#删除文件、目录" class="headerlink" title="删除文件、目录"></a>删除文件、目录</h2><pre class="line-numbers language-none"><code class="language-none">rm file
rm -rf &#x2F;tmpdir&#x2F;
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<h2 id="删除用户"><a href="#删除用户" class="headerlink" title="删除用户"></a>删除用户</h2><ul>
<li><code>userdel</code>删除用户</li>
</ul>
<p>强制删除用户并删除用户的主目录</p>
<pre class="line-numbers language-none"><code class="language-none">userdel -rf admin1
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<h2 id="添加用户"><a href="#添加用户" class="headerlink" title="添加用户"></a>添加用户</h2><ul>
<li><code>useradd</code>添加或者更新账户信息</li>
</ul>
<p>增加 <code>admin1</code>用户,主目录为 <code>/home/admin1</code></p>
<pre class="line-numbers language-none"><code class="language-none">useradd -d &#x2F;home&#x2F;admin1 admin1
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<h2 id="修改密码"><a href="#修改密码" class="headerlink" title="修改密码"></a>修改密码</h2><ul>
<li><code>passwd</code>修改用户密码</li>
</ul>
<p>设定admin1的密码</p>
<pre class="line-numbers language-none"><code class="language-none">passwd admin1
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<h2 id="切换用户"><a href="#切换用户" class="headerlink" title="切换用户"></a>切换用户</h2><ul>
<li><p><code>su</code>切换到其他用户</p>
<p>切换到用户admin1</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">su</span> - admin1<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li>
</ul>
<pre class="line-numbers language-none"><code class="language-none">
## 创建文件、文件夹 - &#96;touch&#96; &#96;mkdir&#96;

- &#96;touch&#96;创建文件

&#96;&#96;&#96;shell
touch 123.txt<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<ul>
<li><code>mkdir</code>创建文件夹</li>
</ul>
<p>批量创建 file1,file2,…,file10</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">mkdir</span> file<span class="token punctuation">&#123;</span><span class="token number">1</span><span class="token punctuation">..</span><span class="token number">10</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>按照路径分层级创建文件夹</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">mkdir</span> <span class="token parameter variable">-p</span> file1/file2<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<h2 id="复制、移动-mv-cp"><a href="#复制、移动-mv-cp" class="headerlink" title="复制、移动 - mv,cp"></a>复制、移动 - <code>mv</code>,<code>cp</code></h2><ul>
<li><code>mv</code>重命名&#x2F;移动</li>
</ul>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">mv</span> <span class="token number">123</span>.txt <span class="token number">456</span>.txt //重命名
<span class="token function">mv</span> <span class="token number">123</span>.txt /home  //移动到绝对路径下的home目录<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<ul>
<li><code>cp</code>复制</li>
</ul>
<p>将文件 <code>file1</code>复制到 <code>/dir1</code>并重命名为 <code>file2</code></p>
<pre class="line-numbers language-none"><code class="language-none">cp file1 &#x2F;dir1&#x2F;file2
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>复制目录 <code>/dir1</code>的所有文件到目录 <code>/dir2</code></p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">cp</span> <span class="token parameter variable">-rf</span> /dir1 dir2
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<h2 id="系统时间"><a href="#系统时间" class="headerlink" title="系统时间"></a>系统时间</h2><ul>
<li><p><code>date</code>显示或者设置当前的系统时间</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">date</span>
<span class="token function">date</span> MMDDhhmmYYYY 设置时间月日时分年 要root权限
<span class="token function">date</span> <span class="token string">"+%Y-%m-%d %H: %M %S"</span> 按指定格式输出时间+有点关键 自由发挥
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li>
<li><p><strong><code>hwclock</code> bios硬件内的时间</strong></p>
</li>
</ul>
<p>系统同步硬件的数据内容</p>
<pre class="line-numbers language-none"><code class="language-none">hwclock -w
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>与上面相反</p>
<pre class="line-numbers language-none"><code class="language-none">hwclock -s
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<blockquote>
<p>&#96;使用date命令修改系统时间后，必须用hwclock -w命令将其同步到硬件时钟&#96;&#96;</p>
</blockquote>
<ul>
<li><p><code>uptime</code>显示系统运行的时间</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">uptime</span>
02:28:21 up  <span class="token number">7</span>:04,  <span class="token number">1</span> user,  load average: <span class="token number">0.00</span>, <span class="token number">0.00</span>, <span class="token number">0.00</span>
当前时间, 系统运行了多久时间, 当前登陆的用户有多少, 以及前1,5和15分钟系统的平均负载，和使用w命令给出的第一行内容相同
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li>
</ul>
<h2 id="磁盘分区情况"><a href="#磁盘分区情况" class="headerlink" title="磁盘分区情况"></a>磁盘分区情况</h2><p><code>fdisk -l</code> 查看磁盘分区情况</p>
<p><code>df -h</code>  查看磁盘使用情况</p>
<pre><code>hda1        并行通信   串行通信

sda1   sd SCSI接口的硬盘， a1 第一块物理硬盘的第一个分区
</code></pre>
<p><code>free</code>  查看系统内存占用情况</p>
<p><code>sleep 800</code>  休眠800秒</p>
<p><code>sleep 800</code>&amp; 休眠800秒放后台运行</p>
<p><code>jobs</code> 查看后台运行的任务</p>
<p><code>bg 任务序号</code>  将任务放置后台继续运行</p>
<p><code>fg 任务序号</code>  将任务调至前台继续运行</p>
<p><code>ps -ef|grep 关键字</code>  查找关键字进程</p>
<p><code>kill -9  PID</code>     结束PID编号的进程</p>
<p><code>top</code> 显示系统进程资源占用情况</p>
<p><code>uname -a</code>  显示系统详细信息</p>
<p><code>hostname</code> 显示&#x2F;修改主机名称</p>
<p><code>who</code> 显示当前登入系统的用户</p>
<p>w 显示更加详细的登入用户信息以及平均负载</p>
<p><code>dmesg&gt;log.txt</code>  将开机和内核输出信息输出log.txt文件中</p>
<h2 id="权限"><a href="#权限" class="headerlink" title="权限"></a>权限</h2><p><code>chmod</code>  修改权限</p>
<p><code>chmod -R 777 abc</code> 给文件夹abc文件夹所有文件授权777</p>
<p>rw-  rw-  r–<br> u    g    o<br>字符修改权限  chmod g-w,o-r 456.txt</p>
<p>数字修改权限<br>r w x<br>4 2 1<br>rwx rwx r-x<br> 7   7   5</p>
<p>例如要将 456.txt 权限修改成文件所属用户可读可写，同组用户可读可写，其他用户可读<br>                                 6                     6                 4<br>chmod 664 456.txt<br>将目录文件abc 修改成 所属用户可读可写可执行，同组用户可读可执行 其他用户没权限<br>                              7                        5                0<br>修改目录及子目录权限<br>chmod -R 777 abc</p>
<p>chown 属主    文件名<br>chgrp 属主组  文件名</p>
<p>查看文件内容:<br><code>cat</code> 适合看文件内容相对较少的文件<br><code>more/less</code> 分页查看文件内容<br><code>tail</code> 用来查看文件的末尾部分，适合查看日志等内容会一直增加的文件  -f<br><code>head</code> 查看文件的头部部分<br><code>vi</code>也可以查看</p>
<h2 id="vi编辑器"><a href="#vi编辑器" class="headerlink" title="vi编辑器"></a><code>vi</code>编辑器</h2><p>命令模式下<br>可以按 <code>yy</code> 复制光标所在行</p>
<p>按 <code>p</code>可以粘贴复制的内容</p>
<p>按 <code>dd</code>可以删除光标所在行<br><code>/+关键字符 按N</code> 可以从上往下依次查找<br><code>?+关键字符  按N</code> 可以从下往上依次查找<br>比如快速定位到800行    <code>:800</code></p>
<p><code>回到首行  按 ~ </code>  或者 <code> :0</code><br>回到末行 <code>   :$</code></p>
<h2 id="查看文件信息"><a href="#查看文件信息" class="headerlink" title="查看文件信息"></a>查看文件信息</h2><p><code>file</code> 查看文件类型<br><code>stat</code> 查看文件的详细信息</p>
<h2 id="文件对比"><a href="#文件对比" class="headerlink" title="文件对比"></a>文件对比</h2><p><code>diff</code> 比较两个文件的差异</p>
<p><code>diff  1.txt  2.txt</code></p>
<h2 id="文件查找-find"><a href="#文件查找-find" class="headerlink" title="文件查找 - find"></a>文件查找 - <code>find</code></h2><h3 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h3><pre class="line-numbers language-none"><code class="language-none">find [path] [expression]<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p><strong>参数说明</strong> :</p>
<p><strong>path</strong> 是要查找的目录路径，可以是一个目录或文件名，也可以是多个路径，多个路径之间用空格分隔，如果未指定路径，则默认为当前目录。</p>
<p><strong>expression</strong> 是可选参数，用于指定查找的条件，可以是文件名、文件类型、文件大小等等。</p>
<p>expression 中可使用的选项有二三十个之多，以下列出最常用的部份：</p>
<ul>
<li><code>-name pattern</code>：按文件名查找，支持使用通配符 <code>*</code> 和 <code>?</code>。</li>
<li><code>-type type</code>：按文件类型查找，可以是 <code>f</code>（普通文件）、<code>d</code>（目录）、<code>l</code>（符号链接）等。</li>
<li><code>-size [+-]size[cwbkMG]</code>：按文件大小查找，支持使用 <code>+</code> 或 <code>-</code> 表示大于或小于指定大小，单位可以是 <code>c</code>（字节）、<code>w</code>（字数）、<code>b</code>（块数）、<code>k</code>（KB）、<code>M</code>（MB）或 <code>G</code>（GB）。</li>
<li><code>-mtime days</code>：按修改时间查找，支持使用 <code>+</code> 或 <code>-</code> 表示在指定天数前或后，days 是一个整数表示天数。</li>
<li><code>-user username</code>：按文件所有者查找。</li>
<li><code>-group groupname</code>：按文件所属组查找。</li>
</ul>
<p>find 命令中用于时间的参数如下：</p>
<ul>
<li><code>-amin n</code>：查找在 n 分钟内被访问过的文件。</li>
<li><code>-atime n</code>：查找在 n*24 小时内被访问过的文件。</li>
<li><code>-cmin n</code>：查找在 n 分钟内状态发生变化的文件（例如权限）。</li>
<li><code>-ctime n</code>：查找在 n*24 小时内状态发生变化的文件（例如权限）。</li>
<li><code>-mmin n</code>：查找在 n 分钟内被修改过的文件。</li>
<li><code>-mtime n</code>：查找在 n*24 小时内被修改过的文件。</li>
</ul>
<p>在这些参数中，n 可以是一个正数、负数或零。正数表示在指定的时间内修改或访问过的文件，负数表示在指定的时间之前修改或访问过的文件，零表示在当前时间点上修改或访问过的文件。</p>
<p>例如：**-mtime 0** 表示查找今天修改过的文件，**-mtime -7** 表示查找一周以前修改过的文件。</p>
<p>关于时间 n 参数的说明：</p>
<ul>
<li><strong>+n</strong>：查找比 n 天前更早的文件或目录。</li>
<li><strong>-n</strong>：查找在 n 天内更改过属性的文件或目录。</li>
<li><strong>n</strong>：查找在 n 天前（指定那一天）更改过属性的文件或目录。</li>
</ul>
<h3 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h3><p>查找当前目录下名为 file.txt 的文件：</p>
<pre class="line-numbers language-none"><code class="language-none">find . -name file.txt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>将当前目录及其子目录下所有文件后缀为 <strong>.c</strong> 的文件列出来:</p>
<pre class="line-numbers language-none"><code class="language-none"># find . -name &quot;*.c&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>将当前目录及其子目录中的所有文件列出：</p>
<pre class="line-numbers language-none"><code class="language-none"># find . -type f<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>查找 &#x2F;home 目录下大于 1MB 的文件：</p>
<pre class="line-numbers language-none"><code class="language-none">find &#x2F;home -size +1M<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>查找 &#x2F;var&#x2F;log 目录下在 7 天前修改过的文件：</p>
<pre class="line-numbers language-none"><code class="language-none">find &#x2F;var&#x2F;log -mtime +7<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>将当前目录及其子目录下所有最近 20 天前更新过的文件列出，不多不少正好 20 天前的:</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># find . -ctime  20</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>将当前目录及其子目录下所有 20 天前及更早更新过的文件列出:</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># find . -ctime  +20</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>将当前目录及其子目录下所有最近 20 天内更新过的文件列出:</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># find . -ctime  20</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>查找 &#x2F;var&#x2F;log 目录中更改时间在 7 日以前的普通文件，并在删除之前询问它们：</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># find /var/log -type f -mtime +7 -ok rm &#123;&#125; \;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>查找当前目录中文件属主具有读、写权限，并且文件所属组的用户和其他用户具有读权限的文件：</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># find . -type f -perm 644 -exec ls -l &#123;&#125; \;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>查找系统中所有文件长度为 0 的普通文件，并列出它们的完整路径：</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># find / -type f -size 0 -exec ls -l &#123;&#125; \;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<h2 id="ipX相关"><a href="#ipX相关" class="headerlink" title="ipX相关"></a>ipX相关</h2><p>查询ip地址<br>ifconfig<br>设置ip地址<br>ifconfig eth0 192.168.1.9<br>测试网络连通性<br>ping 192.168.1.9</p>
<h2 id="ssh相关"><a href="#ssh相关" class="headerlink" title="ssh相关"></a>ssh相关</h2><p>远程登入<br>ssh 192.168.1.9&#96;</p>
<p>远程复制<br>scp 文件名 IP:目录</p>
<p>scp -r 目录 IP:目录</p>
<p>scp ip:文件名  目录</p>
<p>scp 192.168.1.99:&#x2F;home&#x2F;scott&#x2F;lesi.txt  .&#x2F;</p>
<h2 id="历史记录"><a href="#历史记录" class="headerlink" title="历史记录"></a>历史记录</h2><p>查看之前输入的命令<br>history<br>history  10   最近输入的10条命令<br>clear 清屏</p>
<h2 id="查看端口号"><a href="#查看端口号" class="headerlink" title="查看端口号"></a>查看端口号</h2><p>查看端口号占用情况 （端口号是指相应进程调用tcp&#x2F;udp传输协议的编号）  oracle 1521   mysql 3306</p>
<p>netstat -anp|grep 8080  查看端口号8080的占用情况</p>
<h2 id="挂载磁盘，USB等设备"><a href="#挂载磁盘，USB等设备" class="headerlink" title="挂载磁盘，USB等设备"></a>挂载磁盘，USB等设备</h2><p>挂载 （将设备跟目录关联起来）<br>mount &#x2F;dev&#x2F;sda1   &#x2F;home&#x2F;scott</p>
<p>卸载<br>umount &#x2F;home&#x2F;scott</p>
<h2 id="查看文件使用空间"><a href="#查看文件使用空间" class="headerlink" title="查看文件使用空间"></a>查看文件使用空间</h2><p><code>du -a</code></p>
<h2 id="软件安装包操作rpm-RedHat"><a href="#软件安装包操作rpm-RedHat" class="headerlink" title="软件安装包操作rpm - [RedHat]"></a>软件安装包操作rpm - [RedHat]</h2><p>rpm -qa|grep softname   查找软件包的安装版本情况<br>rpm -e  softname   卸载软件包<br>rpm -ivh softname  安装软件包</p>
<h2 id="创建链接-ln"><a href="#创建链接-ln" class="headerlink" title="创建链接 - ln"></a>创建链接 - <code>ln</code></h2><h3 id="语法-1"><a href="#语法-1" class="headerlink" title="语法"></a>语法</h3><pre class="line-numbers language-none"><code class="language-none">ln [参数][源文件或目录][目标文件或目录]<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>其中参数的格式为</p>
<pre class="line-numbers language-none"><code class="language-none">[-bdfinsvF] [-S backup-suffix] [-V &#123;numbered,existing,simple&#125;]
[--help] [--version] [--]<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<p><strong>命令功能</strong> :<br>Linux文件系统中，有所谓的链接(link)，我们可以将其视为档案的别名，而链接又可分为两种 : 硬链接(hard link)与软链接(symbolic link)，硬链接的意思是一个档案可以有多个名称，而软链接的方式则是产生一个特殊的档案，该档案的内容是指向另一个档案的位置。硬链接是存在同一个文件系统中，而软链接却可以跨越不同的文件系统。</p>
<p>不论是硬链接或软链接都不会将原本的档案复制一份，只会占用非常少量的磁碟空间。</p>
<p><strong>软链接</strong>：</p>
<ul>
<li>1.软链接，以路径的形式存在。类似于Windows操作系统中的快捷方式</li>
<li>2.软链接可以 跨文件系统 ，硬链接不可以</li>
<li>3.软链接可以对一个不存在的文件名进行链接</li>
<li>4.软链接可以对目录进行链接</li>
</ul>
<p><strong>硬链接</strong>：</p>
<ul>
<li>1.硬链接，以文件副本的形式存在。但不占用实际空间。</li>
<li>2.不允许给目录创建硬链接</li>
<li>3.硬链接只有在同一个文件系统中才能创建</li>
</ul>
<h4 id="命令参数"><a href="#命令参数" class="headerlink" title="命令参数"></a>命令参数</h4><p><strong>必要参数</strong>：</p>
<ul>
<li>–backup[&#x3D;CONTROL] 备份已存在的目标文件</li>
<li>-b 类似 <strong>–backup</strong> ，但不接受参数</li>
<li>-d 允许超级用户制作目录的硬链接</li>
<li>-f 强制执行</li>
<li>-i 交互模式，文件存在则提示用户是否覆盖</li>
<li>-n 把符号链接视为一般目录</li>
<li>-s 软链接(符号链接)</li>
<li>-v 显示详细的处理过程</li>
</ul>
<p><strong>选择参数</strong>：</p>
<ul>
<li>-S “-S&lt;字尾备份字符串&gt; “或 “–suffix&#x3D;&lt;字尾备份字符串&gt;”</li>
<li>-V “-V&lt;备份方式&gt;”或”–version-control&#x3D;&lt;备份方式&gt;”</li>
<li>–help 显示帮助信息</li>
<li>–version 显示版本信息</li>
</ul>
<h3 id="实例-1"><a href="#实例-1" class="headerlink" title="实例"></a>实例</h3><p>给文件创建软链接，为log2013.log文件创建软链接link2013，如果log2013.log丢失，link2013将失效：</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">ln</span> <span class="token parameter variable">-s</span> log2013.log link2013<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>输出：</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@localhost test<span class="token punctuation">]</span><span class="token comment"># ll</span>
-rw-r--r-- <span class="token number">1</span> root bin      <span class="token number">61</span> <span class="token number">11</span>-13 06:03 log2013.log
<span class="token punctuation">[</span>root@localhost test<span class="token punctuation">]</span><span class="token comment"># ln -s log2013.log link2013</span>
<span class="token punctuation">[</span>root@localhost test<span class="token punctuation">]</span><span class="token comment"># ll</span>
lrwxrwxrwx <span class="token number">1</span> root root     <span class="token number">11</span> <span class="token number">12</span>-07 <span class="token number">16</span>:01 link2013 -<span class="token operator">></span> log2013.log
-rw-r--r-- <span class="token number">1</span> root bin      <span class="token number">61</span> <span class="token number">11</span>-13 06:03 log2013.log<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>给文件创建硬链接，为log2013.log创建硬链接ln2013，log2013.log与ln2013的各项属性相同</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">ln</span> log2013.log ln2013<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>输出：</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@localhost test<span class="token punctuation">]</span><span class="token comment"># ll</span>
lrwxrwxrwx <span class="token number">1</span> root root     <span class="token number">11</span> <span class="token number">12</span>-07 <span class="token number">16</span>:01 link2013 -<span class="token operator">></span> log2013.log
-rw-r--r-- <span class="token number">1</span> root bin      <span class="token number">61</span> <span class="token number">11</span>-13 06:03 log2013.log
<span class="token punctuation">[</span>root@localhost test<span class="token punctuation">]</span><span class="token comment"># ln log2013.log ln2013</span>
<span class="token punctuation">[</span>root@localhost test<span class="token punctuation">]</span><span class="token comment"># ll</span>
lrwxrwxrwx <span class="token number">1</span> root root     <span class="token number">11</span> <span class="token number">12</span>-07 <span class="token number">16</span>:01 link2013 -<span class="token operator">></span> log2013.log
-rw-r--r-- <span class="token number">2</span> root bin      <span class="token number">61</span> <span class="token number">11</span>-13 06:03 ln2013
-rw-r--r-- <span class="token number">2</span> root bin      <span class="token number">61</span> <span class="token number">11</span>-13 06:03 log2013.log<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h2 id="Linux查看版本当前操作系统发行版信息"><a href="#Linux查看版本当前操作系统发行版信息" class="headerlink" title="Linux查看版本当前操作系统发行版信息"></a>Linux查看版本当前操作系统发行版信息</h2><p>使用 <code>cat /etc/issue</code> 或 <code>cat /etc/redhat-release</code></p>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>shell</tag>
        <tag>Linux命令</tag>
        <tag>bash</tag>
      </tags>
  </entry>
  <entry>
    <title>Can&#39;t connect to MySQL server on (10061 &quot;Unknown error&quot;)</title>
    <url>/2021/10/22/navicat-yu-dao-de-bao-cuo/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h2 id="解决MySQL-使用Navicat等远程链接工具，提示2003-Can’t-connect-to-MySQL-server-on-10061-“Unknown-error”-问题"><a href="#解决MySQL-使用Navicat等远程链接工具，提示2003-Can’t-connect-to-MySQL-server-on-10061-“Unknown-error”-问题" class="headerlink" title="解决MySQL 使用Navicat等远程链接工具，提示2003 - Can’t connect to MySQL server on (10061 “Unknown error”)问题"></a>解决MySQL 使用Navicat等远程链接工具，提示2003 - Can’t connect to MySQL server on (10061 “Unknown error”)问题</h2><h3 id="系统配置"><a href="#系统配置" class="headerlink" title="系统配置"></a>系统配置</h3><p>OS: redhat5.0<br>DataBase: MySQL8.0.23</p>
<h3 id="修改MySQL配置"><a href="#修改MySQL配置" class="headerlink" title="修改MySQL配置"></a>修改MySQL配置</h3><p>修改配置文件</p>
<span id="more"></span>

<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">su</span> - root
输入密码切换root用户
<span class="token function">vi</span> /etc/mysql/mysql.conf.d/mysqld.cnf<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>

<p>查找到 <code>bind-address</code><br>将后面的ip地址由127.0.0.1全部改为0.0.0.0</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">bind-address        <span class="token operator">=</span><span class="token number">0.0</span>.0.0
mysqlx-bind-address <span class="token operator">=</span><span class="token number">0.0</span>.0.0<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<h3 id="添加远程用户root的访问权限"><a href="#添加远程用户root的访问权限" class="headerlink" title="添加远程用户root的访问权限"></a>添加远程用户root的访问权限</h3><h3 id="登入mysql"><a href="#登入mysql" class="headerlink" title="登入mysql"></a>登入mysql</h3><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">mysql -uroot
use mysql

# 8.0版本以上的mysql
update mysql.user set host &#x3D; &#39;%&#39; where user &#x3D; &#39;root&#39;;
ALTER USER &#39;root&#39;@&#39;%&#39; IDENTIFIED WITH mysql_native_password BY &#39;your password&#39;;

# MySQL8.0以下版本使用语句 %表示多有机器。
GRANT ALL PRIVILEGES ON *.* TO root@&#39;%&#39; IDENTIFIED BY &#39;your password&#39;;

# 刷新权限
flush privileges;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
]]></content>
      <tags>
        <tag>10061 &quot;Unknown error&quot;</tag>
        <tag>使用Navicat等远程链接工具，提示2003</tag>
      </tags>
  </entry>
  <entry>
    <title>npm与nodejs版本不匹配,不支持</title>
    <url>/2021/10/17/npm-warn/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p><strong>1、问题：</strong><br>今天在nodejs搞服务器应用的时候发现nodejs版本和npm版本不匹配</p>
<p><code>npm WARN npm does not support Node.js v12.0.0</code></p>
<p><strong>2、解决办法：</strong></p>
<ol>
<li>在cmd命令窗口 查看node,npm版本,分别使用 <code>node -v</code>，<code>npm -v</code></li>
<li>npm与node版本对照<span class="exturl" data-url="aHR0cHM6Ly9ub2RlanMub3JnL3poLWNuL2Rvd25sb2FkL3JlbGVhc2VzLw==">以往的版本 | Node.js<i class="fa fa-external-link-alt"></i></span>，根据自己的node版本来更新npm 版本：</li>
<li>查找到对应的版本,运行 <code>npm -g install npm@6.9.0</code>此时仍然报错，</li>
</ol>
<span id="more"></span>

<p>   依旧显示npm 不支持这个版本 ，这说明npm存在旧的npm缓存，还是旧的npm 环境。</p>
<ol start="4">
<li>在 <code>C:\Users\administrater\AppData\Roaming</code> 根目录下删除 <code>npm</code>，<code>npm-cache</code>两个文件夹(如找不到roaming这个文件夹，可以在此电脑中搜索npm，根据路径删除掉这俩文件夹)</li>
<li>在命令行工具中执行 <code>npm install npm@6.9.0 -g</code>安装npm版本，之后就可以使用 <code>npm install </code>安装依赖了.(降级升级同理)</li>
</ol>
<blockquote>
<p>查看npm的镜像源</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> config get registry<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>查看cnpm的镜像源</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">cnpm config get registry<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>我们在安装时都会装一个淘宝镜像，如果cnpm没有设置或者两个都没包含<br><span class="exturl" data-url="aHR0cHM6Ly9yZWdpc3RyeS5ucG0udGFvYmFvLm9yZy8=">https://registry.npm.taobao.org<i class="fa fa-external-link-alt"></i></span><br>那就是没有安装淘宝镜像。<br>设置npm为淘宝镜像源</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java">npm install <span class="token operator">-</span>g cnpm <span class="token operator">--</span>registry<span class="token operator">=</span>https<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>registry<span class="token punctuation">.</span>npm<span class="token punctuation">.</span>taobao<span class="token punctuation">.</span>org<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>设置cnpm为淘宝镜像</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java">npm config set registry https<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>registry<span class="token punctuation">.</span>npm<span class="token punctuation">.</span>taobao<span class="token punctuation">.</span>org<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>这是设置npm的镜像，无推荐意见。可不装不影响降级<br><strong>3.进行降级</strong><br>先检查一下自己的镜像，确认一下那个对应的淘宝镜像<br>例如：<code>cnpm</code></p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java">cnpm install npm@版本号 <span class="token operator">-</span>g<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>需使用淘宝镜像进行降级操作。@6.9.0是版本！</p>
</blockquote>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>npm</tag>
      </tags>
  </entry>
  <entry>
    <title>nvm nrm 安装</title>
    <url>/2021/10/17/nvm-nrm/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h2 id="安装-nrm"><a href="#安装-nrm" class="headerlink" title="安装 nrm"></a><strong>安装 <code>nrm</code></strong></h2><p><code>npm i -g nrm</code><br><strong>产看版本</strong><br><code>nrm -V</code><br><strong>产看源列表</strong><br><code>nrm ls</code><br>报错如下</p>
<span id="more"></span>

<pre class="line-numbers language-none"><code class="language-none">PS C:\Users\admin&gt; nrm ls
C:\nvm\v16.14.2\node_modules\nrm\cli.js:9
const open &#x3D; require(&#39;open&#39;);
             ^
Error [ERR_REQUIRE_ESM]: require() of ES Module C:\nvm\v16.14.2\node_modules\nrm\node_modules\open\index.js from C:\nvm\v16.14.2\node_modules\nrm\cli.js not supported.
Instead change the require of index.js in C:\nvm\v16.14.2\node_modules\nrm\cli.js to a dynamic import() which is available in all CommonJS modules.
    at Object.&lt;anonymous&gt; (C:\nvm\v16.14.2\node_modules\nrm\cli.js:9:14) &#123;
  code: &#39;ERR_REQUIRE_ESM&#39;
&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p><strong>解决方案</strong></p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">Error <span class="token punctuation">[</span>ERR_REQUIRE_ESM<span class="token punctuation">]</span>: require<span class="token punctuation">(</span><span class="token punctuation">)</span> of ES Module D:<span class="token punctuation">\</span>npm<span class="token punctuation">\</span>node_modules<span class="token punctuation">\</span>nrm<span class="token punctuation">\</span>node_modules<span class="token punctuation">\</span>open<span class="token punctuation">\</span>index.js from D:<span class="token punctuation">\</span>npm<span class="token punctuation">\</span>node_modules<span class="token punctuation">\</span>nrm<span class="token punctuation">\</span>cli.js not supported.  
Instead change the require of index.js <span class="token keyword">in</span> D:<span class="token punctuation">\</span>npm<span class="token punctuation">\</span>node_modules<span class="token punctuation">\</span>nrm<span class="token punctuation">\</span>cli.js to a dynamic import<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token function">which</span> is available <span class="token keyword">in</span> all CommonJS modules.  
at Object. <span class="token punctuation">(</span>D:<span class="token punctuation">\</span>npm<span class="token punctuation">\</span>node_modules<span class="token punctuation">\</span>nrm<span class="token punctuation">\</span>cli.js:9:14<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  
code: <span class="token string">'ERR_REQUIRE_ESM'</span>  
<span class="token punctuation">&#125;</span>

原因：应该使用 <span class="token function">open</span> 的 CommonJs规范的包 ，现在 <span class="token function">open</span> v9.0.0 是 ES Module 版本的包

解决方法:
<span class="token function">npm</span> <span class="token function">install</span> <span class="token parameter variable">-g</span> nrm open@8.4.2 <span class="token parameter variable">--save</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>&#96;</p>
<p><code> npm install -g nrm open@8.4.2 --save</code></p>
<h2 id="解决nvm-在服务器每次都要重新use"><a href="#解决nvm-在服务器每次都要重新use" class="headerlink" title="解决nvm 在服务器每次都要重新use"></a>解决nvm 在服务器每次都要重新use</h2><p><code>nvm ls</code>列出当前已有的</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@VM-4-11-centos ~<span class="token punctuation">]</span><span class="token comment"># nvm ls</span>
-<span class="token operator">></span>     v16.14.2
default -<span class="token operator">></span> stable
iojs -<span class="token operator">></span> N/A <span class="token punctuation">(</span>default<span class="token punctuation">)</span>
unstable -<span class="token operator">></span> N/A <span class="token punctuation">(</span>default<span class="token punctuation">)</span>
<span class="token function">node</span> -<span class="token operator">></span> stable <span class="token punctuation">(</span>-<span class="token operator">></span> v16.14.2<span class="token punctuation">)</span> <span class="token punctuation">(</span>default<span class="token punctuation">)</span>
stable -<span class="token operator">></span> <span class="token number">16.14</span> <span class="token punctuation">(</span>-<span class="token operator">></span> v16.14.2<span class="token punctuation">)</span> <span class="token punctuation">(</span>default<span class="token punctuation">)</span>
lts/* -<span class="token operator">></span> lts/hydrogen <span class="token punctuation">(</span>-<span class="token operator">></span> N/A<span class="token punctuation">)</span>
lts/argon -<span class="token operator">></span> v4.9.1 <span class="token punctuation">(</span>-<span class="token operator">></span> N/A<span class="token punctuation">)</span>
lts/boron -<span class="token operator">></span> v6.17.1 <span class="token punctuation">(</span>-<span class="token operator">></span> N/A<span class="token punctuation">)</span>
lts/carbon -<span class="token operator">></span> v8.17.0 <span class="token punctuation">(</span>-<span class="token operator">></span> N/A<span class="token punctuation">)</span>
lts/dubnium -<span class="token operator">></span> v10.24.1 <span class="token punctuation">(</span>-<span class="token operator">></span> N/A<span class="token punctuation">)</span>
lts/erbium -<span class="token operator">></span> v12.22.12 <span class="token punctuation">(</span>-<span class="token operator">></span> N/A<span class="token punctuation">)</span>
lts/fermium -<span class="token operator">></span> v14.21.3 <span class="token punctuation">(</span>-<span class="token operator">></span> N/A<span class="token punctuation">)</span>
lts/gallium -<span class="token operator">></span> v16.20.0 <span class="token punctuation">(</span>-<span class="token operator">></span> N/A<span class="token punctuation">)</span>
lts/hydrogen -<span class="token operator">></span> v18.16.0 <span class="token punctuation">(</span>-<span class="token operator">></span> N/A<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p><code>nvm alias default stable</code></p>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>nrm</tag>
        <tag>nodejs</tag>
        <tag>nvm</tag>
      </tags>
  </entry>
  <entry>
    <title>Python的Json相关用法</title>
    <url>/2021/10/22/python-json/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1 id="json"><a href="#json" class="headerlink" title="json()"></a>json()</h1><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># load()：用于读取json文件；dump()：用于写入json文件  </span>
<span class="token comment"># loads() :将json字符串转换成字典格式;  </span>
<span class="token comment"># dumps() 将字典格式数据转换成json格式;  </span>
<span class="token comment"># with open("newbug.json", "r", encoding="utf-8") as j:  </span>
<span class="token comment">#     response = json.load(j)  </span>
<span class="token comment">#     print(type(response))  </span>
<span class="token comment"># with open(f'newbug.json', mode='w+', encoding='gbk') as file:  </span>
<span class="token comment">#     str = json.dumps(response.text)  </span>
<span class="token comment">#     file.write(str)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>Json.python</tag>
      </tags>
  </entry>
  <entry>
    <title>unitTest框架学习</title>
    <url>/2020/12/31/unittest-dan-yuan-ce-shi-kuang-jia-xue-xi/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h2 id="自动化测试用例管理"><a href="#自动化测试用例管理" class="headerlink" title="自动化测试用例管理"></a>自动化测试用例管理</h2><ul>
<li>传统方式</li>
</ul>
<span id="more"></span>

<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">Test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
 <span class="token keyword">def</span> <span class="token function">test1</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
  <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
 <span class="token keyword">def</span> <span class="token function">test2</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
  <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
 <span class="token keyword">def</span> <span class="token function">test3</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
  <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>

test <span class="token operator">=</span>Test<span class="token punctuation">(</span><span class="token punctuation">)</span>
test<span class="token punctuation">.</span>test1<span class="token punctuation">(</span><span class="token punctuation">)</span>
test<span class="token punctuation">.</span>test2<span class="token punctuation">(</span><span class="token punctuation">)</span>
test<span class="token punctuation">.</span>test3<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<ul>
<li>unitTest</li>
</ul>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> unittest

<span class="token comment">#继承unittest.TestCase类</span>
<span class="token keyword">class</span> <span class="token class-name">Test</span><span class="token punctuation">(</span>unittest<span class="token punctuation">.</span>TestCase<span class="token punctuation">)</span><span class="token punctuation">:</span>
 <span class="token keyword">def</span> <span class="token function">test_1</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
  <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
 <span class="token keyword">def</span> <span class="token function">test_2</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
  <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
 <span class="token keyword">def</span> <span class="token function">test_3</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
  <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
 <span class="token keyword">def</span> <span class="token function">fun_name</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
  <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'If the function name does not start with test, it will not be executed\n函数名称不是test开头则不会执行'</span></span><span class="token punctuation">)</span>
<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>
 unittest<span class="token punctuation">.</span>main<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>执行顺序 <code>num</code>字段 <code>fun_name_num</code></p>
<h2 id="测试套件"><a href="#测试套件" class="headerlink" title="测试套件"></a>测试套件</h2><p>执行指定用例</p>
<ol>
<li>创建套件</li>
<li>添加用例</li>
<li>执行用例</li>
</ol>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> unittest

<span class="token comment">#继承unittest.TestCase类</span>
<span class="token keyword">class</span> <span class="token class-name">Test</span><span class="token punctuation">(</span>unittest<span class="token punctuation">.</span>TestCase<span class="token punctuation">)</span><span class="token punctuation">:</span>
 <span class="token keyword">def</span> <span class="token function">test_1</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
  <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
 <span class="token keyword">def</span> <span class="token function">test_2</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
  <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
 <span class="token keyword">def</span> <span class="token function">test_3</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
  <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>
 <span class="token comment">#创建套件</span>
 suit <span class="token operator">=</span> unittest<span class="token punctuation">.</span>TestSuite<span class="token punctuation">(</span><span class="token punctuation">)</span>
 <span class="token comment">#添加用例（单个）</span>
 suit<span class="token punctuation">.</span>addTest<span class="token punctuation">(</span>Test<span class="token punctuation">(</span><span class="token string">'test_3'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
 <span class="token comment">#添加用例（多个）</span>
 suit<span class="token punctuation">.</span>addTests<span class="token punctuation">(</span><span class="token punctuation">[</span>Test<span class="token punctuation">(</span><span class="token string">'test_1'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>Test<span class="token punctuation">(</span><span class="token string">'test_3'</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
 <span class="token comment">#执行用例</span>
 <span class="token keyword">case</span> <span class="token operator">=</span> unittest<span class="token punctuation">.</span>TextTestRunner<span class="token punctuation">(</span><span class="token punctuation">)</span>
 <span class="token keyword">case</span><span class="token punctuation">.</span>run<span class="token punctuation">(</span>suit<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h4 id="如果存在多个类"><a href="#如果存在多个类" class="headerlink" title="如果存在多个类"></a>如果存在多个类</h4><ol>
<li>创建套件</li>
<li>创建load对象加载类</li>
<li>添加指定的类</li>
<li>执行类的用例</li>
</ol>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> unittest

<span class="token comment">#继承unittest.TestCase类</span>
<span class="token keyword">class</span> <span class="token class-name">Test_1</span><span class="token punctuation">(</span>unittest<span class="token punctuation">.</span>TestCase<span class="token punctuation">)</span><span class="token punctuation">:</span>
 <span class="token keyword">def</span> <span class="token function">test_1</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
  <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
 <span class="token keyword">def</span> <span class="token function">test_2</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
  <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
 <span class="token keyword">def</span> <span class="token function">test_3</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
  <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
<span class="token keyword">class</span> <span class="token class-name">Test_2</span><span class="token punctuation">(</span>unittest<span class="token punctuation">.</span>TestCase<span class="token punctuation">)</span><span class="token punctuation">:</span>
 <span class="token keyword">def</span> <span class="token function">test_4</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
  <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span>
 <span class="token keyword">def</span> <span class="token function">test_5</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
  <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span>
 <span class="token keyword">def</span> <span class="token function">test_6</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
  <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span>
<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>
 <span class="token comment">#创建套件</span>
 suit <span class="token operator">=</span> unittest<span class="token punctuation">.</span>TestSuite<span class="token punctuation">(</span><span class="token punctuation">)</span>
 <span class="token comment">#创建load对象加载类</span>
 load <span class="token operator">=</span> unittest<span class="token punctuation">.</span>TestLoader<span class="token punctuation">(</span><span class="token punctuation">)</span>
 suit<span class="token punctuation">.</span>addTests<span class="token punctuation">(</span>load<span class="token punctuation">.</span>loasTestsFromTestCase<span class="token punctuation">(</span>Test_2<span class="token punctuation">)</span><span class="token punctuation">)</span>
 <span class="token keyword">case</span> <span class="token operator">=</span> unittest<span class="token punctuation">.</span>TextTestRunner<span class="token punctuation">(</span><span class="token punctuation">)</span>
 <span class="token keyword">case</span><span class="token punctuation">.</span>run<span class="token punctuation">(</span>suit<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h2 id="测试固件"><a href="#测试固件" class="headerlink" title="测试固件"></a>测试固件</h2><p><strong><code>setUp(self)</code> <code>tearDown(self)</code> 函数：</strong></p>
<ol>
<li>每次执行函数方法时，必须先执行一次 <code>setUp(self)</code>函数，执行完一个函数方法后，必须再执行一次 <code>tearDown(self)</code>函数。</li>
<li><code>unittest</code>默认根据 <code>ASCII</code>码的顺序加载执行用例，数字与字母的顺序为：<code>0-9</code>，<code>A-Z</code>，<code>a-z</code>。所以以 <code>A</code>开头的测试用例方法会优先执行，以 <code>a</code>开头会后执行。</li>
<li>当函数方法以 <code>test</code>开头进行读取，不是以 <code>test</code>开头的不执行该方法。</li>
</ol>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> unittest

<span class="token comment">#继承unittest.TestCase类</span>
<span class="token keyword">class</span> <span class="token class-name">Test_1</span><span class="token punctuation">(</span>unittest<span class="token punctuation">.</span>TestCase<span class="token punctuation">)</span><span class="token punctuation">:</span>
 <span class="token keyword">def</span> <span class="token function">setUp</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
  <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'打开浏览器'</span><span class="token punctuation">)</span>
 <span class="token keyword">def</span> <span class="token function">test_1</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
  <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
 <span class="token keyword">def</span> <span class="token function">test_2</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
  <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
 <span class="token keyword">def</span> <span class="token function">test_3</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
  <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
 <span class="token keyword">def</span> <span class="token function">tearDown</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
  <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'关闭浏览器'</span><span class="token punctuation">)</span>

<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>
 unittest<span class="token punctuation">.</span>main<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>运行结果如下</p>
<pre class="line-numbers language-none"><code class="language-none">打开浏览
1
关闭浏览
打开浏览
2
关闭浏览
打开浏览
3
关闭浏览<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>我们发现，每执行一条用例前后都会去调用 <code>setUp</code>和 <code>tearDown</code>方法，极大地降低了下效率</p>
<p><strong><code>setUpClass(cls)</code> <code>tearDownClass(cls)</code> 类方法：</strong></p>
<ol>
<li>执行函数方法前，先执行一次 <code>setUpClass(cls)</code>里面的方法，执行完函数方法后，再执行一次 <code>tearDownClass(cls)</code>里面的函数方法。</li>
<li><code>unittest</code>默认根据 <code>ASCII</code>码的顺序加载执行用例，数字与字母的顺序为：<code>0-9</code>，<code>A-Z</code>，<code>a-z</code>。所以以 <code>A</code>开头的测试用例方法会优先执行，以 <code>a</code>开头会后执行。</li>
<li>当函数方法以 <code>test</code>开头进行读取，不是以 <code>test</code>开头的不执行该方法。</li>
<li><code>setUpClass(cls)</code> 与 <code>tearDownClass(cls)</code> 并不一定要组合使用，它们是同级关系不是上下级关系，可以单独拆分使用。例如：<code>setUpClass(cls)</code>为前置条件,<code>tearDown(self)</code>为后置条件，那么 <code>setUpClass(cls)</code>需要添加装饰器且里面的方法只会执行一次，<code>tearDown(self)</code>后置条件不用加装饰器，只是每执行完一个函数方法后，都会去执行一次 <code>tearDown(self)</code>函数里面的方法</li>
</ol>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> unittest

<span class="token comment">#继承unittest.TestCase类</span>
<span class="token keyword">class</span> <span class="token class-name">Test_1</span><span class="token punctuation">(</span>unittest<span class="token punctuation">.</span>TestCase<span class="token punctuation">)</span><span class="token punctuation">:</span>
 
 <span class="token decorator annotation punctuation">@classmethod</span> <span class="token comment">#classmethod装饰器</span>
 <span class="token keyword">def</span> <span class="token function">setUpClass</span><span class="token punctuation">(</span>cls<span class="token punctuation">)</span><span class="token punctuation">:</span>
  <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'打开浏览器'</span><span class="token punctuation">)</span>
 <span class="token keyword">def</span> <span class="token function">test_1</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
  <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
 <span class="token keyword">def</span> <span class="token function">test_2</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
  <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
 <span class="token keyword">def</span> <span class="token function">test_3</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
  <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
 <span class="token decorator annotation punctuation">@classmethod</span> <span class="token comment">#classmethod装饰器</span>
 <span class="token keyword">def</span> <span class="token function">tearDownClass</span><span class="token punctuation">(</span>cls<span class="token punctuation">)</span><span class="token punctuation">:</span>
  <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'关闭浏览器'</span><span class="token punctuation">)</span>

<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>
 unittest<span class="token punctuation">.</span>main<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<pre class="line-numbers language-none"><code class="language-none">打开浏览
1
2
3
关闭浏览<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
]]></content>
      <categories>
        <category>软件测试</category>
      </categories>
      <tags>
        <tag>unitTest</tag>
        <tag>测试框架学习</tag>
      </tags>
  </entry>
  <entry>
    <title>linux vi 命令学习</title>
    <url>/2020/09/30/vi-ming-ling-xue-xi/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h2 id="vi编辑器常用命令-2023-08-08"><a href="#vi编辑器常用命令-2023-08-08" class="headerlink" title="vi编辑器常用命令 : 2023-08-08"></a>vi编辑器常用命令 : 2023-08-08</h2><hr>
<h2 id="进入编辑模式"><a href="#进入编辑模式" class="headerlink" title="进入编辑模式"></a>进入编辑模式</h2><p><code>--INSERT--</code></p>
<p><code>i</code>在光标前插入 <code>[小写]</code>,</p>
<p><code>a</code>在光标后插入 <code>[小写]</code>,</p>
<p><code>o</code>在当前行后插入 <code>[小写]</code>,</p>
<span id="more"></span>

<p><code>O</code>在当前行前插入 <code>[大写]</code>,</p>
<hr>
<h2 id="进入底线命令行模式"><a href="#进入底线命令行模式" class="headerlink" title="进入底线命令行模式"></a>进入底线命令行模式</h2><p><code>--NORMAL--</code></p>
<p><code>ESC</code>,<code>CTRL+[</code></p>
<h3 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h3><p><code>k</code>上<br><code>j</code>,<code>Enter</code>下<br><code>h</code>左<br><code>l</code>,<code>空格</code>右<br>or <code>方向按键</code></p>
<p><code>ctrl+f</code>向下翻一页<br><code>ctrl+b</code>向上翻一页<br><code>ctrl+u</code>向上翻半页<br><code>ctrl+d</code>向下翻半页</p>
<p><code>gg</code>,转至第一行<br><code>0</code>到行首<br><code>G</code>转至最后一行<br><code>$</code>到行尾</p>
<p><code>:set number/nu</code> 开启行号</p>
<p><code>:set nonumber</code> 关闭行号</p>
<p><code>:wq</code> 保存退出</p>
<p><code>:q!</code> 强制退出</p>
<p><code>dd</code>删除当前行</p>
<p><code>x</code>删除光标处字符</p>
<p><code>yy</code>复制当前行</p>
<p><code>v</code> 选中光标所在字符</p>
<p><code>p</code>粘贴至下一行<br><code>P</code>粘贴至上一行<br><code>:20</code>跳转至20行</p>
<p><code>/搜索内容</code>向下搜索 <code>-n</code>切换一下一个,上一个 <code>shift+n</code><br><code>?搜索内容</code>向上搜索 <code>-n</code>切换一下一个,上一个 <code>shift+n</code></p>
<p><code>:set hlsearch</code> 搜索高亮</p>
<!--stackedit_data:
eyJoaXN0b3J5IjpbLTE5NzU2NDY4ODBdfQ==
-->]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux命令</tag>
        <tag>vi</tag>
      </tags>
  </entry>
  <entry>
    <title>Vue3学习</title>
    <url>/2022/09/22/vue3-xue-xi-bi-ji/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h2 id="第一章，入门"><a href="#第一章，入门" class="headerlink" title="第一章，入门"></a>第一章，入门</h2><h3 id="1-创建工程"><a href="#1-创建工程" class="headerlink" title="1. 创建工程"></a>1. 创建工程</h3><h4 id="使用脚手架-vue-cli创建"><a href="#使用脚手架-vue-cli创建" class="headerlink" title="使用脚手架 vue-cli创建"></a>使用脚手架 <code>vue-cli</code>创建</h4><h5 id="安装脚手架-vue-cli"><a href="#安装脚手架-vue-cli" class="headerlink" title="安装脚手架 vue-cli"></a>安装脚手架 <code>vue-cli</code></h5><ul>
<li>Node 版本要求<br>Vue CLI 4.x 需要 <span class="exturl" data-url="aHR0cHM6Ly9ub2RlanMub3JnLw==">Node.js<i class="fa fa-external-link-alt"></i></span> v8.9 或更高版本 (推荐 v10 以上)。你可以使用 <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3RqL24=">n<i class="fa fa-external-link-alt"></i></span>，<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2NyZWF0aW9uaXgvbnZt">nvm<i class="fa fa-external-link-alt"></i></span> 或 <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2NvcmV5YnV0bGVyL252bS13aW5kb3dz">nvm-windows<i class="fa fa-external-link-alt"></i></span> 在同一台电脑中管理多个 Node 版本。</li>
</ul>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> <span class="token parameter variable">-g</span> @vue/cli
<span class="token comment"># 或者下面这行</span>
<span class="token function">yarn</span> global <span class="token function">add</span> @vue/cli<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>

<ul>
<li>升级</li>
</ul>
<span id="more"></span>

<p>如需升级全局的 Vue CLI 包，请运行：</p>
<pre class="line-numbers language-none"><code class="language-none">npm update -g @vue&#x2F;cli
# 或者
yarn global upgrade --latest @vue&#x2F;cli<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>

<ul>
<li>查看本地脚手架版本<br><code>vue -V</code>&#x2F;<code>vue --version</code><br>版本应大于5.1.0 可以创建vue3项目–具体没试过</li>
<li>坑：</li>
</ul>
<pre class="line-numbers language-none"><code class="language-none">vue : 无法加载文件 xxxxx\nodejs\vue.ps1。未对文件 xxxxx\nodejs\vue.ps1 进行数字签名。无法在当前系统上运行该脚本。有关运行脚本和设置执行策略的详细信息，请参阅 https:&#x2F;go.microsoft.com&#x2F;fwlin
k&#x2F;?LinkID&#x3D;135170 中的 about_Execution_Policies。
所在位置 行:1 字符: 1
+ vue --version
+ ~~~
    + CategoryInfo          : SecurityError: (:) []，PSSecurityException
    + FullyQualifiedErrorId : UnauthorizedAccess<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<ul>
<li>原因：<br><strong>由于使用的是powershell，存在powershell不能或禁止执行脚本</strong><br>powershell无疑是对安全充分考虑，把脚本的执行分成几种策略<br><strong>4种常见的策略：</strong></li>
<li><code>Restricted</code>： （默认策略）禁止运行任何脚本和配置文件。</li>
<li><code>AllSigned</code> ：可以运行脚本，但要求所有脚本和配置文件由可信发布者签名，包括在本地计算机上编写的脚本。</li>
<li><code>RemoteSigned</code> ：可以运行脚本，但要求从网络上下载的脚本和配置文件由可信发布者签名； 不要求对已经运行和已在本地计算机编写的脚本进行数字签名。</li>
<li><code>Unrestricted</code> ：可以运行未签名脚本。（危险！）<br><strong>解决办法：</strong><br>获取当前的执行策略 <code>Get-ExecutionPolicy</code>命令不区分大小写<br>在命令框输入 <code>set-ExecutionPolicy RemoteSigned</code><br>在 <code>PowerShell</code>中输入会出现如下图，选择 <code>y</code>或者 <code>a</code>即可</li>
<li><strong>创建工程</strong></li>
</ul>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">vue create hello-world<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<h4 id="使用-Vite创建"><a href="#使用-Vite创建" class="headerlink" title="使用 Vite创建"></a>使用 <code>Vite</code>创建</h4><p><code>Vite</code>新一代前端构建工具-老的是 <code>webpak</code><br>优势：</p>
<ul>
<li>开发环境中，无需打包，快速冷启动</li>
<li>轻量，快速的热重载（HMR）</li>
<li>按需编译，不再等待整个应用编译完成</li>
<li><strong>创建工程</strong></li>
</ul>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> init vite-app project-name<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<pre class="line-numbers language-log" data-language="log"><code class="language-log">PS <span class="token file-path string">C:\Users\admin></span> npm init vite<span class="token operator">-</span>app vue3_study_vite
<span class="token property">Need to install the following packages:</span>
  create<span class="token operator">-</span>vite<span class="token operator">-</span>app
Ok to proceed<span class="token operator">?</span> <span class="token operator">(</span>y<span class="token operator">)</span> y
npm <span class="token level warning important">WARN</span> deprecated create<span class="token operator">-</span>vite<span class="token operator">-</span>app<span class="token operator">@</span><span class="token number">1.21.0</span><span class="token operator">:</span> create<span class="token operator">-</span>vite<span class="token operator">-</span>app has been deprecated<span class="token punctuation">.</span> run `npm init <span class="token operator">@</span>vitejs<span class="token operator">/</span>app` or `yarn create <span class="token operator">@</span>vitejs<span class="token operator">/</span>app` instead<span class="token punctuation">.</span>
Scaffolding project in <span class="token file-path string">C:\Users\admin\vue3_study_vite...</span>

Done<span class="token punctuation">.</span> Now run<span class="token operator">:</span>

  cd vue3_study_vite
  npm install <span class="token operator">(</span>or `yarn`<span class="token operator">)</span>
  npm run dev <span class="token operator">(</span>or `yarn dev`<span class="token operator">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> <span class="token operator">&lt;</span>project-name<span class="token operator">></span>
<span class="token function">npm</span> <span class="token function">install</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<h3 id="2-vue-cil创建的工程分析"><a href="#2-vue-cil创建的工程分析" class="headerlink" title="2. vue-cil创建的工程分析"></a>2. <code>vue-cil</code>创建的工程分析</h3><p><img src="https://cdn.jsdelivr.net/gh/Fansirsqi/blog-Images/images/202303021601301.png"></p>
<h5 id="主文件-main-js"><a href="#主文件-main-js" class="headerlink" title="主文件 main.js"></a>主文件 <code>main.js</code></h5><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// 引入的不再是2.0的 Vue构造函数（首字母大写，通过new调用）了，而是一个名为creataApp的工厂函数（无需new调用）</span>
<span class="token keyword">import</span> <span class="token punctuation">&#123;</span> createApp <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'vue'</span>
<span class="token keyword">import</span> App <span class="token keyword">from</span> <span class="token string">'./App.vue'</span>
<span class="token comment">// createApp(App).mount('#app') //拆解一下</span>
<span class="token comment">//以上拆解</span>
<span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token function">createApp</span><span class="token punctuation">(</span>App<span class="token punctuation">)</span> <span class="token comment">//创建应用实例对象，app类似于vue2中的 vm 但比vm更‘轻’</span>
<span class="token comment">// 挂载</span>
app<span class="token punctuation">.</span><span class="token function">mount</span><span class="token punctuation">(</span><span class="token string">'#app'</span><span class="token punctuation">)</span>
<span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=></span><span class="token punctuation">&#123;</span>
    <span class="token comment">//定时器，间隔一秒钟，卸载</span>
    app<span class="token punctuation">.</span><span class="token function">unmount</span><span class="token punctuation">(</span><span class="token string">'#app'</span><span class="token punctuation">)</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token number">1000</span><span class="token punctuation">)</span>


<span class="token comment">// Vue2写法</span>
<span class="token comment">// new Vue(&#123;</span>
<span class="token comment">//     render:h => h(App)</span>
<span class="token comment">// &#125;).mount('#app')</span>
<span class="token comment">// //上面拆解一下</span>
<span class="token comment">// const vm = new Vue(&#123;</span>
<span class="token comment">//     render:h => h(App)</span>
<span class="token comment">// &#125;)</span>
<span class="token comment">// vmm.mount('#app')</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h5 id="脚手架配置文件-vue-config-js"><a href="#脚手架配置文件-vue-config-js" class="headerlink" title="脚手架配置文件 vue.config.js"></a>脚手架配置文件 <code>vue.config.js</code></h5><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">&#123;</span>
  <span class="token comment">// 选项</span>
  lintOnSave<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment">//关闭语法检查</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>

<h5 id="App-vue模板"><a href="#App-vue模板" class="headerlink" title="App.vue模板"></a>App.vue模板</h5><pre class="line-numbers language-vue" data-language="vue"><code class="language-vue">&lt;template&gt;
  &lt;!-- vue3组件中的模板结构可以没有根标签 --&gt;
  &lt;img alt&#x3D;&quot;Vue logo&quot; src&#x3D;&quot;.&#x2F;assets&#x2F;logo.png&quot;&gt;
  &lt;HelloWorld msg&#x3D;&quot;Welcome to Your Vue.js App&quot; &#x2F;&gt;
&lt;&#x2F;template&gt;
&lt;script&gt;
import HelloWorld from &#39;.&#x2F;components&#x2F;HelloWorld.vue&#39;&#x2F;&#x2F;引入 HellWorld组件
export default &#123;
  name: &#39;App&#39;,&#x2F;&#x2F;给组件命名，
  components: &#123;&#x2F;&#x2F;注册组件
    HelloWorld
  &#125;
&#125;
&lt;&#x2F;script&gt;
&lt;style&gt;
#app &#123;
  font-family: Avenir, Helvetica, Arial, sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  text-align: center;
  color: #2c3e50;
  margin-top: 60px;
&#125;
&lt;&#x2F;style&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h2 id="第二章、常用CompositionAPI-组合式API"><a href="#第二章、常用CompositionAPI-组合式API" class="headerlink" title="第二章、常用CompositionAPI(组合式API)"></a>第二章、常用CompositionAPI(组合式API)</h2><h3 id="1-拉开序幕的-setup"><a href="#1-拉开序幕的-setup" class="headerlink" title="1. 拉开序幕的 setup()"></a>1. 拉开序幕的 <code>setup()</code></h3><ol>
<li><code>vue3</code>中的一个新的配置项，值为一个函数</li>
<li><code>setup</code>是所有组合式 <code>API</code>表演的舞台</li>
<li>组件中所有用到的数据、方法等待，均要配置在 <code>setup</code>中</li>
<li>两种返回值：</li>
</ol>
<ul>
<li><ol>
<li>一个对象，，对象中的属性，方法，在模板中可以直接使用！！</li>
</ol>
</li>
<li><ol start="2">
<li>渲染函数，可以自定义渲染内容（了解）</li>
</ol>
</li>
</ul>
<ol start="5">
<li><code>&lt;font color=&#39;red&#39;&gt;</code>注意点<code>&lt;/font&gt;</code>:</li>
<li>不建议 <code>vue2</code>,<code>vue3</code>混用<ul>
<li><code>Vue2.x</code>配置的（<code>data</code>，<code>methods</code>，<code>computed</code>…）中可以访问到setup中的属性，方法</li>
<li>但是在 <code>setup</code>中不能访问 <code>vue2</code>的配置（<code>data</code>，<code>methods</code>，<code>computed</code>…）</li>
<li>如果有混合定义，那么 <code>vue3</code>的优先级高</li>
</ul>
</li>
<li><code>setup</code>不是一个 <code>async</code>函数，因为返回值不再是 <code>return</code>的对象，而是 <code>promise</code>，模板看不到 <code>return</code>对象中的属性</li>
</ol>
<h4 id="setup-的两个注意点"><a href="#setup-的两个注意点" class="headerlink" title="setup()的两个注意点"></a><code>setup()</code>的两个注意点</h4><ol>
<li>执行时机</li>
</ol>
<ul>
<li>在 <code>beforeCreate</code>之前执行一次，<code>this</code>是 <code>undefined</code><br><code>Demo.vue</code></li>
</ul>
<pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"> <span class="token operator">&lt;</span>template<span class="token operator">></span>
    <span class="token operator">&lt;</span>div<span class="token operator">></span>
        <span class="token operator">&lt;</span>h1<span class="token operator">></span>一个人的信息<span class="token operator">&lt;</span><span class="token operator">/</span>h1<span class="token operator">></span>
        <span class="token operator">&lt;</span>h2<span class="token operator">></span>姓名：<span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> person<span class="token punctuation">.</span>name <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token operator">&lt;</span><span class="token operator">/</span>h2<span class="token operator">></span>
        <span class="token operator">&lt;</span>h2<span class="token operator">></span>年龄：<span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> person<span class="token punctuation">.</span>age <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token operator">&lt;</span><span class="token operator">/</span>h2<span class="token operator">></span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>
<span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">></span>
<span class="token operator">&lt;</span>script<span class="token operator">></span>
<span class="token keyword">import</span> <span class="token punctuation">&#123;</span> reactive <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'vue'</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">&#123;</span>
    name<span class="token operator">:</span> <span class="token string">'components-demo'</span><span class="token punctuation">,</span>
    <span class="token function">beforeCreate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'-beforeCreate-'</span><span class="token punctuation">)</span>
    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
    <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'--setup--'</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">)</span>
        <span class="token keyword">let</span> person <span class="token operator">=</span> <span class="token function">reactive</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>
            name<span class="token operator">:</span> <span class="token string">'Susan'</span><span class="token punctuation">,</span>
            age<span class="token operator">:</span> <span class="token number">16</span>
        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> <span class="token punctuation">&#123;</span>
            person
        <span class="token punctuation">&#125;</span>
    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p><img src="https://cdn.jsdelivr.net/gh/Fansirsqi/blog-Images/images/202303161600875.png"></p>
<ol>
<li><code>setup()</code>的参数</li>
</ol>
<pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token function">setup</span><span class="token punctuation">(</span>props<span class="token punctuation">,</span>context<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p><code>props</code>:值为对象，包含：组件外部传递过来，且内部声明接受了的属性<br><code>context</code>:上下文对象</p>
<ul>
<li><code>attrs</code>:值为对象，包含组件外部传递过来，但是没有在props配置中声明的属性，相当于 <code>this.$attrs</code>.</li>
<li><code>slots</code>:收到的插槽内容，相当于 <code>this.$slots</code>.</li>
<li><code>emit</code>:分发自定义事件的函数，相当于 <code>this.$emit</code>.</li>
</ul>
<p>内容代码<br><code>App.vue</code></p>
<pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token operator">&lt;</span>template<span class="token operator">></span>
  <span class="token operator">&lt;</span>Demo @hello<span class="token operator">=</span><span class="token string">"showHelloMsg"</span> msg<span class="token operator">=</span><span class="token string">"你好"</span> school<span class="token operator">=</span><span class="token string">"依旧归七学院"</span><span class="token operator">></span>
    <span class="token operator">&lt;</span>template v<span class="token operator">-</span>slot<span class="token operator">:</span>qwe<span class="token operator">></span>
      <span class="token operator">&lt;</span>span<span class="token operator">></span>
        测试卡槽
      <span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">></span>
  <span class="token operator">&lt;</span><span class="token operator">/</span>Demo<span class="token operator">></span>
  <span class="token operator">&lt;</span>h1<span class="token operator">></span>以上是demo组件<span class="token operator">&lt;</span><span class="token operator">/</span>h1<span class="token operator">></span>
<span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">></span>
<span class="token operator">&lt;</span>script<span class="token operator">></span>
<span class="token keyword">import</span> Demo <span class="token keyword">from</span> <span class="token string">'./components/Demo'</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">&#123;</span>
  name<span class="token operator">:</span> <span class="token string">'app'</span><span class="token punctuation">,</span>
  components<span class="token operator">:</span> <span class="token punctuation">&#123;</span> Demo <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
  <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">function</span> <span class="token function">showHelloMsg</span><span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
      <span class="token function">alert</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">出发了hello时间，收到的参数是:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>value<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span>
    <span class="token punctuation">&#125;</span>
    <span class="token keyword">return</span> <span class="token punctuation">&#123;</span>
      showHelloMsg
    <span class="token punctuation">&#125;</span>
  <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p><code>Demo.vue</code></p>
<pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token operator">&lt;</span>template<span class="token operator">></span>
    <span class="token operator">&lt;</span>h1<span class="token operator">></span>一个人的信息<span class="token operator">&lt;</span><span class="token operator">/</span>h1<span class="token operator">></span>
    <span class="token operator">&lt;</span>h2<span class="token operator">></span>姓名：<span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> person<span class="token punctuation">.</span>name <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token operator">&lt;</span><span class="token operator">/</span>h2<span class="token operator">></span>
    <span class="token operator">&lt;</span>h2<span class="token operator">></span>年龄：<span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> person<span class="token punctuation">.</span>age <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token operator">&lt;</span><span class="token operator">/</span>h2<span class="token operator">></span>
    <span class="token operator">&lt;</span>button @click<span class="token operator">=</span><span class="token string">"test"</span><span class="token operator">></span>测试demo组件的触发事件<span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">></span>
<span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">></span>
<span class="token operator">&lt;</span>script<span class="token operator">></span>
<span class="token keyword">import</span> <span class="token punctuation">&#123;</span> reactive <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'vue'</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">&#123;</span>
    name<span class="token operator">:</span> <span class="token string">'components-Demo'</span><span class="token punctuation">,</span>
    props<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'msg'</span><span class="token punctuation">,</span> <span class="token string">'school'</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token comment">//</span>
    emits<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'hello'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token function">beforeCreate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'-beforeCreate-'</span><span class="token punctuation">)</span>
    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
    <span class="token function">setup</span><span class="token punctuation">(</span><span class="token parameter">props<span class="token punctuation">,</span> context</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'--setup--\n[props]'</span><span class="token punctuation">,</span> props<span class="token punctuation">)</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'--setup--\n[context]'</span><span class="token punctuation">,</span> context<span class="token punctuation">)</span>
        <span class="token comment">// console.log('-setup--\n[context.attrs]用于捕获最前面定义的msg,school,但是未在后面声明的key--', context.attrs)//相当于vue2中的$attrs,用于捕获最前面定义的msg,school,但是未在后面声明的key，</span>
        <span class="token comment">// console.log('-setup--\n[context.emit]', context.emit)//触发自定义事件的</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'--setup--\n[context.slots]:'</span><span class="token punctuation">,</span> context<span class="token punctuation">.</span>slots<span class="token punctuation">)</span>
        <span class="token keyword">let</span> person <span class="token operator">=</span> <span class="token function">reactive</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>
            name<span class="token operator">:</span> <span class="token string">'Susan'</span><span class="token punctuation">,</span>
            age<span class="token operator">:</span> <span class="token number">16</span>
        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>
        <span class="token keyword">function</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
            context<span class="token punctuation">.</span><span class="token function">emit</span><span class="token punctuation">(</span><span class="token string">'hello'</span><span class="token punctuation">,</span> <span class="token number">666</span><span class="token punctuation">)</span>
        <span class="token punctuation">&#125;</span>
        <span class="token keyword">return</span> <span class="token punctuation">&#123;</span>
            person<span class="token punctuation">,</span> test
        <span class="token punctuation">&#125;</span>
    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span>
<span class="token comment">// import HelloWorld from './HelloWorld'</span>
<span class="token comment">// export default &#123;</span>
<span class="token comment">//     name: 'app',</span>
<span class="token comment">//     components: &#123;</span>
<span class="token comment">//         HelloWorld</span>
<span class="token comment">//     &#125;</span>
<span class="token comment">// &#125;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span>
<span class="token operator">&lt;</span>style<span class="token operator">></span>
#app <span class="token punctuation">&#123;</span>
    font<span class="token operator">-</span>family<span class="token operator">:</span> <span class="token string">'Avenir'</span><span class="token punctuation">,</span> Helvetica<span class="token punctuation">,</span> Arial<span class="token punctuation">,</span> sans<span class="token operator">-</span>serif<span class="token punctuation">;</span>
    <span class="token operator">-</span>webkit<span class="token operator">-</span>font<span class="token operator">-</span>smoothing<span class="token operator">:</span> antialiased<span class="token punctuation">;</span>
    <span class="token operator">-</span>moz<span class="token operator">-</span>osx<span class="token operator">-</span>font<span class="token operator">-</span>smoothing<span class="token operator">:</span> grayscale<span class="token punctuation">;</span>
    text<span class="token operator">-</span>align<span class="token operator">:</span> center<span class="token punctuation">;</span>
    color<span class="token operator">:</span> #2c3e50<span class="token punctuation">;</span>
    margin<span class="token operator">-</span>top<span class="token operator">:</span> 60px<span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>style<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h3 id="2-ref函数"><a href="#2-ref函数" class="headerlink" title="2. ref函数"></a>2. <code>ref</code>函数</h3><ul>
<li>定义一个响应式数据</li>
</ul>
<blockquote>
<p>接受一个参数值并返回一个响应式且可改变的 ref 对象。ref 对象拥有一个指向内部值的单一属性 .value。</p>
</blockquote>
<pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> count <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>count<span class="token punctuation">.</span>value<span class="token punctuation">)</span> <span class="token comment">// 0</span>
count<span class="token punctuation">.</span>value<span class="token operator">++</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>count<span class="token punctuation">.</span>value<span class="token punctuation">)</span> <span class="token comment">// 1</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>

<h3 id="3-reactive函数"><a href="#3-reactive函数" class="headerlink" title="3. reactive函数"></a>3. <code>reactive</code>函数</h3><ul>
<li>作用，定义一个<strong>对象类型</strong>的响应式数据（基本类型用 <code>ref</code>）</li>
<li>语法，<code>const 代理对象 = reactive(源对象)</code>接收一个对象，或数组，返回一个代理对象，（proxy对象）</li>
<li><code>reactive</code>定义的响应式数据是”深层次的”</li>
<li>内部基于ES6的porxy实现，通过代理对象操作源对象内部数据进行操作</li>
</ul>
<pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token operator">&lt;</span>script<span class="token operator">></span>
<span class="token keyword">import</span> HelloWorld <span class="token keyword">from</span> <span class="token string">'./components/HelloWorld.vue'</span><span class="token comment">//引入 HellWorld组件</span>
<span class="token keyword">import</span> <span class="token punctuation">&#123;</span> ref<span class="token punctuation">,</span> reactive <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'vue'</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">&#123;</span>
  name<span class="token operator">:</span> <span class="token string">'App'</span><span class="token punctuation">,</span><span class="token comment">//给组件命名，</span>
  <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    <span class="token comment">//数据</span>
    <span class="token keyword">const</span> refvalue <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token number">666</span><span class="token punctuation">)</span><span class="token comment">//基本类型数据实例对象示例</span>
    <span class="token keyword">const</span> person <span class="token operator">=</span> <span class="token function">reactive</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>
      name<span class="token operator">:</span> <span class="token string">'姓名'</span><span class="token punctuation">,</span>
      age<span class="token operator">:</span> <span class="token number">18</span><span class="token punctuation">,</span>
      job<span class="token operator">:</span> <span class="token string">'会计'</span><span class="token punctuation">,</span>
      salary<span class="token operator">:</span> <span class="token string">'10k'</span><span class="token punctuation">,</span>
      hobby<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'study'</span><span class="token punctuation">,</span> <span class="token string">'lol'</span><span class="token punctuation">,</span> <span class="token string">'csgo'</span><span class="token punctuation">]</span>
    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>
    <span class="token comment">// 方法</span>
    <span class="token keyword">function</span> <span class="token function">changeInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
      person<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">'Jack'</span>
      person<span class="token punctuation">.</span>age <span class="token operator">=</span> <span class="token number">23</span>
      person<span class="token punctuation">.</span>job <span class="token operator">=</span> <span class="token string">'睡觉'</span>
      person<span class="token punctuation">.</span>salary <span class="token operator">=</span> <span class="token string">'1元'</span>
      person<span class="token punctuation">.</span>hobby<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'pubg'</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>person<span class="token punctuation">)</span>
      <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=></span><span class="token punctuation">&#123;</span>
        person<span class="token punctuation">.</span>salary <span class="token operator">=</span> refvalue<span class="token punctuation">.</span>value
      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token number">2000</span><span class="token punctuation">)</span>
    <span class="token punctuation">&#125;</span>
    <span class="token keyword">return</span> <span class="token punctuation">&#123;</span>
      person<span class="token punctuation">,</span>
      changeInfo
    <span class="token punctuation">&#125;</span>
  <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h3 id="4-Vue3中的响应式原理"><a href="#4-Vue3中的响应式原理" class="headerlink" title="4. Vue3中的响应式原理"></a>4. <code>Vue3</code>中的响应式原理</h3><h4 id="Vue2-x的响应式"><a href="#Vue2-x的响应式" class="headerlink" title="Vue2.x的响应式"></a><code>Vue2.x</code>的响应式</h4><ul>
<li>实现原理：<ul>
<li>对象类型：通过 <code>Object.defineProperty()</code>对属性读取修改拦截（数据劫持，响应式根基）</li>
<li>数组类型：通过重写更新数组的一系列方法，来实现的拦截。（对数组的变更方法进行了包裹）</li>
</ul>
</li>
</ul>
<pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">Object<span class="token punctuation">.</span><span class="token function">defineProperty</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> <span class="token string">'count'</span><span class="token punctuation">,</span><span class="token punctuation">&#123;</span>
	<span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
	<span class="token function">set</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>

<ul>
<li>存在问题：<ul>
<li>新增属性，删除属性，界面不会更新</li>
</ul>
</li>
</ul>
<pre class="line-numbers language-vue" data-language="vue"><code class="language-vue">&lt;script&gt;
export default &#123;
  name: &#39;App&#39;,&#x2F;&#x2F;给组件命名，
  data() &#123;
    return&#123;
	    person &#123;
	      name: &#39;姓名&#39;,
	      age: 18,
	      job: &#39;会计&#39;,
	      salary: &#39;10k&#39;,
	      hobby: [&#39;study&#39;, &#39;lol&#39;, &#39;csgo&#39;]
	    &#125;
    &#125;
  &#125;,
  methods:&#123;
   addSex()&#123;
  
   &#125;
  &#125;
&lt;&#x2F;script&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<ul>
<li>直接通过数组下标修改数组里的元素，界面不会自动更新</li>
</ul>
<h4 id="Vue3-0的响应式"><a href="#Vue3-0的响应式" class="headerlink" title="Vue3.0的响应式"></a><code>Vue3.0</code>的响应式</h4>]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>Vue</tag>
      </tags>
  </entry>
  <entry>
    <title>一言api</title>
    <url>/2021/10/25/yi-yan-api/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>线上文档地址:<span class="exturl" data-url="aHR0cHM6Ly9kZXZlbG9wZXIuaGl0b2tvdG8uY24vc2VudGVuY2Uv">https://developer.hitokoto.cn/sentence/<i class="fa fa-external-link-alt"></i></span></p>
<h3 id="请求地址"><a href="#请求地址" class="headerlink" title="请求地址"></a>请求地址</h3><table>
<thead>
<tr>
<th align="left">地址</th>
<th align="left">协议</th>
<th align="left">方法</th>
<th align="left">QPS 限制</th>
<th align="left">线路</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><code>v1.hitokoto.cn</code></td>
<td align="left">HTTPS</td>
<td align="left">Any</td>
<td align="left">2</td>
<td align="left">全球</td>
</tr>
<tr>
<td align="left"><code>international.v1.hitokoto.cn</code></td>
<td align="left">HTTPS</td>
<td align="left">Any</td>
<td align="left">10</td>
<td align="left">海外</td>
</tr>
</tbody></table>
<blockquote>
<p>请注意：一言域名已加入 HSTS 预加载计划，所有请求一律以 HTTPS 方法进行。</p>
</blockquote>
<span id="more"></span>

<h3 id="请求参数"><a href="#请求参数" class="headerlink" title="请求参数"></a>请求参数</h3><table>
<thead>
<tr>
<th align="left">参数</th>
<th align="left">值</th>
<th align="left">可选</th>
<th align="left">说明</th>
</tr>
</thead>
<tbody><tr>
<td align="left">c</td>
<td align="left">见后表</td>
<td align="left">是</td>
<td align="left">句子类型</td>
</tr>
<tr>
<td align="left">encode</td>
<td align="left">见后表</td>
<td align="left">是</td>
<td align="left">返回编码</td>
</tr>
<tr>
<td align="left">charset</td>
<td align="left">见后表</td>
<td align="left">是</td>
<td align="left">字符集</td>
</tr>
<tr>
<td align="left">callback</td>
<td align="left">如：<code>moe</code></td>
<td align="left">是</td>
<td align="left">调用的异步函数</td>
</tr>
<tr>
<td align="left">select</td>
<td align="left">默认：<code>.hitokoto</code></td>
<td align="left">是</td>
<td align="left">选择器。配合 <code>encode=js</code> 使用</td>
</tr>
<tr>
<td align="left">min_length</td>
<td align="left">默认：<code>0</code></td>
<td align="left">是</td>
<td align="left">返回句子的最小长度（包含）</td>
</tr>
<tr>
<td align="left">max_length</td>
<td align="left">默认：<code>30</code></td>
<td align="left">是</td>
<td align="left">返回句子的最大长度（包含）</td>
</tr>
</tbody></table>
<h4 id="句子类型（参数）"><a href="#句子类型（参数）" class="headerlink" title="句子类型（参数）"></a>句子类型（参数）</h4><table>
<thead>
<tr>
<th align="left">参数</th>
<th align="left">说明</th>
</tr>
</thead>
<tbody><tr>
<td align="left">a</td>
<td align="left">动画</td>
</tr>
<tr>
<td align="left">b</td>
<td align="left">漫画</td>
</tr>
<tr>
<td align="left">c</td>
<td align="left">游戏</td>
</tr>
<tr>
<td align="left">d</td>
<td align="left">文学</td>
</tr>
<tr>
<td align="left">e</td>
<td align="left">原创</td>
</tr>
<tr>
<td align="left">f</td>
<td align="left">来自网络</td>
</tr>
<tr>
<td align="left">g</td>
<td align="left">其他</td>
</tr>
<tr>
<td align="left">h</td>
<td align="left">影视</td>
</tr>
<tr>
<td align="left">i</td>
<td align="left">诗词</td>
</tr>
<tr>
<td align="left">j</td>
<td align="left">网易云</td>
</tr>
<tr>
<td align="left">k</td>
<td align="left">哲学</td>
</tr>
<tr>
<td align="left">l</td>
<td align="left">抖机灵</td>
</tr>
<tr>
<td align="left">其他</td>
<td align="left">作为 动画 类型处理</td>
</tr>
</tbody></table>
<blockquote>
<p>可选择多个分类，例如： <code>?c=a&amp;c=c</code></p>
</blockquote>
<h4 id="返回编码（参数）"><a href="#返回编码（参数）" class="headerlink" title="返回编码（参数）"></a>返回编码（参数）</h4><table>
<thead>
<tr>
<th align="left">参数</th>
<th align="left">说明</th>
</tr>
</thead>
<tbody><tr>
<td align="left">text</td>
<td align="left">返回纯洁文本</td>
</tr>
<tr>
<td align="left">json</td>
<td align="left">返回格式化后的 JSON 文本</td>
</tr>
<tr>
<td align="left">js</td>
<td align="left">返回指定选择器的同步调用函数。默认选择器为：<code>.hitokoto</code></td>
</tr>
<tr>
<td align="left">其他</td>
<td align="left">返回格式化后的 JSON 文本</td>
</tr>
</tbody></table>
<h4 id="字符集（参数）"><a href="#字符集（参数）" class="headerlink" title="字符集（参数）"></a>字符集（参数）</h4><table>
<thead>
<tr>
<th align="left">参数</th>
<th align="left">说明</th>
</tr>
</thead>
<tbody><tr>
<td align="left">utf-8</td>
<td align="left">返回 utf-8 编码的内容</td>
</tr>
<tr>
<td align="left">gbk</td>
<td align="left">返回 gbk 编码的内容。不支持与异步函数同用</td>
</tr>
<tr>
<td align="left">其他</td>
<td align="left">返回 utf-8 编码的内容</td>
</tr>
</tbody></table>
<h2 id="返回信息"><a href="#返回信息" class="headerlink" title="返回信息"></a>返回信息</h2><table>
<thead>
<tr>
<th align="left">返回参数名称</th>
<th align="left">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="left">id</td>
<td align="left">一言标识</td>
</tr>
<tr>
<td align="left">hitokoto</td>
<td align="left">一言正文。编码方式 unicode。使用 utf-8。</td>
</tr>
<tr>
<td align="left">type</td>
<td align="left">类型。请参考第三节参数的表格</td>
</tr>
<tr>
<td align="left">from</td>
<td align="left">一言的出处</td>
</tr>
<tr>
<td align="left">from_who</td>
<td align="left">一言的作者</td>
</tr>
<tr>
<td align="left">creator</td>
<td align="left">添加者</td>
</tr>
<tr>
<td align="left">creator_uid</td>
<td align="left">添加者用户标识</td>
</tr>
<tr>
<td align="left">reviewer</td>
<td align="left">审核员标识</td>
</tr>
<tr>
<td align="left">uuid</td>
<td align="left">一言唯一标识；可以链接到 [<span class="exturl" data-url="aHR0cHM6Ly9oaXRva290by5jbi8/dXVpZD0lNUJ1dWlkJTVDJTVEJTVEKGh0dHBzOi8vaGl0b2tvdG8uY24vP3V1aWQ9JTVCdXVpZCU1RCk=">https://hitokoto.cn?uuid=[uuid\]](https://hitokoto.cn/?uuid=[uuid])<i class="fa fa-external-link-alt"></i></span> 查看这个一言的完整信息</td>
</tr>
<tr>
<td align="left">commit_from</td>
<td align="left">提交方式</td>
</tr>
<tr>
<td align="left">created_at</td>
<td align="left">添加时间</td>
</tr>
<tr>
<td align="left">length</td>
<td align="left">句子长度</td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>文档笔记</category>
      </categories>
      <tags>
        <tag>一言api</tag>
        <tag>文档</tag>
      </tags>
  </entry>
  <entry>
    <title>内网穿透配置指南</title>
    <url>/2020/09/30/nei-wang-chuan-tou/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h2 id="服务端-frps"><a href="#服务端-frps" class="headerlink" title="服务端 frps"></a>服务端 <code>frps</code></h2><p>搭建在具有公网ip的终端</p>
<h2 id="客户端-frpc"><a href="#客户端-frpc" class="headerlink" title="客户端 frpc"></a>客户端 <code>frpc</code></h2><span id="more"></span>

<p>配置 <code>frpc.ini</code></p>
<pre class="line-numbers language-none"><code class="language-none">server_addr &#x3D; 127.0.0.1
server_port &#x3D; 7000
#服务端与客户端设置一致即可
token &#x3D; 1234567

[ssh]
#穿透类型
#远程桌面 tcp
type &#x3D; tcp
local_ip &#x3D; 127.0.0.1
#用于远程访问的端口
local_port &#x3D; 22
#访问服务端的6000端口可以跳转至本地22端口
remote_port &#x3D; 6000
#解析至公网ip的域名
custom_domains &#x3D; sss.top<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>内网穿透</tag>
        <tag>frp</tag>
      </tags>
  </entry>
  <entry>
    <title>在Docker中部署禅道示例</title>
    <url>/2019/03/03/zai-docker-zhong-bu-shu-shan-dao/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">docker</span> run <span class="token parameter variable">--name</span> zentao <span class="token parameter variable">-p</span> <span class="token number">80</span>:80 <span class="token parameter variable">-v</span> /data/www/zentao:/www/zentaopms <span class="token parameter variable">-v</span> /data/www/zentao_sql:/var/lib/mysql <span class="token parameter variable">-e</span> <span class="token assign-left variable">MYSQL_ROOT_PASSWORD</span><span class="token operator">=</span><span class="token number">123456</span> <span class="token parameter variable">-d</span> easysoft/zentao:Testing<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<h3 id="在Docker中部署禅道示例"><a href="#在Docker中部署禅道示例" class="headerlink" title="在Docker中部署禅道示例"></a>在Docker中部署禅道示例</h3><p>1、确保安装docker</p>
<p>检查方式：</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">docker</span> <span class="token parameter variable">-v</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<span id="more"></span>

<p>2、启动docker</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">systemctl start <span class="token function">docker</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>3、可设置docker开机启动</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">systemctl    <span class="token builtin class-name">enable</span> docker.service<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>4、获取最新版禅道开源版镜像</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">docker</span> pull idoop/zentao<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>5、运行镜像生成禅道容器【创建 &#x2F;data&#x2F;www  &#x2F;data&#x2F;data 目录】</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">docker</span> run <span class="token parameter variable">--name</span> zentao <span class="token parameter variable">-p</span> <span class="token number">80</span>:80 <span class="token parameter variable">-v</span> /data/www:/app/zentaopms <span class="token parameter variable">-v</span> /data/data:/var/lib/mysql <span class="token parameter variable">-e</span> <span class="token assign-left variable">MYSQL_ROOT_PASSWORD</span><span class="token operator">=</span><span class="token number">123456</span> <span class="token parameter variable">-d</span> idoop/zentao<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>6、输入自己liunx服务器地址就可以访问了（用户名：admin 初始密码：123456）</p>
<p>PS：这里注意防火墙是否开启，如果没开就不用开了，如果开启了可选择关闭或者开启对应的端口号，配置防火墙后记得重启才能生效</p>
<h2 id="官网中文指南"><a href="#官网中文指南" class="headerlink" title="官网中文指南"></a>官网中文指南</h2><hr>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">docker</span> run <span class="token parameter variable">--name</span> <span class="token punctuation">[</span>容器名<span class="token punctuation">]</span> <span class="token parameter variable">-p</span> <span class="token punctuation">[</span>主机端口<span class="token punctuation">]</span>:80 <span class="token parameter variable">-v</span> <span class="token punctuation">[</span>主机禅道目录<span class="token punctuation">]</span>:/www/zentaopms <span class="token punctuation">\</span>
       <span class="token parameter variable">-v</span> <span class="token punctuation">[</span>主机mysql目录<span class="token punctuation">]</span>:/var/lib/mysql <span class="token punctuation">\</span>
       <span class="token parameter variable">-e</span> <span class="token assign-left variable">MYSQL_ROOT_PASSWORD</span><span class="token operator">=</span><span class="token punctuation">[</span>数据库密码<span class="token punctuation">]</span> <span class="token parameter variable">-d</span> easysoft/zentao:<span class="token punctuation">[</span>镜像标签<span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>

<p>其中，容器名：启动的容器名字，可随意指定；</p>
<p>主机端口：主机端口为web访问端口；</p>
<p>主机禅道目录：必须指定，方便禅道代码、附件等数据的持久化，非升级情况需指定空目录；</p>
<p>主机mysql目录：必须指定，方便禅道数据持久化，非升级情况需指定空目录；</p>
<p>数据库密码： 容器内置mysql用户名为root,默认密码123456，如果不修改可以不指定该变量，如果想更改密码可以设置 MYSQL_ROOT_PASSWORD变量来更改密码；</p>
<hr>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Docker</tag>
        <tag>禅道</tag>
        <tag>部署</tag>
        <tag>项目管理工具</tag>
      </tags>
  </entry>
  <entry>
    <title>宝塔登录面板重置密码</title>
    <url>/2022/05/12/bao-ta-deng-lu-mian-ban-chong-zhi-mi-ma/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h3 id="宝塔登录面板重置密码"><a href="#宝塔登录面板重置密码" class="headerlink" title="宝塔登录面板重置密码"></a>宝塔登录面板重置密码</h3><p>进入ssh输入以下命令重置密码（把命令最后面的 <code>testpasswd</code>替换成你要改的新密码）</p>
<p>注：若是 <code>debian</code>&#x2F;<code>ubuntu</code>用户，</p>
<p>请使用有 <code>root</code>权限的账户去执行这条命令</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> /www/server/panel <span class="token operator">&amp;&amp;</span> python tools.py panel testpasswd<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>如果提示多次登录失败，暂时禁止登录 请输入以下命令 清除登录限制</p>
<span id="more"></span>

<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">rm</span> <span class="token parameter variable">-f</span> /www/server/panel/data/*.login<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>新装面板用户获取默认账号密码命令：bt default</p>
<p>6.x及以后版本可输入 <code>bt</code>命令获取工具菜单来重置账户密码</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">bt <span class="token comment">#即可呼出菜单</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
]]></content>
      <categories>
        <category>宝塔面板</category>
      </categories>
      <tags>
        <tag>密码重置</tag>
        <tag>宝塔</tag>
      </tags>
  </entry>
  <entry>
    <title>小猪盖被</title>
    <url>/2019/03/03/xiao-zhu-gai-bei/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h2 id="小猪盖被"><a href="#小猪盖被" class="headerlink" title="小猪盖被"></a>小猪盖被</h2><ul>
<li>面粉 <code>150g</code></li>
<li>一小勺，酵母，白糖</li>
<li><code>80g</code>水柔成光滑面团</li>
<li>保鲜膜醒发至两倍</li>
<li>准备了料汁儿：<code>生抽1勺</code>，<code>老抽1勺</code>, <code>料酒3勺</code>, <code>耗油1勺</code>, <code>白糖1勺</code></li>
<li><code>排骨</code>焯水</li>
<li>起锅 <code>冰糖</code>炒枣红色，将焯水后的 <code>排骨</code>放入，翻炒均匀</li>
<li>下，<code>葱</code>,<code>姜</code>,<code>蒜</code>，<code>红辣椒</code>-干，<code>桂皮</code>，<code>八角</code>，<code>香叶</code>，淋入 <code>料汁</code>,翻炒均匀后，加 <code>开水</code>，<code>小火</code>炖 <code>30min</code></li>
</ul>
<span id="more"></span>

<ul>
<li>期间加入土豆，豆角</li>
<li>揉好的面团，擀成面皮，刷油，撒盐，干面粉</li>
</ul>
]]></content>
      <categories>
        <category>饭</category>
      </categories>
      <tags>
        <tag>食谱</tag>
      </tags>
  </entry>
  <entry>
    <title>性能测试</title>
    <url>/2020/12/31/xing-neng-ce-shi/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><ul>
<li>收集需求</li>
<li>开发测试脚本</li>
<li>执行测试</li>
<li>分析及报告</li>
<li>性能优化</li>
<li>执行测试</li>
<li>分析及报告</li>
<li>重复以上步骤…</li>
</ul>
<h3 id="收集需求"><a href="#收集需求" class="headerlink" title="收集需求"></a>收集需求</h3><p>性能测试和功能测试工作流程上没什么不同，必须要收集需求，比如功能测试登录输入框最多输入10个字符，那么放在性能测试中，就是一个请求，或者一个事务响应时间是多少，或者CPU占用率保持多少以下。就是说我们必须要拿到项目经理或者产品经理强调的数值，强调的场景，有了场景后，才可以开发我们的脚本，可能有的人会问，如果没有需求，怎么测试，笔者建议以下2点：第一就是判断哪些场景是用户常使用的，第二就是看日志，一般系统都会收集用户行为，也就是我们常说的埋点，可以通过埋点看哪个时间段数值较多。</p>
<span id="more"></span>

<h3 id="开发测试脚本"><a href="#开发测试脚本" class="headerlink" title="开发测试脚本"></a>开发测试脚本</h3><p>我们讲了那么多Jmeter，绝大部分是介绍了Jmeter组件的使用，并没有实战的案例。这里举个例子，比如我们登录事务，产品经理要求100并发，响应时间是3s。那么我们怎么设计脚本呢？其实很简单，不需要设计，直接录制就好了，然后把录制下来的请求，不需要的删除，线程组改成100，然后添加监听器，比如说我们可以添加聚合报告，或者使用Jmeter NON GUI模式，去查看响应时间。</p>
<h3 id="执行测试"><a href="#执行测试" class="headerlink" title="执行测试"></a>执行测试</h3><p>脚本我们已经开发好了，那么我们是不是直接测试就行了呢？当然不是，我们必须要确定性能环境是隔离的，不能说我这边还在测试，那边还有人操作，那么测试出来的数据也是不准的，所以一定要保证环境隔离。</p>
<h3 id="分析及报告"><a href="#分析及报告" class="headerlink" title="分析及报告"></a>分析及报告</h3><p>怎么分析呢？当然是根据响应时间进行判断，比如登录并发100要求是3s，那么实际上是5s，这个就不符合要求了，我们就需要到服务器去看哪些地方出现了瓶颈，这里就可以用到Nmon，<br>当然Nmon只是众多性能监控工具中一个，还有很多其他工具，这里就不展开介绍。</p>
<h3 id="性能优化"><a href="#性能优化" class="headerlink" title="性能优化"></a>性能优化</h3><p>如果性能出现了瓶颈，那么我们肯定要优化，优化完了就完了吗？当然不是，我们根据优化后的系统再保持性能测试脚本不变，继续测试，查看优化是否符合预期。</p>
<p>好了以上就是性能测试总体流程，其实还有很多东西没说，我这里特别想讲讲性能监控.</p>
<p>就是我们的CPU、内存、磁盘、网络。</p>
]]></content>
      <categories>
        <category>软件测试</category>
      </categories>
      <tags>
        <tag>性能测试</tag>
        <tag>测试性能流程</tag>
      </tags>
  </entry>
  <entry>
    <title>打包浏览器扩展</title>
    <url>/2021/10/25/da-bao-liu-lan-qi-kuo-zhan/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>如何打包自己浏览器已安装扩展<br>微软的EDGE为例<br>打开如下目录,是已安装扩展的id:<br><code>C:\Users\用户名\AppData\Local\Microsoft\Edge\User Data\Default\Extensions</code><br><img src="https://i.loli.net/2021/10/26/C5KHXbfiq37kzva.png" alt="1"><br>对应可以打开浏览器扩展管理页面对应id:<br><img src="https://i.loli.net/2021/10/26/26YpEHskGLClriy.png" alt="2"></p>
<h4 id="例如我们现在打包一个ADGuard插件为例"><a href="#例如我们现在打包一个ADGuard插件为例" class="headerlink" title="例如我们现在打包一个ADGuard插件为例"></a>例如我们现在打包一个ADGuard插件为例</h4><ol>
<li>记住他的id大概是:<code>pdffkfellgipmhklpdmokmckkkfcopbh</code></li>
<li><code>ctrl+c</code>复制一个路径:<br><img src="https://i.loli.net/2021/10/26/gmR85O7Tsqcohrn.png" alt="3"></li>
<li>点击扩展管理页面打包插件:<br><img src="https://i.loli.net/2021/10/26/bnYZMO9rJTtmKcq.png" alt="4"></li>
</ol>
<span id="more"></span>

<ol start="4">
<li>点击浏览:<br><img src="https://i.loli.net/2021/10/26/ef8lHdTZvwzL2Qq.png" alt="5"></li>
</ol>
<p><img src="https://gitee.com/fansirsqi/pic-go-images/raw/master//images/202110261010445.png" alt="6"></p>
<p>这里我们找到 <code>pdffkfellgipmhklpdmokmckkkfcopbh</code>这个文件夹名称</p>
<p><img src="https://gitee.com/fansirsqi/pic-go-images/raw/master//images/202110261014849.png" alt="7"></p>
<p>双击点进去<br>然后点选择文件夹:<br><img src="https://gitee.com/fansirsqi/pic-go-images/raw/master//images/202110261044773.png" alt="8"><br>点击打包:<br><img src="https://gitee.com/fansirsqi/pic-go-images/raw/master//images/202110261046864.png" alt="9"></p>
<p>打包之后窗口会正常关闭,再打开刚刚的文件夹<br><img src="https://gitee.com/fansirsqi/pic-go-images/raw/master//images/202110261048212.png" alt="10"></p>
<p>可以看到一个密钥和一个扩展文件,文件名是版本号<br><img src="https://gitee.com/fansirsqi/pic-go-images/raw/master//images/202110261049632.png" alt="11"></p>
<p>为了方便辨识,重命名一下<br><img src="https://gitee.com/fansirsqi/pic-go-images/raw/master//images/202110261050705.png" alt="12"></p>
<p>把这两个东西保存起来发给你要分享的人就行.</p>
<p>这里是我整理的一些扩展,分享给大家食用✨<br><img src="https://gitee.com/fansirsqi/pic-go-images/raw/master//images/202110261055191.png" alt="13"></p>
<hr>
<p><span class="exturl" data-url="aHR0cHM6Ly9mYW5zaXJzLmxhbnpvdXcuY29tL2lucUNZdnNzb2xj">蓝凑云<i class="fa fa-external-link-alt"></i></span><br>访问密码:3zm5</p>
<hr>
<p><span class="exturl" data-url="aHR0cHM6Ly93d3cuMTIzcGFuLmNvbS9zLzROdEEtNWJmczM=">123云盘<i class="fa fa-external-link-alt"></i></span><br>提取码:9999</p>
<hr>
<p><a href="_#">阿里云(暂未开放)</a></p>
<hr>
]]></content>
      <categories>
        <category>浏览器扩展</category>
      </categories>
      <tags>
        <tag>浏览器扩展打包</tag>
        <tag>教程</tag>
      </tags>
  </entry>
  <entry>
    <title>如何抓安卓手机的包</title>
    <url>/2021/10/25/zhua-bao-xiao-cheng-xu/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>先拿到抓包软件的证书，譬如开了fiddler，</p>
<p>依次打开菜单 <code>工具</code>-&gt;<code>选项</code>-&gt;<code>Https</code>打勾装上证书</p>
<p><code>链接</code>里的监听端口，还有 <code>允许远程计算机连接</code>要打勾</p>
<p><code>127.0.0.1:8888</code> 把证书下下来</p>
<p>格式为 <code>.der</code> <code>.crt</code> <code>.cer</code> 等</p>
<p>通通转换为 <code>.pem</code></p>
<h2 id="转换方法"><a href="#转换方法" class="headerlink" title="转换方法"></a>转换方法</h2><span id="more"></span>

<p>这里需要用到 <code>openssl</code>工具，需要手动安装下，自己百度安装<strong>注意文件名</strong></p>
<p><code>openssl x509 -inform der -in cert.der -out cert.pem</code></p>
<p><code>openssl x509 -inform der -in cert.crt -out cert.pem</code></p>
<h2 id="查看hash标识-pem证书所在目录下运行当前命令-文件名称需要改为自己对应的文件名称"><a href="#查看hash标识-pem证书所在目录下运行当前命令-文件名称需要改为自己对应的文件名称" class="headerlink" title="查看hash标识:pem证书所在目录下运行当前命令,文件名称需要改为自己对应的文件名称"></a>查看hash标识:<code>pem</code>证书所在目录下运行当前命令,文件名称需要改为自己对应的文件名称</h2><p><code>openssl x509 -subject_hash_old -in cert.pem</code></p>
<p>会输出 <code>$hash</code>和证书内容</p>
<h2 id="将源-pem文件改成-hash-0即可"><a href="#将源-pem文件改成-hash-0即可" class="headerlink" title="将源 pem文件改成 $hash.0即可"></a>将源 <code>pem</code>文件改成 <code>$hash.0</code>即可</h2><h4 id="！！安卓连的-wifi需要手动配置电脑所在-ip的代理-注意！"><a href="#！！安卓连的-wifi需要手动配置电脑所在-ip的代理-注意！" class="headerlink" title="！！安卓连的 wifi需要手动配置电脑所在 ip的代理[注意！]"></a>！！安卓连的 <code>wifi</code>需要手动配置电脑所在 <code>ip</code>的代理[注意！]</h4><p>最后导入安卓设备即可</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">// 提升到root权限
adb root

// 重新挂载system分区
adb remount

//将证书放到系统证书目录 注意文件名是自己的文件名
adb push 9a5ba575.0 /system/etc/security/cacerts/    <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
]]></content>
      <categories>
        <category>抓包</category>
      </categories>
      <tags>
        <tag>小程序</tag>
        <tag>抓包</tag>
        <tag>安卓</tag>
      </tags>
  </entry>
  <entry>
    <title>博客搭建</title>
    <url>/2021/10/25/wu-fu-wu-qi-da-jian-ge-ren-blog-hexo/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h2 id="1，安装nvm工具"><a href="#1，安装nvm工具" class="headerlink" title="1，安装nvm工具"></a>1，安装nvm工具</h2><p><code>nvm</code>命令使用，为了确保命令能正确执行<br><code>&lt;font color=&#39;Red&#39;&gt;</code>请所有命令在管理员权限下执行<code>&lt;/font&gt;</code></p>
<ol>
<li><code>nvm list</code>可以缩写为 <code>nvm ls</code><br>列出当前 <code>nvm</code>工具管理的，·<code>node</code>版本以及在当前使用版本前给出 <code>*</code>标记</li>
</ol>
<pre class="line-numbers language-node" data-language="node"><code class="language-node">PS C:\Users\admin&gt; nvm ls
    16.16.0
  * 14.15.4 (Currently using 64-bit executable)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>

<span id="more"></span>

<ol start="2">
<li><code>nvm list available</code> 其中 <code>list</code>可以缩写成 <code>ls</code><br>列出node.js的安装。在结尾处输入 “available “以查看可以安装的内容。别名为ls。</li>
</ol>
<pre class="line-numbers language-node" data-language="node"><code class="language-node">PS C:\Users\admin&gt; nvm ls available
|   CURRENT    |     LTS      |  OLD STABLE  | OLD UNSTABLE |
|--------------|--------------|--------------|--------------|
|    19.2.0    |   18.12.1    |   0.12.18    |   0.11.16    |
|    19.1.0    |   18.12.0    |   0.12.17    |   0.11.15    |
|    19.0.1    |   16.18.1    |   0.12.16    |   0.11.14    |
|    19.0.0    |   16.18.0    |   0.12.15    |   0.11.13    |
|   18.11.0    |   16.17.1    |   0.12.14    |   0.11.12    |
|   18.10.0    |   16.17.0    |   0.12.13    |   0.11.11    |
|    18.9.1    |   16.16.0    |   0.12.12    |   0.11.10    |
|    18.9.0    |   16.15.1    |   0.12.11    |    0.11.9    |
|    18.8.0    |   16.15.0    |   0.12.10    |    0.11.8    |
|    18.7.0    |   16.14.2    |    0.12.9    |    0.11.7    |
|    18.6.0    |   16.14.1    |    0.12.8    |    0.11.6    |
|    18.5.0    |   16.14.0    |    0.12.7    |    0.11.5    |
|    18.4.0    |   16.13.2    |    0.12.6    |    0.11.4    |
|    18.3.0    |   16.13.1    |    0.12.5    |    0.11.3    |
|    18.2.0    |   16.13.0    |    0.12.4    |    0.11.2    |
|    18.1.0    |   14.21.1    |    0.12.3    |    0.11.1    |
|    18.0.0    |   14.21.0    |    0.12.2    |    0.11.0    |
|    17.9.1    |   14.20.1    |    0.12.1    |    0.9.12    |
|    17.9.0    |   14.20.0    |    0.12.0    |    0.9.11    |
|    17.8.0    |   14.19.3    |   0.10.48    |    0.9.10    |

This is a partial list. For a complete list, visit https:&#x2F;&#x2F;nodejs.org&#x2F;en&#x2F;download&#x2F;releases<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<ol start="3">
<li><code>nvm node_mirror [url]</code>  设置node节点镜像。默认为<span class="exturl" data-url="aHR0cHM6Ly9ub2RlanMub3JnL2Rpc3QvJUUzJTgwJTgyJUU1JUIwJTg2W3VybF0lRTclOTUlOTklRTclQTklQkElRUYlQkMlOEMlRTQlQkIlQTUlRTQlQkQlQkYlRTclOTQlQTglRTklQkIlOTglRTglQUUlQTR1cmwlRTMlODAlODI=">https://nodejs.org/dist/。将[url]留空，以使用默认url。<i class="fa fa-external-link-alt"></i></span><br>设置淘宝镜像 <code>node_mirror:https://npm.taobao.org/mirrors/node</code></li>
<li><code>nvm nmp_mirror [url]</code> 设置npm的镜像。默认为<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL25wbS9jbGkvYXJjaGl2ZS8lRTMlODAlODIlRTUlQjAlODZbdXJsXSVFNyU5NSU5OSVFNyVBOSVCQSVFNCVCOCVCQSVFOSVCQiU5OCVFOCVBRSVBNHVybA==">https://github.com/npm/cli/archive/。将[url]留空为默认url<i class="fa fa-external-link-alt"></i></span><br>设置淘宝镜像：<code>npm_mirror: https://npm.taobao.org/mirrors/npm/</code><br>理论上设置完以上两步，安装速度会快上很多，即使你没有给你的网络‘施展魔法’</li>
<li><code>nvm install &lt;version&gt; [arch]</code><br>版本可以是一个特定的版本，”latest “表示最新的当前版本，”lts “表示最新的LTS版本。最新的LTS版本。可选择指定是安装32位还是64位版本（默认为 默认为 system arch）。将[arch]设置为 “all”，以安装32和64位版本。在该命令的末尾添加 <code>--insecure</code>，以绕过远程下载服务器的SSL验证。</li>
</ol>
<h2 id="2，使用nvm工具，安装node环境"><a href="#2，使用nvm工具，安装node环境" class="headerlink" title="2，使用nvm工具，安装node环境"></a>2，使用nvm工具，安装node环境</h2>]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>部署</tag>
        <tag>博客</tag>
        <tag>个人网站</tag>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>服务器实现魔法上网</title>
    <url>/2020/09/30/fu-wu-qi-xue-xi-mo-fa/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h2 id="安装Clash-Core（实现科学上网）"><a href="#安装Clash-Core（实现科学上网）" class="headerlink" title="安装Clash-Core（实现科学上网）"></a>安装Clash-Core（实现科学上网）</h2><p><code>https://github.com/Dreamacro/clash</code></p>
<p>先去下一个 <code>clash</code></p>
<p><code>gunzip 下载的</code></p>
<p>重命名</p>
<p>mv clashxxx-xxx-vxxx clash</p>
<p>在opt目录下新建clash文件夹，将刚刚解压的放进去</p>
<span id="more"></span>

<p><code>mkdir /opt/clash</code></p>
<p><code>mv clash /opt/clash/</code></p>
<p>运行指定配置文件</p>
<p><code>cd /opt/clash</code></p>
<p><code>./clash -f config.yml</code></p>
<p>如果没有指定文件，会在 <code>~/.config/clash/</code>目录下生成默认配置</p>
<p>编辑成系统服务?</p>
<p><code>vim /etc/systemd/system/clash.service</code></p>
<pre class="line-numbers language-conf" data-language="conf"><code class="language-conf">[Unit]
Description&#x3D;Clash-core
[Service]
Type&#x3D;simple
ExecStart&#x3D;&#x2F;opt&#x2F;clash&#x2F;clash -f &#x2F;opt&#x2F;clash&#x2F;config.yml<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>执行</p>
<p><code>systemctl daemon-reload</code></p>
<p><code>systemctl start clash</code></p>
<p><code>systemctl ststus clash</code></p>
<h4 id="Calsh-Dashbord"><a href="#Calsh-Dashbord" class="headerlink" title="Calsh Dashbord"></a>Calsh Dashbord</h4><p>再新建一个文件夹 <code>ui</code></p>
<p>下载这个仓库的文件 <code>https://github.com/Dreamacro/clash-dashboard/tree/gh-pages</code></p>
<p>把 <code>clash-dashboard-gh-pages.zip</code></p>
<p>解压 <code>unzip clash-dashboard-gh-pages.zip</code></p>
<p>删掉 <code>zip</code>文件</p>
<p><code>rm -rf clash-dashboard-gh-pages.zip</code></p>
<p>把文件移动出来</p>
<p><code>mv clash-dashboard-gh-pages/* .</code></p>
<p>回到 <code>clash</code>菜单编辑 <code>config.yml</code>文件</p>
<p>改以下两行</p>
<pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">external-controller</span><span class="token punctuation">:</span> 0.0.0.0<span class="token punctuation">:</span><span class="token number">9090</span>
<span class="token key atrule">external-ui</span><span class="token punctuation">:</span> /opt/clash/ui<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
]]></content>
      <categories>
        <category>Linux</category>
        <category>魔法</category>
      </categories>
      <tags>
        <tag>clash</tag>
        <tag>v.p.n</tag>
      </tags>
  </entry>
  <entry>
    <title>服务器自建蚂蚁笔记</title>
    <url>/2020/09/30/fu-wu-qi-da-jian-leanote/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>安装MongoDB数据库Nigx</p>
<p>将软件上传至www目录</p>
<p>tar -zxvf 解压</p>
<p>cd 到mongo_backxxx目录</p>
<p>恢复本地数据库</p>
<p><code>mongorestore -h localhost -d leanote --dir leanote_install_data/</code></p>
<span id="more"></span>

<p><code>cd ..</code></p>
<p><code>cd bin</code></p>
<p>启动</p>
<p><code>nohup bash run.sh &amp;</code></p>
<p>主机放行9000端口</p>
<p>，浏览器访问ip:9000</p>
<p>初始登录用户名密码</p>
<p>admin,abc123</p>
<p>就这样~</p>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>教程</tag>
        <tag>leanote</tag>
        <tag>蚂蚁笔记搭建</tag>
      </tags>
  </entry>
  <entry>
    <title>百度翻译API注册</title>
    <url>/2021/10/22/bai-du-fan-yi-api-zhu-ce/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p><img src="https://cdn.jsdelivr.net/gh/Fansirsqi/blog-Images/images/202302141034045.png"></p>
<span id="more"></span>

<p><img src="https://cdn.jsdelivr.net/gh/Fansirsqi/blog-Images/images/202302141036304.png"></p>
<p><img src="https://cdn.jsdelivr.net/gh/Fansirsqi/blog-Images/images/202302141036325.png"></p>
<p><img src="https://cdn.jsdelivr.net/gh/Fansirsqi/blog-Images/images/202302141037870.png"></p>
<p><img src="https://cdn.jsdelivr.net/gh/Fansirsqi/blog-Images/images/202302141039231.png"></p>
<p><img src="https://cdn.jsdelivr.net/gh/Fansirsqi/blog-Images/images/202302141039864.png"></p>
<p><img src="https://cdn.jsdelivr.net/gh/Fansirsqi/blog-Images/images/202302141044600.png"></p>
]]></content>
      <categories>
        <category>开发者注册</category>
      </categories>
      <tags>
        <tag>百度翻译</tag>
      </tags>
  </entry>
  <entry>
    <title>短视频到底把爱情观扭曲什么样了</title>
    <url>/2023/06/30/duan-shi-pin-dao-di-ba-ai-qing-guan-niu-qu-shi-me-yang-liao/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><blockquote>
<p><span class="exturl" data-url="aHR0cHM6Ly9zcGFjZS5iaWxpYmlsaS5jb20vNDAxODk4NTc1">author<i class="fa fa-external-link-alt"></i></span></p>
<p><span class="exturl" data-url="aHR0cHM6Ly93d3cuYmlsaWJpbGkuY29tL3ZpZGVvL0JWMTdwNHkxRzcySC8=">此处到达<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
<hr>
<blockquote>
<p>一位匿名网友是这样说的,孕期刷抖音,看到抖音上的老公对老婆无微不至的照顾,<br>立马给我老公看,我老公拍着我的头说:”你是不是傻,别人要靠这个东西吸引眼球,博取关注,<br>如果拍一些日常发生的事情,怎么火吧.”<br>一语惊醒梦中人,没想到我也差点被一些扭曲的观念影响,甚至觉得结婚以后老公既赚钱,<br>又要把家里打点的妥妥帖帖是理所应当的.</p>
</blockquote>
<hr>
<span id="more"></span>

<blockquote>
<p>无论是恋爱还是结婚,都应该是两个独立的个体,在结合后更好地生活在一起,<br>产生 1+1 大于二的效应,抖音上有很多人发一些被自己另一半,宠成女儿的视频.<br>说真的,这种捧杀着实让人恐惧,如果女孩子有正确的三观,有远见,有思想,<br>这种宠爱可以算是两人相处中的小情趣,如果女孩子没有正确的三观,<br>又长期在另一半的甜言蜜语,过分宠溺下生活,久而久之会失去独立生活的能力,<br>一旦对方选择离开,后果不堪设想,试想如果被另一半宠的,既没工作,<br>又没有自理能力,等到哪一天,对方厌倦了,不再哄着你玩了,一气之下分开,<br>突然发现自己什么都不会了,那才是真的为时已晚啊.</p>
</blockquote>
<hr>
<blockquote>
<p>而真正良性的关系是鼓励另一半,创造属于自己的价值,变得更有思想,更有远见,<br>即使目前生活美好,仍然不会安于现状,共同学习,为生活增添更多的筹码,<br>以便一同应对未来生活中的种种考验,这种感情才更现实,不容易被小问题给冲散.<br>那些希望被宠上天的对象,说白了也是一种自私的表现,谁不是爹生妈养的,<br>凭什么要让别人伺候你,而不是你心甘情愿的去伺候另一半呢?<br>不知不觉让我想到大 s,她以前说过,女人吃虾必须要男人剥,他小时候都是爸爸帮他包好,<br>在他爸爸去世之后就再也不吃虾了,这种巨婴行为真的给我看笑了,我们生活在一个男女平等的时代,<br>但往往有些人会既要平等,又想享受特权,如果只是偶尔行使特权,可以称之为情调,时间久了,<br>哪次另一半心情不好,不愿意顺从了,你是不是会条件反射的觉得对方不爱你了呢,<br>这样对良性的两性关系不利.</p>
</blockquote>
<hr>
<blockquote>
<p>以前我也比较自私,在谈恋爱的时候,每次吵架都希望老公让着我,而且我绝对不会低头,<br>一定要让老公来哄我,我总觉得谁先低头就输了,现在想想自己当初真的离谱,两个生长环境不同的人,<br>三观不可能完全一致,在某些时候发生争执是很正常的,恋爱时的我太冲了<br>一点小事吵架就上纲上线,认为对方是不爱了,还好那个时候老公哄完我<br>在我情绪稳定之后,会冷静的和我探讨吵架的内容,我们不是为了分清谁对谁错,<br>而是为了更好地解决问题,并且不让类似的事情发生,老公也会在合理的时候指出我的问题,<br>告诉我不要太过理心,要让自己的内心变得强大起来,才不会在每次吵架的时候都认为他不爱她,<br>渐渐的我也学会了换位思考,不会每次都把自己的感受放在首位,我也明白了感情里最重要的不是索取,<br>而是懂得付出.</p>
</blockquote>
<hr>
<blockquote>
<p>结婚之后,我们的争吵也越来越少了,相互理解才是婚姻幸福的样子,<br>刷视频不要太认真,当笑话看看就行,别人拿抖音当做赚钱的工具,<br>我们就别傻乎乎的,把里面的道理当成过日子的真谛了.</p>
</blockquote>
<hr>
]]></content>
      <categories>
        <category>鸡汤</category>
      </categories>
      <tags>
        <tag>生活</tag>
        <tag>爱情观</tag>
      </tags>
  </entry>
  <entry>
    <title>自定义设置Pycharm文件头</title>
    <url>/2022/07/25/zi-ding-yi-she-zhi-pycharm-wen-jian-tou/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h4 id="1-打开设置"><a href="#1-打开设置" class="headerlink" title="1. 打开设置"></a>1. 打开设置</h4><p><img src="https://cdn.jsdelivr.net/gh/Fansirsqi/blog-Images@main/images/202207251104285.png" alt="1step"></p>
<h4 id="2-编辑器-文件和代码模板"><a href="#2-编辑器-文件和代码模板" class="headerlink" title="2. 编辑器-&gt;文件和代码模板"></a>2. 编辑器-&gt;文件和代码模板</h4><p><img src="https://cdn.jsdelivr.net/gh/Fansirsqi/blog-Images@main/images/202207251110811.png" alt="2styp"></p>
<h4 id="3-记得注释掉"><a href="#3-记得注释掉" class="headerlink" title="3. 记得注释掉"></a>3. 记得注释掉</h4><p>放上我的</p>
<span id="more"></span>

<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#!/usr/bin/python3.9</span>
<span class="token comment"># _*_conding:utf-8_*_</span>
<span class="token comment"># @PROJECT : $&#123;PROJECT_NAME&#125;</span>
<span class="token comment"># @Time : $&#123;DATE&#125; $&#123;TIME&#125;</span>
<span class="token comment"># @Author : Byseven</span>
<span class="token comment"># @File : $&#123;NAME&#125;.py</span>
<span class="token comment"># @SoftWare: $&#123;PRODUCTE_NAME&#125;</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h4 id="4-可用的变量"><a href="#4-可用的变量" class="headerlink" title="4. 可用的变量"></a>4. 可用的变量</h4><pre class="line-numbers language-python" data-language="python"><code class="language-python">$<span class="token punctuation">&#123;</span>PROJECT_NAME<span class="token punctuation">&#125;</span> <span class="token operator">-</span> 当前项目的名称。
$<span class="token punctuation">&#123;</span>NAME<span class="token punctuation">&#125;</span> <span class="token operator">-</span> 在文件创建过程中在“新建文件”对话框中指定的新文件的名称。
$<span class="token punctuation">&#123;</span>USER<span class="token punctuation">&#125;</span> <span class="token operator">-</span> 当前用户的登录名。
$<span class="token punctuation">&#123;</span>DATE<span class="token punctuation">&#125;</span> <span class="token operator">-</span> 当前的系统日期。
$<span class="token punctuation">&#123;</span>TIME<span class="token punctuation">&#125;</span> <span class="token operator">-</span> 当前系统时间。
$<span class="token punctuation">&#123;</span>YEAR<span class="token punctuation">&#125;</span> <span class="token operator">-</span> 今年。
$<span class="token punctuation">&#123;</span>MONTH<span class="token punctuation">&#125;</span> <span class="token operator">-</span> 当月。
$<span class="token punctuation">&#123;</span>DAY<span class="token punctuation">&#125;</span> <span class="token operator">-</span> 当月的当天。
$<span class="token punctuation">&#123;</span>HOUR<span class="token punctuation">&#125;</span> <span class="token operator">-</span> 目前的小时。
$<span class="token punctuation">&#123;</span>MINUTE<span class="token punctuation">&#125;</span> <span class="token operator">-</span> 当前分钟。
$<span class="token punctuation">&#123;</span>PRODUCT_NAME<span class="token punctuation">&#125;</span> <span class="token operator">-</span> 将在其中创建文件的IDE的名称。
$<span class="token punctuation">&#123;</span>MONTH_NAME_SHORT<span class="token punctuation">&#125;</span> <span class="token operator">-</span> 月份名称的前<span class="token number">3</span>个字母。 示例：<span class="token number">1</span>月，<span class="token number">2</span>月等
$<span class="token punctuation">&#123;</span>MONTH_NAME_FULL<span class="token punctuation">&#125;</span> <span class="token operator">-</span> 一个月的全名。 示例：<span class="token number">1</span>月，<span class="token number">2</span>月等<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h4 id="5-新建一个python文件试试"><a href="#5-新建一个python文件试试" class="headerlink" title="5. 新建一个python文件试试"></a>5. 新建一个python文件试试</h4><p><img src="https://cdn.jsdelivr.net/gh/Fansirsqi/blog-Images@main/images/202207251811137.gif" alt="touch file"></p>
]]></content>
      <categories>
        <category>IDE设置</category>
      </categories>
      <tags>
        <tag>PycharmIde</tag>
      </tags>
  </entry>
  <entry>
    <title>软件测试面试题整理-持续更新</title>
    <url>/2022/07/12/ruan-jian-ce-shi-zheng-li-mian-shi-ti/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>写在前面,大部分是CP来的,希望对你有一点帮助,主要就是看你对这些东西的熟悉程度,面试造飞机,上班拧螺丝大多如此,其实我觉得吧实际工作中,能做到高效简单最好,那那面试官怎么去判断评定你呢,我想大概就这些了吧!<br>加油!<code>&lt;!--more--&gt;</code></p>
<h3 id="测试计划内容-这个一般不会问"><a href="#测试计划内容-这个一般不会问" class="headerlink" title="测试计划内容(这个一般不会问)"></a>测试计划内容(这个一般不会问)</h3><p>测试范围. 时间进度安排. 资源配置（人员和设备）. 存在的风险和规避的措施等</p>
<h3 id="测试报告内容-不唯一-但都差不多"><a href="#测试报告内容-不唯一-但都差不多" class="headerlink" title="测试报告内容(不唯一,但都差不多)"></a>测试报告内容(不唯一,但都差不多)</h3><p>数据的统计：人力设备时间的统计，用例覆盖率的统计. 用例执行率统计，缺陷的统计（数量，严重级别，来源. 类型），遗留缺陷及存在的风险和规避措施，对测试对象  的评估&#x2F;测试结论。</p>
<h3 id="linux搭建测试环境步骤-这个建议去找找更详细的-自己组织一下语言-不同公司环境不同等等"><a href="#linux搭建测试环境步骤-这个建议去找找更详细的-自己组织一下语言-不同公司环境不同等等" class="headerlink" title="linux搭建测试环境步骤(这个建议去找找更详细的,自己组织一下语言,不同公司环境不同等等)"></a>linux搭建测试环境步骤(这个建议去找找更详细的,自己组织一下语言,不同公司环境不同等等)</h3><span id="more"></span>

<ol>
<li>用&#96;&#96;xftp&#96;将安装包传到服务器</li>
<li>用 <code>unzip</code>进行解压</li>
<li>进行安装(用 <code>rpm</code>命令安装 apache  mysql等安装包）<code>yum</code>,<code>apt install..</code>等等</li>
<li>将程序包拷贝到 <code>/var/www/html</code>下面（部署）</li>
<li>到 <code>/etc/httpd/conf/httpd.conf</code>修改配置文件,启动服务 <code>service mysqld start</code></li>
<li>启动服务 <code>service httpd  start</code></li>
<li>访问系统</li>
</ol>
<h3 id="如何查看服务器日志？如何查看手机日志？"><a href="#如何查看服务器日志？如何查看手机日志？" class="headerlink" title="如何查看服务器日志？如何查看手机日志？"></a>如何查看服务器日志？如何查看手机日志？</h3><p>用 <code>crt/xshell/ssh</code>连接linux服务器，到服务软件下的logs目录下用 <code>more</code>&#x2F;<code>less</code>命令查看    <code>more /etc/httpd/logs/error.log</code><br>安卓 adb logcat<br>ios  itools工具连接电脑看</p>
<h3 id="在测试项目当中什么情况下要用到数据库？怎么用的"><a href="#在测试项目当中什么情况下要用到数据库？怎么用的" class="headerlink" title="在测试项目当中什么情况下要用到数据库？怎么用的?"></a>在测试项目当中什么情况下要用到数据库？怎么用的?</h3><p>在测试项目当中什么情况下要用到linux？怎么用的？<br>数据库  比对数据的准确性（比如某个订单支付成功后，订单表中该订单支付状态字段值由0变成1）  搭建环境<br>linux       查看&#x2F;修改系统配置. 查看日志  搭建环境</p>
<h3 id="app性能如何测试"><a href="#app性能如何测试" class="headerlink" title="app性能如何测试"></a>app性能如何测试</h3><p>首先选择三款高中低档的手机，使用性能狗分别连接手机，选择好xxx应用，然后点击运行，持续操作xxx应用15分钟（涵盖所有的主要业务流程），最后保存性能结果。再拿性能指标和性能结果进行对比，主要看cpu 内存 占比是否符合要求，（如果有流畅度要求的，还要考虑fps和jank的影响）。如果cpu或者内存占用相对指标过高，需要结合操作事件和cpu或者内存占用情况分析哪些操作可能引起异常，然后沟通开发进行优化</p>
<h3 id="fiddler在项目中怎么使用的？-有没有用fiddler做过改包"><a href="#fiddler在项目中怎么使用的？-有没有用fiddler做过改包" class="headerlink" title="fiddler在项目中怎么使用的？(有没有用fiddler做过改包?"></a>fiddler在项目中怎么使用的？(有没有用fiddler做过改包?</h3><p>1).当发现一个BUG以后，可以抓取这个动作的包，然后查看该动作的请求和响应，可以帮助我分析BUG产生的原因<br>(例如:点击一个按钮没有效果，抓包以后发现请求没有发出，或者参数发送有误，那么这就是一个客户端的BUG。如果没有收到响应，或者响应数据有误，则是服务器BUG)。有时可以将抓到的数据贴到BUG单里面，能够帮助开发定位BUG。<br>2).在接口测试时，有时候接口文档没有详细，需要通过fiddler抓取请求的参数和接口地址<br>3）做过，篡改数据，断点. 伪响应. 伪请求)<br>4）弱网测试：模拟2g（几k到十几k，看文字）&#x2F;3g（十几到几十k，看图片）&#x2F;4g(几百k到几M 看视频)网络情况</p>
<pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">if</span> <span class="token punctuation">(</span>m_SimulateModem<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
           <span class="token comment">// Delay sends by 300ms per KB uploaded.</span>
           oSession<span class="token punctuation">[</span><span class="token string">"request-trickle-delay"</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">"300"</span><span class="token punctuation">;</span> 
           <span class="token comment">// Delay receives by 150ms per KB downloaded.</span>
           oSession<span class="token punctuation">[</span><span class="token string">"response-trickle-delay"</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">"0.1"</span><span class="token punctuation">;</span> 
       <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h3 id="怎么做app稳定（压力）性测试"><a href="#怎么做app稳定（压力）性测试" class="headerlink" title="怎么做app稳定（压力）性测试"></a>怎么做app稳定（压力）性测试</h3><p>1.打开手机的开发者调试工具，用usb数据线链接手机<br>2.<code>adb shell pm list packages</code> 查看你的手机所有的安装包<br>3.运行 <code>adb shell monkey  -p  com.tencent.news  -v -v -v  -s 18 100</code><br>&#x2F;&#x2F;对包 <code>com.tencent.news</code>进行压力测试&#x2F; &#x2F; <code>-p</code>参数：表示指定测试的程序（空格后面跟安装包名字，拿刚才的第三方安装包一个个试） &#x2F; &#x2F;<code>-v</code>参数：表示查看 <code>monkey</code>执行过程的信息(日志级别）（<code>-v</code>越多越详细，最多三个）&#x2F; &#x2F;数字100:表示测试事件数为100</p>
<p><code>s</code> 重复上一次的压力事件（一模一样）  时间间隔？<code>throttle</code></p>
<h3 id="用fiddler抓包抓取移动端的包怎么抓？"><a href="#用fiddler抓包抓取移动端的包怎么抓？" class="headerlink" title="用fiddler抓包抓取移动端的包怎么抓？"></a>用fiddler抓包抓取移动端的包怎么抓？</h3><p>因为fiddler抓包的原理就是通过代理，所以被终端需要和安装fiddler的电脑在同一个局域网中，开启fiddler的远程连接，fiddler主菜单 <code>tools</code>-&gt;<code>fiddleroptions</code>–&gt;<code>connect</code>并记住端口号 <code>8888</code>，再到手机设置去配置代理，然后重启fiddler保证设置生成。</p>
<p>怎么抓https包？：需要安装一个根证书</p>
<p><code>Adb：Android</code>调试桥<br><code>adb</code>（Android Debug Bridge）是一个功能多样的通用命令行工具，可让您与模拟器实例或连接的 <code>Android</code>设备进行通信。<code>adb</code> 命令便于执行各种设备操作（例如安装和调试应用），并提供对 <code>Unix shell</code>（可用来在设备上运行各种命令）的访问权限。它是一种客户端-服务器程序，包括以下三个组件：<br>客户端：用于发送命令。客户端在开发计算机上运行。您可以通过发出 <code>adb</code> 命令从命令行终端调用客户端。<br>守护进程 (adbd)：在设备上运行命令。守护进程在每个设备上作为后台进程运行。<br>服务器：管理客户端和守护进程之间的通信。服务器在开发计算机上作为后台进程运行。<br><code>Adb</code>环境配置 <code>linux</code><br><code>adb</code> 包含在 <code>Android SDK</code> 平台工具软件包中。可以使用 <code>SDK</code> 管理器下载此软件包，管理器会将此软件包安装在 <code>android_sdk/platform-tools/</code></p>
<p>Android SDK下载：<span class="exturl" data-url="aHR0cDovL3Rvb2xzLmFuZHJvaWQtc3R1ZGlvLm9yZy9pbmRleC5waHAvc2Rr">http://tools.android-studio.org/index.php/sdk<i class="fa fa-external-link-alt"></i></span></p>
<p>此处下载的是 <code>r24.41</code>，下载对应的exe安装包后，双击安装即可。<br>安装路径：<code>D:\android-sdk</code></p>
<p>安装后启动 <code>SDK Manager.exe</code> 程序，勾选 <code>Android SDK Platform-tool</code>下载<br>环境变量设置<br>Path变量中添加 <code>Android SDK Platform-tool</code>的安装路径：<br><code>D:\android-sdk\platform-tools;</code><br><code>Adb</code>环境配置检测<br>控制台输入adb检验是否安装成功<br>输入 <code>adb version</code>查看 <code>adb</code>版本</p>
<p><code>Adb</code>的工作原理</p>
<p>当启动某个 <code>adb</code> 客户端时，客户端会先检查是否有 <code>adb</code> 服务器进程正在运行。如果没有，它将启动服务器进程。服务器在启动后会与本地 <code>TCP</code> 端口 <code>5037</code> 绑定，并监听 <code>adb</code> 客户端发出的命令 - 所有 <code>adb</code> 客户端均通过端口 <code>5037</code> 与 <code>adb</code> 服务器通信。<br>启用adb调试<br>要在通过 <code>USB</code> 连接的设备上使用 <code>adb</code>，您必须在设备的系统设置中启用 <code>USB</code> 调试（位于开发者选项下）。<br>在搭载 <code>Android 4.2</code> 及更高版本的设备上，“开发者选项”屏幕默认情况下处于隐藏状态。如需将其显示出来，请依次转到设置 &gt; 关于手机，然后点按版本号七次。返回上一屏幕，在底部可以找到开发者选项。<code>&lt;font color=red&gt;</code>打开USB调试模式 <code>&lt;/font&gt;</code><br>注意：当连接搭载 <code>Android 4.2.2</code> 或更高版本的设备时，系统会显示一个对话框，询问您是否接受允许通过此计算机进行调试的 <code>RSA</code> 密钥。这种安全机制可以保护用户设备，因为它可以确保只有在您能够解锁设备并确认对话框的情况下才能执行 <code>USB</code> 调试和其他 <code>adb</code> 命令。<br>Adb常用命令<br>连接夜神模拟器</p>
<p><code>adb connect 127.0.0.1:62001</code></p>
<p>查看设备信息</p>
<p><code>adb devices</code></p>
<p>可以先用该命令扫描模拟器端口,再用上面的连接命令,模拟器端口不固定所以先扫描</p>
<p><code>adb shell</code></p>
<p>Android系统的底层是linux系统，shell是linux系统的字符交互界面。</p>
<p>进入adb shell后有两种状态显示：#代表有root权限，$代表没有root权限。</p>
<p>退出adb shell</p>
<p><code>exit</code></p>
<p>在设备安装APK</p>
<p>默认安装<br><code>adb install &lt;apkName&gt;</code></p>
<p>覆盖安装<br><code>Adb install -r &lt;apkName&gt;</code></p>
<p>卸载APK</p>
<ol>
<li>查看设备上安装的包名</li>
</ol>
<p><code>adb shell pm list package(s)</code>       #查看设备上所有包名</p>
<p><code>adb shell pm list package(s) -3</code>    #查看设备上安装的三方应用的包名</p>
<p><code>rpm  -qa</code> 执行命令删除</p>
<p><code>adb uninstall  &lt;appPackage&gt;</code> 卸载应用</p>
<h3 id="文件读取写入"><a href="#文件读取写入" class="headerlink" title="文件读取写入"></a>文件读取写入</h3><ol>
<li>将文件从PC写入到设备</li>
</ol>
<p><code>adb push &lt;local&gt; &lt;remote&gt;</code></p>
<ol start="2">
<li>将文件从设备读取到PC</li>
</ol>
<p><code>adb pull &lt;remote&gt; &lt;local&gt;</code></p>
<h4 id="LOG抓取"><a href="#LOG抓取" class="headerlink" title="LOG抓取"></a>LOG抓取</h4><p><code>adb logcat -v time &gt;D:\test\1.txt</code>  抓取系统全日志</p>
<p><code>adb logcat -v time -s &lt;appPackage&gt; &gt;D:\test\log.txt</code>  抓取app日志</p>
<h3 id="抓取应用崩溃日志"><a href="#抓取应用崩溃日志" class="headerlink" title="抓取应用崩溃日志"></a>抓取应用崩溃日志</h3><p>Crash日志<br><code>adb shell dumpsys dropbox --print &gt;D:\drop.txt</code></p>
<p>ANR日志（无响应日志）<br><code>adb pull /data/anr anr</code></p>
<p>屏幕截图</p>
<p><code>adb shell screencap sdcard/sc.png</code><br><code>adb pull sdcard/sc.png C:\Users\admin\Pictures/sc.png</code></p>
<p>adb服务启动和关闭</p>
<p><code>adb kill-server</code>                        关闭adb服务<br><code>adb start-server</code>                      开启adb服务</p>
<p>注：如果5037端口被占用，可使用如下命令释放端口：</p>
<p><code>C:\Users\admin&gt;netstat -ano | findstr &quot;5037&quot;</code></p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">TCP    <span class="token number">127.0</span>.0.1:5037         <span class="token number">0.0</span>.0.0:0              LISTENING       <span class="token number">11072</span>
TCP    <span class="token number">127.0</span>.0.1:5037         <span class="token number">127.0</span>.0.1:59519        TIME_WAIT       <span class="token number">0</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<p><code>taskkill -f -pid XXX</code></p>
<h4 id="adb进阶"><a href="#adb进阶" class="headerlink" title="adb进阶"></a>adb进阶</h4><p>封装成bat批处理脚本，随时可以运行</p>
<p><code>截屏.bat</code></p>
<p><code>adb shell screencap sdcard/sc.png</code></p>
<p><code>adb pull sdcard/sc.png C:\Users\admin\Pictures/sc.png</code></p>
<p><code>adb shell rm sdcard/sc.png</code></p>
<p>获取app的packageName&#x2F;ActivityName</p>
<p><code>adb shell dumpsys window w |findstr \/ |findstr name=</code></p>
<p>APP压力测试</p>
<p><code>monkey</code></p>
<p><code>adb shell monkey -p 包名</code>（com…）          -v -v -v              次数<br>                      软件包名     日志详细度（V越多越详细）  产生随机事件数量</p>
<ul>
<li>s 重复上一次的压力事件（一模一样）  时间间隔？throttle</li>
</ul>
<p><code>adb  shell monkey  -p  com.cjapp.superhouse -s  110 --throttle 1000 -v -v -v 1000</code></p>
<h3 id="写出十个adb命令-分别举例说明"><a href="#写出十个adb命令-分别举例说明" class="headerlink" title="写出十个adb命令 分别举例说明"></a>写出十个adb命令 分别举例说明</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">adb connect <span class="token number">127.0</span>.0.1:5555
adb root
adb remount
adb shell
adb push c:/xxx /data
adb pm list packages<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h3 id="http协议的内容，分别解释"><a href="#http协议的内容，分别解释" class="headerlink" title="http协议的内容，分别解释"></a>http协议的内容，分别解释</h3><blockquote>
<p>请求部分：</p>
</blockquote>
<p>请求行：请求类型           服务器地址                 接口地址（url资源地址）    协议类型 协议版本<br>请求头部：客户端的信息<br>请求正文（请求体）：发送给服务器的内容（参数）<br>请求部分：<br>请求类型 服务器地址 接口地址（url资源地址）协议类型 协议版本<br>请求头部：客户端的信息<br>响应部分：<br>协议类型 版本  响应状态码   响应描述<br>响应头部：服务器的相关信息<br>响应正文：服务器回复客户端的信息</p>
<h3 id="get和post请求是服务器接口测试当中两种主要请求类型-他们有什么区别"><a href="#get和post请求是服务器接口测试当中两种主要请求类型-他们有什么区别" class="headerlink" title="get和post请求是服务器接口测试当中两种主要请求类型,他们有什么区别"></a>get和post请求是服务器接口测试当中两种主要请求类型,他们有什么区别</h3><blockquote>
<p>区别：</p>
</blockquote>
<p>1 .get请求的参数在请求行，post在请求体里面<br>2 .get请求的参数内容有长度限制，post没有限制<br>3 .post请求的安全性相对get较高</p>
<h3 id="接口测试的优点（为什么要做接口测试）"><a href="#接口测试的优点（为什么要做接口测试）" class="headerlink" title="接口测试的优点（为什么要做接口测试）"></a>接口测试的优点（为什么要做接口测试）</h3><blockquote>
<p>(开发一部分后端接口的时候可以进行测试)  也可以在系统测试后作为补充测试</p>
</blockquote>
<p>1 .一个接口层面的问题可能导致功能层面的5、6个问题，所以提前做接口测试可以大量减少功能层面的问题，<br>2 .另外，接口测试能测到很多功能层面测不了的场景，比如购买商品数量为负数的情况，可以绕过客户端，直接给服务器发请求，达到非法攻击目的。</p>
<h3 id="如何做接口测试"><a href="#如何做接口测试" class="headerlink" title="如何做接口测试"></a>如何做接口测试</h3><p>拿到接口文档（包含接口名称，地址，请求类型，请求的参数名，预期的返回结果种类）进行接口用例编写，用例设计的几种情况包括有输入正常的参数信息，缺少必要参数信息，参数输入空值，输入错误参数等，然后用postman执行用例，具体操作：将接口地址输入到postman接口地址中，选择post或者get接口类型,在body或者请求行里面增加参数名和参数值  ，最后点击发送，查看返回结果与预期结果是否相符。</p>
<p>比如，发帖接口。根据接口文档，知道了该接口属于post类型，服务器地址和接口路径publish,这个接口有5个参数，分别是:标题、内容、用户id、发帖类型、是否匿名，有两种响应情况，发帖成功返回{result:1},发帖失败返回{result:-1}。先编写了这个接口的测试用例，然后使用postman工具，选择post类型，在URL位置填入服务器地址和接口路径，在body位置填入5个参数和参数的值，然后修改参数值的字符类型、长度、是否为空等各种情况，查看响应是否正确。如果发现响应不匹配，或者数据库里面数据不对，就会提交BUG。</p>
<h3 id="如何定位分析bug："><a href="#如何定位分析bug：" class="headerlink" title="如何定位分析bug：?"></a>如何定位分析bug：?</h3><p>大的方面就两种方式：一是抓包接口定位分析，二是看系统日志。<code>&lt;!--more--&gt;</code>首先说抓包接口，如果你是web项目的话，一般工作中使用方式比较多的是使用浏览器自带的F12抓包看接口请求。</p>
<p>如果是app客户端之类的，一般采用fiddler等工具进行抓包接口。不管哪种方式，目的都是一样的，就是通过查看接口，从而去定位分析属于前端问题还是后端问题。</p>
<h3 id="软件测试流程-面试这样回答一看就是背的八股文"><a href="#软件测试流程-面试这样回答一看就是背的八股文" class="headerlink" title="软件测试流程(面试这样回答一看就是背的八股文)"></a>软件测试流程(面试这样回答一看就是背的八股文)</h3><p>作需求分析-需求评审-编写测试计划-设计测试方案-编写用例测试-评审用例-搭建测试环境，准备测试数据-冒烟测试-执行用例-提交bug-回归测试-编写测试报告</p>
<h3 id="简述测试流程"><a href="#简述测试流程" class="headerlink" title="简述测试流程"></a>简述测试流程</h3><ol>
<li>阅读相关技术文档（如产品PRD、UI设计、产品流程图等. 。</li>
<li>参加需求评审会议。</li>
<li>根据最终确定的需求文档编写测试计划。</li>
<li>编写测试用例（等价类划分法、边界值分析法等. 。</li>
<li>用例评审(主要参与人员：开发、测试、产品、测试leader)。</li>
<li>开发提交代码至SVN或者GIT ，配管搭建测试环境。</li>
<li>执行测试用例，记录发现的问题。</li>
<li>验证bug与回归测试。</li>
<li>编写测试报告。(bug率满足用户需求)</li>
<li>产品上线。</li>
</ol>
<p><em>补充测试用例设计过程：</em><br><em>根据需求得出测试需求</em><br><em>设计测试方案，评审测试方案</em><br><em>方案评审通过后，设计测试用例，再对测试用例进行评审</em></p>
<h2 id="软件测试的目的："><a href="#软件测试的目的：" class="headerlink" title="软件测试的目的：?"></a>软件测试的目的：?</h2><p>测试是程序的执行过程，目的在于发现错误。</p>
<p>一个成功的测试用例在于发现至今未发现的错误。</p>
<p>一个成功的测试是发现了至今未发现的错误的测试。</p>
<p>确保产品完成了它所承诺或公布的功能，并且用户可以访问到的功能都有明确的书面说明。</p>
<p>确保产品满足性能和效率的要求。</p>
<p>确保产品是健壮的和适应用户环境的。</p>
<h2 id="问：软件生存周期及其模型是什么？"><a href="#问：软件生存周期及其模型是什么？" class="headerlink" title="问：软件生存周期及其模型是什么？"></a>问：软件生存周期及其模型是什么？</h2><p>软件生存周期是软件开发全部过程、活动和任务的结构框架，是从可行性研究到需求分析、软件设计、编码、测试、软件发布维护的过程。在经历需求、分析、设计、实现、部署后，软件将被使用并进入维护阶段，直到最后由于缺少维护费用而逐渐消亡。这样的一个过程，称为”生命周期模型”（Life Cycle Model. 。</p>
<h2 id="什么是软件质量？"><a href="#什么是软件质量？" class="headerlink" title="什么是软件质量？"></a>什么是软件质量？</h2><p>软件质量：软件产品的特性可以满足用户的功能、性能需求的能力。</p>
<h2 id="自动化测试脚本开发的主要步骤"><a href="#自动化测试脚本开发的主要步骤" class="headerlink" title="自动化测试脚本开发的主要步骤"></a>自动化测试脚本开发的主要步骤</h2><p>通过某些方式定位到我们要执行的对象、目标( Target)</p>
<p>对这个对象进行什么操作(command)</p>
<p>通过操作对定位到的元素赋值(value)</p>
<p>添加断言操作</p>
<h2 id="目前主要的测试用例设计方法是什么？"><a href="#目前主要的测试用例设计方法是什么？" class="headerlink" title="目前主要的测试用例设计方法是什么？"></a>目前主要的测试用例设计方法是什么？</h2><h3 id="白盒测试"><a href="#白盒测试" class="headerlink" title="白盒测试"></a>白盒测试</h3><ol>
<li>逻辑覆盖</li>
<li>循环覆盖</li>
<li>基本路径覆盖</li>
</ol>
<h3 id="黑盒测试"><a href="#黑盒测试" class="headerlink" title="黑盒测试"></a>黑盒测试</h3><ol>
<li>边界值分析法</li>
<li>等价类划分</li>
<li>错误猜测法</li>
<li>因果图法</li>
<li>状态图法</li>
<li>测试大纲法</li>
<li>随机测试场景法</li>
</ol>
<p>查找命令find &#x2F; -name abc.log</p>
<h2 id="测试用例设计方案"><a href="#测试用例设计方案" class="headerlink" title="测试用例设计方案"></a>测试用例设计方案</h2><ol>
<li>功能：重点关注软件产品，模块有没有实现具体的功能（通过测试设计方法论设计用例来验证.</li>
<li>性能：功能操作的响应时间，服务端的CPU，内存，网络，IO的消耗情况</li>
<li>安全：未作深入测试，了解敏感信息是否加密，SQL注入等</li>
<li>网络：关注无网络，弱网，网络切换的测试点</li>
<li>兼容性：不同版本兼容，前端考虑分辨率，不同浏览器版本，手机方面考虑操作系统兼容性</li>
<li>UI界面：UI测试点，按钮是否可用，界面跳转，布局等等测试点</li>
<li>专项测试：针对一些独有的功能进行测试</li>
</ol>
<h2 id="常见的测试用例设计方法都有哪些-请分别以具体的例子来说明这些方法在测试用例设计工作中的应用"><a href="#常见的测试用例设计方法都有哪些-请分别以具体的例子来说明这些方法在测试用例设计工作中的应用" class="headerlink" title="常见的测试用例设计方法都有哪些?请分别以具体的例子来说明这些方法在测试用例设计工作中的应用"></a>常见的测试用例设计方法都有哪些?请分别以具体的例子来说明这些方法在测试用例设计工作中的应用</h2><h3 id="1-等价类划分划分"><a href="#1-等价类划分划分" class="headerlink" title="1. 等价类划分划分"></a>1. 等价类划分划分</h3><p>等价类是指某个输入域的子集合。在该子集合中，各个输入数据对于揭露程序中的错误都是等效的。并合理地假定:测试某等价类的代表值就等于对这一类其它值的测试。因此，可以把全部输入数据合理划分为若干等价类，在每一个等价类中取一个数据作为测试的输入条件，就可以用少量代表性的测试数据。取得较好的测试结果。等价类划分可有两种不同的情况:有效等价类和无效等价类。</p>
<h3 id="2-边界值分析法"><a href="#2-边界值分析法" class="headerlink" title="2. 边界值分析法"></a>2. 边界值分析法</h3><p>边界值分析方法是对等价类划分方法的补充。测试工作经验告诉我，大量的错误是发生在输入或输出范围的边界上，而不是发生在输入输出范围的内部。因此针对各种边界情况设（面试题目：什么样的工作环境适合你&amp;#from一个常见的软件测试面试题来自end#lt；结束. 计测试用例，可以查出更多的错误。</p>
<p>使用边界值分析方法设计测试用例，首先应确定边界情况。通常输入和输出等价类的边界，就是应着重测试的边界情况。应当选取正好等于，刚刚大于或刚刚小于边界的值作为测试数据，而不是选取等价类中的典型值或任意值作为测试数据。</p>
<h3 id="3-错误推测法"><a href="#3-错误推测法" class="headerlink" title="3. 错误推测法"></a>3. 错误推测法</h3><p>基于经验和直觉推测程序中所有可能存在的各种错误，从而有针对性的设计测试用例的方法。</p>
<p>错误推测方法的基本思想：列举出程序中所有可能有的错误和容易发生错误的特殊情况，根据他们选择测试用例。例如，在单元测试时曾列出的许多在模块中常见的错误。以前产品测试中曾经发现的错误等，这些就是经验的总结。还有，输入数据和输出数据为0的情况。输入表格为空格或输入表格只有一行。这些都是容易发生错误的情况。可选择这些情况下的例子作为测试用例。</p>
<h3 id="4-因果图方法"><a href="#4-因果图方法" class="headerlink" title="4. 因果图方法"></a>4. 因果图方法</h3><p>前面介绍的等价类划分方法和边界值分析方法，都是着重考虑输入条件，但未考虑输入条件之间的联系，相互组合等。考虑输入条件之间的相互组合，可能会产生一些新的情况。但要检查输入条件的组合不是一件容易的事情，即使把所有输入条件划分成等价类，他们之间的组合情况也相当多。因此必须考虑采用一种适合于描述对于多种条件的组合，相应产生多个动作的形式来考虑设计测试用例。这就需要利用因果图(逻辑模型)。因果图方法最终生成的就是判定表。它适合于检查程序输入条件的各种组合情况。</p>
<h3 id="5-正交表分析法"><a href="#5-正交表分析法" class="headerlink" title="5. 正交表分析法"></a>5. 正交表分析法</h3><p>有时候，可能因为大量的参数的组合而引起测试用例数量上的激增，同时，这些测试用例并没有明显的优先级上的差距，而测试人员又无法完成这么多数量的测试，就可以通过正交表来进行缩减一些用例，从而达到尽量少的用例覆盖尽量大的范围的可能性。</p>
<h3 id="6-场景分析方法"><a href="#6-场景分析方法" class="headerlink" title="6. 场景分析方法"></a>6. 场景分析方法</h3><p>指根据用户场景来模拟用户的操作步骤，这个比较类似因果图，但是可能执行的深度和可行性更好。</p>
<h3 id="测试的策略有哪些"><a href="#测试的策略有哪些" class="headerlink" title="测试的策略有哪些?"></a>测试的策略有哪些?</h3><p>黑盒&#x2F;白盒&#x2F;灰盒，静态&#x2F;动态，手工&#x2F;自动，冒烟测试，回归测试，公测（Beta测试的策略.</p>
<p>补充：公测是什么?还有没有其他的测试策略？测试策略和测试方法以及测试类型有什么区别？</p>
<h3 id="按测试策略分类"><a href="#按测试策略分类" class="headerlink" title="按测试策略分类"></a>按测试策略分类</h3><ol>
<li>静态与动态测试</li>
<li>黑盒与白盒测试</li>
<li>手工和自动测试</li>
<li>冒烟测试</li>
<li>回归测试；</li>
</ol>
<h2 id="按测试阶段分类：单元测试、集成测试、系统测试"><a href="#按测试阶段分类：单元测试、集成测试、系统测试" class="headerlink" title="按测试阶段分类：单元测试、集成测试、系统测试"></a>按测试阶段分类：单元测试、集成测试、系统测试</h2><p>其他常见测试方法：1、功能测试 2、性能测试 3、压力测试 4、负载测试 5、易用性测试 6、安装测试 7、界面测试 8、配置测试 9、文档测试 10、兼容性测试 11、安全性测12、恢复测试</p>
<h3 id="α测试"><a href="#α测试" class="headerlink" title="α测试"></a>α测试</h3><p>α测试是由一个用户在开发环境下进行的测试，也可以是公司内部的用户在模拟实际操作环境下进行的受控测试，Alpha 测试不能由程序员或测试员完成。</p>
<h3 id="β测试"><a href="#β测试" class="headerlink" title="β测试"></a>β测试</h3><p>β测试是软件的多个用户在一个或多个用户的实际使用环境下进行的测试。开发者通常不在测试现场，Beta 测试不能由程序员或测试员完成。</p>
<h3 id="回归测试"><a href="#回归测试" class="headerlink" title="回归测试"></a>回归测试</h3><p>回归测试（对软件的新版本测试时，重复执行上一个版本测试时的用例，是为了验证缺陷是否真正修复，确认修复后是否影响其它功能. ；</p>
<h3 id="冒烟测试"><a href="#冒烟测试" class="headerlink" title="冒烟测试"></a>冒烟测试</h3><p>冒烟测试：对新版本测试之前，先验证下软件的基本功能是否实现，是否具备可测性。</p>
<h2 id="单元测试的策略有哪些？"><a href="#单元测试的策略有哪些？" class="headerlink" title="单元测试的策略有哪些？"></a>单元测试的策略有哪些？</h2><h3 id="逻辑覆盖、循环覆盖、同行评审、桌前检查、代码走查、代码评审、景泰数据流分析"><a href="#逻辑覆盖、循环覆盖、同行评审、桌前检查、代码走查、代码评审、景泰数据流分析" class="headerlink" title="逻辑覆盖、循环覆盖、同行评审、桌前检查、代码走查、代码评审、景泰数据流分析"></a>逻辑覆盖、循环覆盖、同行评审、桌前检查、代码走查、代码评审、景泰数据流分析</h3><h2 id="正交表测试用例设计方法的特点是什么？"><a href="#正交表测试用例设计方法的特点是什么？" class="headerlink" title="正交表测试用例设计方法的特点是什么？"></a>正交表测试用例设计方法的特点是什么？</h2><p>答：用最少的实验覆盖最多的操作，测试用例设计很少，效率高，但是很复杂；对于基本的验证功能，以及二次集成引起的缺陷，一般都能找出来；但是更深的缺陷，更复杂的缺陷，还是无能为力的；具体的环境下，正交表一般都很难做的。大多数，只在系统测试的时候使用此方法。</p>
<p>补充：什么时候用系统测试，测试的每个阶段是什么，比如单元、集成、系统、公测，每个阶段需要什么技术，有什么要求</p>
<h2 id="软件的安全性应从哪几个方面去测试？"><a href="#软件的安全性应从哪几个方面去测试？" class="headerlink" title="软件的安全性应从哪几个方面去测试？"></a>软件的安全性应从哪几个方面去测试？</h2><p>(1) 用户认证机制：如数据证书、智能卡、双重认证、安全电子交易协议</p>
<p>(2) 加密机制</p>
<p>(3) 安全防护策略：如安全日志、入侵检测、隔离防护、漏洞扫描</p>
<p>(4) 数据备份与恢复手段：存储设备、存储优化、存储保护、存储管理</p>
<p>(5) 防病毒系统</p>
<h2 id="需求测试的注意事项有哪些？"><a href="#需求测试的注意事项有哪些？" class="headerlink" title="需求测试的注意事项有哪些？"></a>需求测试的注意事项有哪些？</h2><ol>
<li>是否使用了公司的模板</li>
<li>文档内容是否符合规范</li>
<li>所有的需求是分级是否清析适当？</li>
<li>所有的需求是否具有一致性</li>
<li>需求是否可行（即，该需求组合有解决方案.</li>
<li>需求可否用己知的约束来实现</li>
<li>需求是否足够（即，可以把它送到一个规范的开发组织，并有一个生产出所需要产品的合理的可能性.</li>
<li>所有的其它需求是交叉引用是否正确</li>
<li>用户描述是否清楚</li>
<li>是否用客户的语言来描述需求</li>
<li>每个需求描述是否清楚没有岐义，可以移交给一个独立的组去实现时也能理解</li>
<li>是否所有的需求都是可验证的</li>
<li>是否每条需求都具有独立性，即使发生了变化也不会影响其它需求</li>
<li>性能指标是否明确</li>
<li>非功能性需求是否得到充分表现</li>
<li>是否完整列出适用的标准或协议</li>
<li>标准和协议之间是否存在冲突</li>
</ol>
<h2 id="问：你在测试中发现了一个-bug-，但是开发经理认为这不是一个-bug-，你应该怎样解决"><a href="#问：你在测试中发现了一个-bug-，但是开发经理认为这不是一个-bug-，你应该怎样解决" class="headerlink" title="问：你在测试中发现了一个 bug ，但是开发经理认为这不是一个 bug ，你应该怎样解决"></a>问：你在测试中发现了一个 bug ，但是开发经理认为这不是一个 bug ，你应该怎样解决</h2><ol>
<li>将问题提交到缺陷管理库里面进行备案。</li>
<li>要获取判断的依据和标准： 根据需求说明书、产品说明、设计文档等，确认实际结果是否与计划有不一致的地方，提供缺陷是否确认的直接依据； 如果没有文档依据，可以根据类似软件的一般特性来说明是否存在不一致的地方，来确认是否是缺陷； 根据用户的一般使用习惯，来确认是否是缺陷；</li>
<li>与设计人员、开发人员和客户代表等相关人员探讨，确认是否是缺陷；</li>
<li>合理的论述，向测试经理说明自己的判断的理由，注意客观、严谨，不参杂个人情绪。</li>
<li>等待测试经理做出最终决定，如果仍然存在争议，可以通过公司政策所提供的渠道，向上级反映，并有上级做出决定。</li>
</ol>
<h2 id="问：给你一个网站，你如何测试？"><a href="#问：给你一个网站，你如何测试？" class="headerlink" title="问：给你一个网站，你如何测试？"></a>问：给你一个网站，你如何测试？</h2><p>1、查找需求说明、网站设计 m 等相关文档，分析测试需求。</p>
<p>2、制定测试计划，确定测试范围和测试策略，一般包括以下几个部分：</p>
<p>功能性测试；界面测试；性能测试；数据库测试；安全性测试；兼容性测试</p>
<p>3、设计测试用例：</p>
<p>功能性测试可以包括，但不限于以下几个方面：</p>
<p>链接测试。链接是否正确跳转，是否存在空页面和无效页面，是否有不正确的出错信息返回等。提交功能的测试。</p>
<p>多媒体元素是否可以正确加载和显示。多语言支持是否能够正确显示选择的语言等。</p>
<h3 id="界面测试可以包括但不限于一下几个方面"><a href="#界面测试可以包括但不限于一下几个方面" class="headerlink" title="界面测试可以包括但不限于一下几个方面"></a>界面测试可以包括但不限于一下几个方面</h3><ol>
<li>页面是否风格统一，美观</li>
<li>文字检查</li>
<li>对于必须但为安装的空间，是否提供自动下载并安装的功能</li>
<li>控件是否正常使用</li>
<li>页面布局是否合理，重点内容和热点内容是否突出</li>
</ol>
<h3 id="问：一台客户端有三百个客户与三百个客户端有三百个客户对服务器施压，有什么区别"><a href="#问：一台客户端有三百个客户与三百个客户端有三百个客户对服务器施压，有什么区别" class="headerlink" title="问：一台客户端有三百个客户与三百个客户端有三百个客户对服务器施压，有什么区别? ?"></a>问：一台客户端有三百个客户与三百个客户端有三百个客户对服务器施压，有什么区别? ?</h3><p>300 个用户在一个客户端上，会占用客户机更多的资源，而影响测试的结果。线程之间可能发生干扰，而产生一些异常。300 个用户在一个客户端上，需要更大的带宽。IP 地址的问题，可能需要使用 IP Spoof 来绕过服务器对于单一 IP 地址最大连接数的限制。所有用户在一个客户端上，不必考虑分布式管理的问题；而用户分布在不同的客户端上，需要考虑使用控制器来整体调配不同客户机上的用户。同时，还需要给予相应的权限配置和防火墙设置。</p>
<p>你工作中遇到最具价值的bug，就是重大bug咯，例如app性能测试测哪些，那你就看一看性能测试的视频咯</p>
<h3 id="软件的安全性应从哪几个方面-去测试？"><a href="#软件的安全性应从哪几个方面-去测试？" class="headerlink" title="软件的安全性应从哪几个方面 去测试？"></a>软件的安全性应从哪几个方面 去测试？</h3><p>软件安全性测试包括程序、数据库安全性测试。根据系统安全指标不同测试策略也不同。</p>
<h3 id="用户认证安全的测试要考虑问题"><a href="#用户认证安全的测试要考虑问题" class="headerlink" title="用户认证安全的测试要考虑问题"></a>用户认证安全的测试要考虑问题</h3><ol>
<li>明确区分系统中不同用户权限</li>
<li>系统中会不会出现用户冲突</li>
<li>系统会不会因用户的权限的改变造成混乱</li>
<li>用户登陆密码是否是可见、可复制</li>
<li>是否可以通过绝对途径登陆系统（拷贝用户登陆后的链接直接进入系统.</li>
<li>用户退出系统后是否删除了所有鉴权标记，是否可以使用后退键而不通过输入口令进入系统</li>
<li>系统网络安全的测试要考虑问题</li>
<li>测试采取的防护措施是否正确装配好，有关系统的补丁是否打上</li>
<li>模拟非授权攻击，看防护系统是否坚固</li>
<li>采用成熟的网络漏洞检查工具检查系统相关漏洞（即用最专业的黑客攻击工具攻击试一下，</li>
<li>现在最常用的是 NBSI 系列和 IPhacker IP .</li>
<li>采用各种木马检查工具检查系统木马情况</li>
<li>采用各种防外挂工具检查系统各组程序的外挂漏洞</li>
</ol>
<h3 id="数据库安全考虑问题"><a href="#数据库安全考虑问题" class="headerlink" title="数据库安全考虑问题"></a>数据库安全考虑问题</h3><ol>
<li>系统数据是否机密（比如对银行系统，这一点就特别重要，一般的网站就没有太高要求.</li>
<li>系统数据的完整性（我刚刚结束的企业实名核查服务系统中就曾存在数据的不完整，对于这个系统的功能实现有了障碍.</li>
<li>系统数据可管理性</li>
<li>系统数据的独立性</li>
<li>系统数据可备份和恢复能力（数据备份是否完整，可否恢复，恢复是否可以完整.</li>
<li>系统数据可备份和恢复能力（数据备份是否完整，可否恢复，恢复是否可以完整.</li>
</ol>
<h2 id="软件质量保证体系是什么-国家标准中与质量保证管理相关的几个标准是什么-他们的编号和全称是什么"><a href="#软件质量保证体系是什么-国家标准中与质量保证管理相关的几个标准是什么-他们的编号和全称是什么" class="headerlink" title="软件质量保证体系是什么 国家标准中与质量保证管理相关的几个标准是什么? ? 他们的编号和全称是什么? ?"></a>软件质量保证体系是什么 国家标准中与质量保证管理相关的几个标准是什么? ? 他们的编号和全称是什么? ?</h2><p>SQA 由一套软件工程过程和方法组成，以保证（软件的. 质量。SQA 贯穿整个软件开发过程，(它)应包括需求文档评审、代码控制、代码评审、变更管理、配置管理、版本管理和软件测试。</p>
<h2 id="测试人员在软件开发过程中的任务是什么？"><a href="#测试人员在软件开发过程中的任务是什么？" class="headerlink" title="测试人员在软件开发过程中的任务是什么？"></a>测试人员在软件开发过程中的任务是什么？</h2><p>1、寻找 Bug；</p>
<p>2、避免软件开发过程中的缺陷；</p>
<p>3、衡量软件的品质；</p>
<p>4、关注用户的需求。</p>
<h3 id="总的目标是：确保软件的质量"><a href="#总的目标是：确保软件的质量" class="headerlink" title="总的目标是：确保软件的质量"></a>总的目标是：确保软件的质量</h3><h2 id="在您以往的工作中，一条软件缺陷（或者叫-Bug-记录都包含了哪些内容？如何提交高质量的软件缺陷（Bug-记录？"><a href="#在您以往的工作中，一条软件缺陷（或者叫-Bug-记录都包含了哪些内容？如何提交高质量的软件缺陷（Bug-记录？" class="headerlink" title="在您以往的工作中，一条软件缺陷（或者叫 Bug. 记录都包含了哪些内容？如何提交高质量的软件缺陷（Bug. 记录？"></a>在您以往的工作中，一条软件缺陷（或者叫 Bug. 记录都包含了哪些内容？如何提交高质量的软件缺陷（Bug. 记录？</h2><p>一条 Bug 记录最基本应包含：编号、Bug 所属模块、Bug 描述、Bug 级别、发现日期、发现人、修改日期、修改人、修改方法、回归结果等等；</p>
<p>要有效的发现 Bug 需参考需求以及详细设计等前期文档设计出高效的测试用例，然后严格执行测试用例，对发现的问题要充分确认</p>
<p>肯定，然后再向外发布如此才能提高提交 Bug 的质量。</p>
<h3 id="黑盒测试和白盒测试是软件测试的两种基本方法，请分别说明各自的优点和缺点"><a href="#黑盒测试和白盒测试是软件测试的两种基本方法，请分别说明各自的优点和缺点" class="headerlink" title="黑盒测试和白盒测试是软件测试的两种基本方法，请分别说明各自的优点和缺点"></a>黑盒测试和白盒测试是软件测试的两种基本方法，请分别说明各自的优点和缺点</h3><h3 id="黑盒测试的优点有"><a href="#黑盒测试的优点有" class="headerlink" title="黑盒测试的优点有"></a>黑盒测试的优点有</h3><p>比较简单，不需要了解程序内部的代码及实现；与软件的内部实现无关；从用户角度出发，能很容易的知道用户会用到哪些功能，会遇到哪些问题；基于软件开发文档，所以也能知道软件实现了文档中的哪些功能；在做软件自动化测试时较为方便。</p>
<h3 id="黑盒测试的缺点有"><a href="#黑盒测试的缺点有" class="headerlink" title="黑盒测试的缺点有"></a>黑盒测试的缺点有</h3><p>不可能覆盖所有的代码，覆盖率较低，大概只能达到总代码量的 30%；自动化测试的复用性较低。</p>
<p>白盒测试的优点有：</p>
<p>帮助软件测试人员增大代码的覆盖率，提高代码的质量，发现代码中隐藏的问题。</p>
<h3 id="白盒测试的缺点有"><a href="#白盒测试的缺点有" class="headerlink" title="白盒测试的缺点有"></a>白盒测试的缺点有</h3><p>程序运行会有很多不同的路径，不可能测试所有的运行路径；测试基于代码，只能测试开发人员做的对不对，而不能知道设计的正确与否，可能会漏掉一些功能需求；系统庞大时，测试开销会非常大。</p>
<h2 id="什么是系统瓶颈？"><a href="#什么是系统瓶颈？" class="headerlink" title="什么是系统瓶颈？"></a>什么是系统瓶颈？</h2><p>参考答案：</p>
<p>瓶颈主要是指整个软硬件构成的软件系统某一方面或者几个方面能力不能满足用户的特定业务要求，“特定”是指瓶颈会在某些条件下会出现，因为毕竟大多数系统在投入前。</p>
<p>严格的从技术角度讲，所有的系统都会有瓶颈，因为大多数系统的资源配置不是协调的，例如CPU使用率刚好达到100％时，内存也正好耗尽的系统不是很多见。因此我们讨论系统瓶颈要从应用的角度讨论：关键是看系统能否满足用户需求。在用户极限使用系统的情况下，系统的响应仍然正常，我们可以认为改系统没有瓶颈或者瓶颈不会影响用户工作。</p>
<p>因此我们测试系统瓶颈主要是实现下面两个目的：</p>
<p>-发现“表面”的瓶颈。主要是模拟用户的操作，找出用户极限使用系统时的瓶颈，然后解决瓶颈，这是性能测试的基本目标。</p>
<p>-发现潜在的瓶颈并解决，保证系统的长期稳定性。主要是考虑用户在将来扩展系统或者业务发生变化时，系统能够适应变化。满足用户目前需求的系统不是最好的，我们设计系统的目标是在保证系统整个软件生命周期能够不断适应用户的变化，或者通过简单扩展系统就可以适应新的变化。</p>
<h2 id="手机APP测试"><a href="#手机APP测试" class="headerlink" title="手机APP测试"></a>手机APP测试</h2><p>：主要包括功能、性能测试、稳定性、兼容性、用户测试。</p>
<p>性能测试：CPU占用&#x2F;内存占用 &#x2F;耗电测试 &#x2F;流量消耗测试 &#x2F;安装包大小 &#x2F;加载时间测试 &#x2F;核心功能相应时间 (①启动时间检测：检测App在终端上首次启动时间。 ②内存、CPU耗用检测：检测App在终端上运行时不同时段占用内存、CPU情况。 ③流量耗用检测：检测App在终端上运行时的网络流量消耗情况。 ④电池温度检测：检测App在终端上运行时，对终端的电池温度等性能指标的影响情况 )</p>
<p>兼容性测试：屏幕分辨率 &#x2F;网络状态，状态切换 &#x2F;android版本 &#x2F;安装卸载升级等 &#x2F;权限设置 &#x2F;与其他APP兼容性 (①安装卸载测试：测试App在指定终端上是否可正常安装、正常卸载，准确定位错误原因。 ②遍历测试：自动识别App可执行的功能，在一定时间内遍历App的不同功能界面，通过截图记录操作路径 并输出日志、定位异常现象。 ③运行稳定性测试：类似Monkey的随机性压力测试，测试App运行期的稳定性。 ④UI适配测试：测试App的UI与目标终端的屏幕是否适配，记录是否存在渲染失败、错位、黑边框、黑白屏等现象。)</p>
<p>稳定性测试包括：服务器异常时稳定性 &#x2F;外部事件影响（电话，短信等.  &#x2F;内存是否有溢出或者泄漏 &#x2F;多线程问题 。</p>
<h3 id="什么是并发？在lordrunner中，如何进行并发的测试？集合点失败了会怎么样？"><a href="#什么是并发？在lordrunner中，如何进行并发的测试？集合点失败了会怎么样？" class="headerlink" title="什么是并发？在lordrunner中，如何进行并发的测试？集合点失败了会怎么样？"></a>什么是并发？在lordrunner中，如何进行并发的测试？集合点失败了会怎么样？</h3><p>参考答案：</p>
<p>在同一时间点，支持多个不同的操作。</p>
<p>LoadRunner中提供IP伪装，集合点，配合虚拟用户的设计，以及在多台电脑上设置，可以比较好的模拟真实的并发。</p>
<p>集合点，即是多个用户在某个时刻，某个特定的环境下同时进行虚拟用户的操作的。集合点失败，则集合点的才操作就会取消，测试就不能进行。</p>
<h3 id="详细的描述一个测试活动完整的过程"><a href="#详细的描述一个测试活动完整的过程" class="headerlink" title="详细的描述一个测试活动完整的过程"></a>详细的描述一个测试活动完整的过程</h3><p>答案：（供参考，本答案主要是瀑布模型的做法.</p>
<p>项目经理通过和客户的交流，完成需求文档，由开发人员和测试人员共同完成需求文档的评审，评审的内容包括：需求描述不清楚的地方和可能有明显冲突或者无法实现的功能的地方。项目经理通过综合开发人员，测试人员以及客户的意见，完成项目计划。然后 SQA 进入项目，开始进行统计和跟踪开发人员根据需求文档完成需求分析文档，测试人员进行评审，评审的主要内容包括是否有遗漏或者双方理解不同的地方。测试人员完成测试计划文档，测试计划包括的内容上面有描述。测试人员根据修改好的需求分析文档开始写测试用例，同时开发人员完成概要设计文档，详细设计文档。此两份文档成为测试人员撰写测试用例的补充材料。测试用例完成后，测试和开发需要进行评审。测试人员搭建环境开发人员提交第一个版本，可能存在未完成功能，需要说明。测试人员进行测试，发现 BUG后提交给 BugZilla。开发提交第二个版本，包括 Bug Fix 以及增加了部分功能，测试人员进行测试。重复上面的工作，一般是 3-4 个版本后 BUG 数量减少，达到出货的要求。如果有客户反馈的问题，需要测试人员协助重现并重新测试。</p>
<h3 id="在您以往的工作中，一条软件缺陷（或者叫-Bug-记录都包含了哪些内容？如何提交高质量的软件缺陷（-Bug-记录？"><a href="#在您以往的工作中，一条软件缺陷（或者叫-Bug-记录都包含了哪些内容？如何提交高质量的软件缺陷（-Bug-记录？" class="headerlink" title="在您以往的工作中，一条软件缺陷（或者叫 Bug . 记录都包含了哪些内容？如何提交高质量的软件缺陷（ Bug . 记录？"></a>在您以往的工作中，一条软件缺陷（或者叫 Bug . 记录都包含了哪些内容？如何提交高质量的软件缺陷（ Bug . 记录？</h3><p>在传统的 BugZilla 中，BUG 描述应该包括以下的信息和 BUG 产生对应的软件版本和模块开发的接口人员BUG 的优先级BUG 的严重程度BUG 可能属于的模块，如果不能确认，可以用开发人员来判断BUG 标题，需要清晰的描述现象BUG 描述，需要尽量给出重新 Bug 的步骤BUG 附件中能给出相关的日志和截图。高质量的 BUG 记录就是指很容易理解的 BUG 记录，所以，对于描述的要求高，能提供的信息多且准确，很好的帮助开发人员定位，因此提交高质量的软件缺陷记录需要注意对 BUG 记录的描述质量多且准确。</p>
<h3 id="您认为在测试人员同开发人员的沟通过程中，如何提高沟通的效率和改善沟通的效果？维持测试人员同开发团队中其他成员-良好的人际关系的关键是什么？"><a href="#您认为在测试人员同开发人员的沟通过程中，如何提高沟通的效率和改善沟通的效果？维持测试人员同开发团队中其他成员-良好的人际关系的关键是什么？" class="headerlink" title="您认为在测试人员同开发人员的沟通过程中，如何提高沟通的效率和改善沟通的效果？维持测试人员同开发团队中其他成员 良好的人际关系的关键是什么？"></a>您认为在测试人员同开发人员的沟通过程中，如何提高沟通的效率和改善沟通的效果？维持测试人员同开发团队中其他成员 良好的人际关系的关键是什么？</h3><p>尽量面对面的沟通，其次是能直接通过电话沟通，如果只能通过 Email 等非及时沟通工具的话，强调必须对特性的理解深刻以及能表达清楚。运用一些测试管理工具如 TestDirector 进行管理也是较有效的方法，同时要注意在TestDirector 中对 BUG 有准确的描述。在团队中建立测试人员与开发人员良好沟通中注意以下几点：一真诚二是团队精神三是在专业上有共同语言四是要对事不对人，工作至上当然也可以通过直接指出一些小问题，而不是进入 BUG Tracking System 来增加对方的好感。</p>
<h3 id="软件测试项目从什么时候开始？为什么？"><a href="#软件测试项目从什么时候开始？为什么？" class="headerlink" title="软件测试项目从什么时候开始？为什么？"></a>软件测试项目从什么时候开始？为什么？</h3><p>软件测试应该在需求分析阶段就介入,因为测试的对象不仅仅是程序编码,应该对软件开发过程中产生的所有产品都测试,并且软件缺陷存在放大趋势.缺陷发现的越晚,修复它所花费的成本就越大.</p>
<h3 id="测试结束的标准是什么？"><a href="#测试结束的标准是什么？" class="headerlink" title="测试结束的标准是什么？"></a>测试结束的标准是什么？</h3><p>从微观上来说，在测试计划中定义，比如系统在一定性能下平稳运行 72 小时，目前 BugTracking System 中，本版本中没有一般严重的 BUG，普通 BUG 的数量在 3 以下，BUG 修复率 90%以上等等参数，然后由开发经理，测试经理，项目经理共同签字认同版本 Release。如果说宏观的，则是当这个软件彻底的消失以后，测试就结束了。</p>
<h3 id="您是否了解以往所工作的企业的软件开发过程？如果了解，请试述一个完整的开发过程需要完成哪些工作？分别由哪些不同的角色来完成这些工作？您在以往的测试工作中都曾经具体从事过哪些工作？其中最擅长哪部分工作？"><a href="#您是否了解以往所工作的企业的软件开发过程？如果了解，请试述一个完整的开发过程需要完成哪些工作？分别由哪些不同的角色来完成这些工作？您在以往的测试工作中都曾经具体从事过哪些工作？其中最擅长哪部分工作？" class="headerlink" title="您是否了解以往所工作的企业的软件开发过程？如果了解，请试述一个完整的开发过程需要完成哪些工作？分别由哪些不同的角色来完成这些工作？您在以往的测试工作中都曾经具体从事过哪些工作？其中最擅长哪部分工作？"></a>您是否了解以往所工作的企业的软件开发过程？如果了解，请试述一个完整的开发过程需要完成哪些工作？分别由哪些不同的角色来完成这些工作？您在以往的测试工作中都曾经具体从事过哪些工作？其中最擅长哪部分工作？</h3><p>开发过程—需求调研（需求人员. 、需求分析（需求人员. 、概要设计（设计人员. 、详细设计(设计人员)、编码（开发人员. 测试过程—需求评审、系统测试设计、概要设计评审、集成测试设计、详细设计评审、单元测试设计、测试执行测试工作的整个过程都做过，擅长做测试设计过程决定质量，软件的过程改进正是为了提高软件的质量，将过往的种种经验和教训积累起来。</p>
<p>补充</p>
<p>1.明确测试的目标，增强测试计划的实用性编写软件测试计划得重要目的就是使测试过程能够发现更多的软件缺陷，因此软件测试计划的价值取决于它对帮助管理测试项目，并且找出软件潜在的缺陷。因此，软件测试计划中的测试范围必须高度覆盖功能需求，测试方法必须切实可行，测试工具并且具有较高的实用性，便于使用，生成的测试结果直观、准确</p>
<p>2．坚持“5W”规则，明确内容与过程</p>
<p>“5W”规则指的是“What（做什么. ”、“Why（为什么做. ”、“When（何时做. ”、“Where（在哪里. ”、“How（如何做. ”。利用“5W”规则创建软件测试计划，可以帮助测试团队理解测试的目的（Why. ，明确测试的范围和内容（What. ，确定测试的开始和结束日期（When. ，指出测试的方法和工具（How. ，给出测试文档和软件的存放位置（Where. 。</p>
<p>3．采用评审和更新机制，保证测试计划满足实际需求</p>
<p>测试计划写作完成后，如果没有经过评审，直接发送给测试团队，测试计划内容的可能不准确或遗漏测试内容，或者软件需求变更引起测试范围的增减，而测试计划的内容没有及时更新，误导测试执行人员。分别创建测试计划与测试详细规格、测试用例,应把详细的测试技术指标包含到独立创建的测试详细规格文档，把用于指导测试小组执行测试过程的测试用例放到独立创建的测试用例文档或测试用例管理数据库中。测试计划和测试详细规格、测试用例之间是战略和战术的关系，测试计划主要从宏观上规划测试活动的范围、方法和资源配置，而测试详细规格、测试用例是完成测试任务的具体战术。</p>
<h3 id="请你回答一下性能测试有哪些指标，对一个登录功能做性能测试，有哪些指标，怎么测出可同时处理的最大请求数量"><a href="#请你回答一下性能测试有哪些指标，对一个登录功能做性能测试，有哪些指标，怎么测出可同时处理的最大请求数量" class="headerlink" title="请你回答一下性能测试有哪些指标，对一个登录功能做性能测试，有哪些指标，怎么测出可同时处理的最大请求数量"></a>请你回答一下性能测试有哪些指标，对一个登录功能做性能测试，有哪些指标，怎么测出可同时处理的最大请求数量</h3><p>参考回答：</p>
<p>性能测试常用指标：</p>
<p>从外部看，主要有</p>
<p>1、吞吐量：每秒钟系统能够处理的请求数，任务数</p>
<p>2、响应时间：服务处理一个请求或一个任务的耗时</p>
<p>3、错误率：一批请求中结果出错的请求所占比例</p>
<p>从服务器的角度看，性能测试关注CPU，内存，服务器负载，网络，磁盘ＩＯ</p>
<p>对登录功能做性能测试</p>
<p>单用户登陆的响应界面是否符合预期</p>
<p>单用户登陆时后台请求数量是否过多</p>
<p>高并发场景下用户登录的响应界面是否符合预期</p>
<p>高并发场景下服务端的监控指标是否符合预期</p>
<p>高集合点并发场景下是否存在资源死锁和不合理的资源等待</p>
<p>长时间大量用户连续登录和登出，服务器端是否存在内存泄漏</p>
<p>怎么测出可同时处理的最大请求数量</p>
<p>可以采用性能测试工具(WeTest服务器性能)，该工具是腾讯wetest团队出品，使用起来很简单方便，但测试功能相当强大，能提供10w+以上的并发量，定位性能拐点，测出服务器模型最大并发</p>
<h3 id="什么是兼容型测试？兼容性测试侧重哪些方面？"><a href="#什么是兼容型测试？兼容性测试侧重哪些方面？" class="headerlink" title="什么是兼容型测试？兼容性测试侧重哪些方面？"></a>什么是兼容型测试？兼容性测试侧重哪些方面？</h3><p>兼容测试主要是检查软件在不同的硬件平台、软件平台上是否可以正常的运行，即是通常说的软件的可移植性。兼容的类型，如果细分的话，有平台的兼容，网络兼容，数据库兼容，以及数据格式的兼容。兼容测试的重点是，对兼容环境的分析。通常，是在运行软件的环境不是很确定的情况下，才需要做兼容。根据软件运行的需要，或者根据需求文档，一般能够得出用户会在什么环境下使用该软件，把这些环境整理成表单，就得出做兼容测试的兼容环境了</p>
<p>兼容和配置测试的区别在于，做配置测试通常不是在Clean OS下做测试，而兼容测试多是在Clean OS环境下做的。</p>
<p>补充：做兼容测试的具体步骤：在列好的软硬件环境清单做冒烟测试，还是每一步都测试。测出不兼容，怎么和开发沟通，开发面对这些不兼容需要做什么。如果修复成本很高，怎么和产品经理沟通。和谁确认表单</p>
<h3 id="软件测试项目从什么时候开始，？为什么？"><a href="#软件测试项目从什么时候开始，？为什么？" class="headerlink" title="软件测试项目从什么时候开始，？为什么？"></a>软件测试项目从什么时候开始，？为什么？</h3><p>软件测试应该在需求分析阶段就介入,因为测试的对象不仅仅是程序编码,应该对软件开发</p>
<p>过程中产生的所有产品都测试,并且软件缺陷存在放大趋势.缺陷发现的越晚,修复它所花费</p>
<p>的成本就越大.</p>
<h2 id="二、测试实战面试题"><a href="#二、测试实战面试题" class="headerlink" title="二、测试实战面试题"></a>二、测试实战面试题</h2><h3 id="我现在有个程序，发现在Windows上运行的很慢，怎么判别是程序存在问题还是软硬件系统存在问题"><a href="#我现在有个程序，发现在Windows上运行的很慢，怎么判别是程序存在问题还是软硬件系统存在问题" class="headerlink" title="我现在有个程序，发现在Windows上运行的很慢，怎么判别是程序存在问题还是软硬件系统存在问题"></a>我现在有个程序，发现在Windows上运行的很慢，怎么判别是程序存在问题还是软硬件系统存在问题</h3><p>1、检查系统是否有中毒的特征</p>
<p>2、检查软件&#x2F;硬件的配置是否符合软件的推荐标准</p>
<p>3、确认当前的系统是否独立，即没有对外提供什么消耗CPU资源的服务</p>
<p>4、如果是C&#x2F;S或者B&#x2F;S结构的软件，需要检查是不是因为与服务器的连接有问题，或者访问有问题造成</p>
<p>5、在系统没有任何负载的情况下，查看性能监视器，确认应用程序对CPU&#x2F;内存的访问情况</p>
<p>补充：每一步该怎么实现，需要用到什么技术</p>
<h3 id="一个程序有n个变量采用边界值分析可以产生几个测试用例"><a href="#一个程序有n个变量采用边界值分析可以产生几个测试用例" class="headerlink" title="一个程序有n个变量采用边界值分析可以产生几个测试用例"></a>一个程序有n个变量采用边界值分析可以产生几个测试用例</h3><p>4n+1</p>
<h3 id="请设计一个关于ATM自动取款机的测试用例"><a href="#请设计一个关于ATM自动取款机的测试用例" class="headerlink" title="请设计一个关于ATM自动取款机的测试用例"></a>请设计一个关于ATM自动取款机的测试用例</h3><ol>
<li>功能</li>
</ol>
<p>a)ATM所识别卡的类型；<br>b)密码验证(身份登陆、是否为掩码、输入错误密码时是否提示，连续三次错误吞卡等)；<br>c)取款功能<br>    - 金额多少的限制，单次最大最小提取金额、每天最大提取金额等<br>    - 取款币种的不同，如人民币、美元、欧元等<br>d)是否提示客户操作完成后，打印相关操作信息；<br>e)查询功能是否正常；<br>f)转账功能是否正常；<br>g)是否提示客户操作完成后，取回客户卡；</p>
<ol start="2">
<li>性能</li>
</ol>
<p>a)是否有自动吞卡：非法客户密码错误客户规定时间内未完成相关操作功能的客户。（如果有，有无报警功能(保密报警).<br>b)平均无故障时间，平均故障修复时间，输入密码后验证时间，出钞票时间，查询余额等待时间。</p>
<ol start="3">
<li>易用性</li>
</ol>
<p>a)ATM各个操作功能(硬件)是否正常、易懂；</p>
<p>b)ATM的界面显示是否友好；</p>
<p>c)ATM是否支持英文操作；</p>
<p>d)ATM是否存在异常（断电、黑客入侵. 有自动保护（报警. 功能；</p>
<h3 id="如何测试一个-纸杯？"><a href="#如何测试一个-纸杯？" class="headerlink" title="如何测试一个 纸杯？"></a>如何测试一个 纸杯？</h3><p>功能度：用水杯装水看漏不漏；水能不能被喝到</p>
<p>安全性：杯子有没有毒或细菌</p>
<p>可靠性：杯子从不同高度落下的损坏程度</p>
<p>可移植性：杯子在不同的地方、温度等环境下是否都可以正常使用</p>
<p>兼容性：杯子是否能够容纳果汁、白水、酒精、汽油等</p>
<p>易用性：杯子是否烫手、是否有防滑措施、是否方便饮用</p>
<p>用户文档：使用手册是否对杯子的用法、限制、使用条件等有详细描述</p>
<p>疲劳测试：将杯子盛上水（案例一. 放 24 小时检查泄漏时间和情况；盛上汽油（案例二.</p>
<p>放 24 小时检查泄漏时间和情况等</p>
<p>压力测试：用根针并在针上面不断加重量，看压强多大时会穿透</p>
<h2 id="我手上这支笔，请你根据这支笔设计测试用例"><a href="#我手上这支笔，请你根据这支笔设计测试用例" class="headerlink" title="我手上这支笔，请你根据这支笔设计测试用例"></a>我手上这支笔，请你根据这支笔设计测试用例</h2><p>首先我要测它的外观、颜色是否符合要求、所占的空间是多大、是否环保、接下来测它的质量、这支笔是否能够写字流畅、写出的自得颜色是否符合要求、能使用多长时间等</p>
<h3 id="测试手机开机键"><a href="#测试手机开机键" class="headerlink" title="测试手机开机键"></a>测试手机开机键</h3><p>功能测试：按下开机键，屏幕能否亮起</p>
<p>性能测试：按下开机键，屏幕能否在规定时间内亮起</p>
<p>压力测试：连续多次按下开机键，观察屏幕是否能一直亮起，到多久时间失灵</p>
<p>健壮性测试：给定一个中了病毒的手机或者是淘汰许久的老机子，安歇开机键观察屏幕能否亮起</p>
<p>可靠性测试：连续按下开机键有限次数，比如1万次，记录屏幕未亮起的次数</p>
<p>可用性测试：开机键按下费不费力，开机键的形状设计是否贴合手指，开机键的位置设计是否方便</p>
<h3 id="如何回答登录功能怎么进行测试？"><a href="#如何回答登录功能怎么进行测试？" class="headerlink" title="如何回答登录功能怎么进行测试？"></a>如何回答登录功能怎么进行测试？</h3><p>首先，进行界面测试。</p>
<p>查看界面上的所有元素是否齐全；</p>
<p>没有输入内容时，是否有相应的提示语；</p>
<p>验证码是否能够显示；</p>
<p>移动鼠标，【登陆】按钮默认不能点击；</p>
<p>【忘记密码】是否有个小问号“？”（其他都有. ；</p>
<p>第二，进行功能测试。</p>
<p>输入正确的用户名、密码、验证码，点【登陆】能登陆；</p>
<p>输入正确的用户名、错误的密码、正确的验证码，提示用户名或密码错误；</p>
<p>输入错误的用户名、正确的验证码，提示用户名或密码错误；</p>
<p>输入正确的用户名、密码，错误的验证码，提示验证码错误；</p>
<p>输入不符合规则的手机号或者邮箱应该提示错误；</p>
<p>页面长时间不登陆和操作，验证码会不会过期；</p>
<p>点【记住密码】，登录后退出，再次登陆是不是可以不输入密码；</p>
<p>点【忘记密码】能够跳转到密码设置页面（至于是什么不用管，就是能不能跳转.</p>
<p>只点击验证码图案，验证码能不能刷新；</p>
<p>页面刷新，验证码图案能不能刷新；</p>
<p>输入栏是否设置快速删除按钮；</p>
<p>用户名和密码是否大小写敏感；</p>
<p>用户名和密码前后有空格的处理；</p>
<p>登陆成功，是否有记住密码功能；</p>
<p>登陆失败后，不能记录密码的功能；</p>
<p>新用户第一次登陆成功，是否有修改密码提示；</p>
<p>用户登录过程中log中是否有个人信息明文打印；</p>
<p>是否支持第三方登陆；</p>
<p>刷新页面时是否会刷新验证码；</p>
<p>输入密码的时候，大写键盘开启的时候要有提示信息 ；</p>
<p>不同级别的用户，比如管理员用户和普通用户，登录系统后的权限是否正确；</p>
<p>第三、业务安全测试。</p>
<p>有没有登陆错误次数的限制；</p>
<p>每次登陆错误之后有没有限制再次登陆的时间间隔；</p>
<p>是否支持一个账号多地登陆；</p>
<p>不同机型登陆，异地登陆是否有提醒 ；</p>
<p>不登录的情况下，在浏览器中直接输入登录后的URL地址，验证是否会重新定向到用户登录界面；</p>
<p>第四、兼容性测试。</p>
<p>在相同浏览器的不同版本上打开登录页面，效果是否一致；在不同浏览器上打开登录页面，效果是否一致；在不同操作系统的不同浏览器打开登录页面，效果是否一致；在不同的屏幕分辨率下打开登录页面，效果是否一致；</p>
<p>第五、代码安全性测试。</p>
<p>用户输入登录信息登陆时，个人信息是不是会显示在浏览器地址栏；</p>
<p>用户登陆的时候，通过抓包工具抓数据，密码是否加密；</p>
<p>查看页面源代码，验证码是否直接显示在代码中；</p>
<p>密码在后台储存时是否加密；</p>
<p>是否可以使用登录的API发送登录请求，并绕开验证码校验；</p>
<p>用户名和密码的输入框中分别输入典型的“SQL注入攻击”字符串，验证系统的返回页面；</p>
<p>用户名和密码的输入框中分别输入典型的“XSS跨站脚本攻击”字符串，验证系统行为是否被篡改；</p>
<p>第六、页面性能测试。</p>
<p>单用户登录的响应时间是否小于3秒；</p>
<p>通过工具向登录页发起大量请求，查看页面响应时间的变化；</p>
<p>通过工具对登陆功能进行并发测试；通过工具向登录页发起大量请求，查看页面何时崩溃；</p>
<p>通过工具向登录页发起大量请求，查看页面崩溃后有没有良好的提示信息；</p>
<p>通过工具向登录页发起大量请求，查看页面崩溃后多长时间能够恢复服务；</p>
<p>弱网，不同网速时登陆的时间，网络切换和网络延迟时登陆界面是否正常；</p>
<p>最后、易用性测试。</p>
<p>页面是否美观；</p>
<p>功能是否都可以使用；</p>
<p>页面速度快不快；</p>
<p>页面元素加载是否耗费网络流量；</p>
<p>能不能第三方登陆；</p>
<p>为什么不使用手机验证码登陆；</p>
<p>输入框能否可以以Tab键切换。</p>
<h3 id="如何回答京东购物车功能怎么进行测试？"><a href="#如何回答京东购物车功能怎么进行测试？" class="headerlink" title="如何回答京东购物车功能怎么进行测试？"></a>如何回答京东购物车功能怎么进行测试？</h3><p>1.功能测试</p>
<p>a. 、未登录时：</p>
<p>将商品加入购物车，页面跳转到登录页面，登录成功后购物车数量增加。</p>
<p>b. 、登录后：</p>
<p>所有链接是否跳转正确；</p>
<p>商品是否可以成功加入购物车；</p>
<p>没有限购要求的商品，添加数量能不能超过库存数；</p>
<p>购物车商品总数是否有限制；</p>
<p>商品总数统计是否正确；</p>
<p>全选功能是否可用；</p>
<p>删除功能是否可用；</p>
<p>删除功能是否有提示；</p>
<p>价格总计是否正确；</p>
<p>商品文字太长时是否显示完整；</p>
<p>购物车中下架的商品是否有标识，是否还能支付；</p>
<p>新加入购物车商品排序（添加购物车中存在的店铺的商品和购物车中不存在的店铺的商品. ；</p>
<p>是否支持快TAB、ENTER等快捷键；</p>
<p>商品删除后商品总数是否减少；</p>
<p>收藏功能是否可用；</p>
<p>账号退出后，购物车添加的内容是否还在；</p>
<p>购物车结算功能是否可用。</p>
<p>限购商品按照规则购买完成后，还能不能再次添加购物车并购买；</p>
<h3 id="2-兼容性测试"><a href="#2-兼容性测试" class="headerlink" title="2.兼容性测试"></a>2.兼容性测试</h3><p>BS架构：不同浏览器测试，比如：IE，火狐，谷歌，360这些。</p>
<p>APP：在主流的不同类型，不同分辨率，不同操作系统的手机上测试，华为，vivo，oppo等</p>
<h3 id="3-用户体验测试"><a href="#3-用户体验测试" class="headerlink" title="3.用户体验测试"></a>3.用户体验测试</h3><p>删除商品是否有提示；</p>
<p>是否支持快捷键功能；</p>
<p>是否有回到顶部的功能；</p>
<p>商品过多时结算按钮是否可以浮动显示；</p>
<p>购物车有多个商品时，能不能只对单个商品结算；</p>
<p>界面布局、排版是否合理；</p>
<p>文字是否显示清晰；</p>
<p>不同卖家的商品是否区分明显。</p>
<h3 id="4-性能测试"><a href="#4-性能测试" class="headerlink" title="4.性能测试"></a>4.性能测试</h3><p>打开购物车页面要多长时间</p>
<h3 id="支付流程测试"><a href="#支付流程测试" class="headerlink" title="支付流程测试"></a>支付流程测试</h3><p>功能测试。</p>
<p>用等价类和边界值，判断支付的金额；</p>
<p>如果没有登陆能否支付，支付成功后是否可以正常跳转；</p>
<p>支付方式是否支持扫码支付，第三方平台支付（支付包，云网等. ，语音支付，指纹支付；</p>
<p>支付时是否需要身份验证，支付后有无手机短信提示，是否可以找他人代付；</p>
<p>用边界值法有无支付额度限制，余额不足时有无提示，支付时是否是动态加密支付；</p>
<p>待支付状态：订单是否可以正常支付；是否可以取消；有相同订单是否可以支付两次；</p>
<p>是否可以扫码支付，输入错误的密码会怎样显示，有无错误次数限制；</p>
<p>若支持扫码支付，二维码是否支持支付包和微信扫码，若两人同时扫描怎么处理；</p>
<p>有无最小支付金额限制，无意义的支付金额0，重复支付如何处理；</p>
<p>如果支付包含优惠金额，该怎么处理优惠额度；</p>
<p>性能测试</p>
<p>弱网，无网时是否可以支付；</p>
<p>退款到账时间，耗电量的多少；</p>
<p>带负载情况下的响应时间和吞吐率，在某个时间段内同时访问系统的用户数量 ；</p>
<p>压力测试</p>
<p>多人同时付款；</p>
<p>界面测试；</p>
<p>支付界面有无错别字，排版是否合理，颜色搭配是否合理；</p>
<p>兼容性测试</p>
<p>是否可以跨平台，不同电脑机型下显示有无区别；</p>
<p>安全性测试；</p>
<p>若支付不成功是否原路退款，若支付成功，有无支付信息提示；</p>
<p>用fiddler抓包尝试修改价格，对订单金额有无效验；</p>
<p>直接输入需要权限的页面地址可用访问；</p>
<p>接口测试</p>
<p>第三方平台支付</p>
<h3 id="对于有系统大量并发访问，你会如何做测试，有什么建议"><a href="#对于有系统大量并发访问，你会如何做测试，有什么建议" class="headerlink" title="对于有系统大量并发访问，你会如何做测试，有什么建议"></a>对于有系统大量并发访问，你会如何做测试，有什么建议</h3><p>如何做高并发系统的测试，一般而言，整体的测试策略是：先针对部分系统进行性能测试及压力测试，得到各部分的峰值处理性能，再模拟整体流程测试，重点测试整体业务流程以及业务预期负荷，着重测试以下几点：</p>
<ol>
<li>不同省份，不同运营商CDN节点性能，可采用典型压力测试方案</li>
<li>核心机房BGP网络带宽，此部分重点在于测试各运行商的BGP网络可靠性，实际速率，一般采用smokeping,lxChariot等工具</li>
<li>各类硬件设备性能，一般采用专业的网络设备测试工具</li>
<li>各类服务器并发性能，分布式处理能力，可采用压力测试方案工具</li>
<li>业务系统性能，采用业务系统压力测试方案</li>
<li>数据库处理性能，这部分需要结合业务系统进行测试，以获取核心业务场景下的数据库的TPS&#x2F;QPS，</li>
<li>如果有支付功能，需要进行支付渠道接口及分流测试，此部分相对而言可能是最大的瓶颈所在，此外还涉及备份方案，容灾方案，业务降级方案的测试。</li>
</ol>
<h3 id="请对这个系统做出测试用例：一个系统，多个摄像头，抓拍车牌，识别车牌，上传网上，网上展示"><a href="#请对这个系统做出测试用例：一个系统，多个摄像头，抓拍车牌，识别车牌，上传网上，网上展示" class="headerlink" title="请对这个系统做出测试用例：一个系统，多个摄像头，抓拍车牌，识别车牌，上传网上，网上展示"></a>请对这个系统做出测试用例：一个系统，多个摄像头，抓拍车牌，识别车牌，上传网上，网上展示</h3><p>功能：</p>
<ol>
<li>每个摄像头都能抓拍车牌；</li>
<li>每个摄像头抓拍到的车牌能正常交给系统处理；</li>
<li>系统能够正确识别车牌；</li>
<li>系统能够将识别出的车牌上传；</li>
<li>上传至网络的车牌能够正常展示出来；</li>
</ol>
<h4 id="一、功能测试"><a href="#一、功能测试" class="headerlink" title="一、功能测试"></a>一、功能测试</h4><ol>
<li>使用正常的车牌，保持车牌静止，检查每个摄像头是否能抓拍车牌；</li>
<li>使用类似非车牌的写有字的纸板，检查每个摄像头是否抓拍；</li>
<li>使用正常的车牌，保持车牌较高速移动，检查每个摄像头是否能抓拍车牌；</li>
<li>在多种情况下检查每个摄像头抓拍到的车牌能否正常交给系统处理，如临时断电、断网后能否正常将数据交给系统；</li>
<li>使用抓拍到的正常的车牌，交由系统处理，检查系统能否识别车牌；</li>
<li>使用非车牌的其他图片，交由系统处理，检查系统能否识别；</li>
<li>在多种情况下检查系统能否将正常识别出的车牌进行上传，如临时断电、断网后未上传数据是否能继续上传；</li>
<li>构造非车牌的其他内容的数据，检查系统能否将异常内容进行上传；</li>
<li>检查上传至网络的车牌能否正常展示出来；<br>10 .上传非车牌的其他内容的数据，检查能否正常显示出来。</li>
</ol>
<h4 id="二、性能测试"><a href="#二、性能测试" class="headerlink" title="二、性能测试"></a>二、性能测试</h4><ol>
<li>同时向一个摄像头展示多个静止的车牌，检查摄像头能否抓拍到多个车牌；</li>
<li>同时向一个摄像头展示多个较高速运动的车牌，检查摄像头能否抓拍到多个车牌；</li>
<li>抓拍后，检查系统识别车牌的时间是否在需求要求的时间内；</li>
<li>模拟大量抓拍照片同时交由系统处理，检查一定压力下系统能否正常识别车牌；</li>
<li>模拟大量车牌同时上传，检查一定压力下能否上传成功。</li>
</ol>
<h4 id="三、安全性测试"><a href="#三、安全性测试" class="headerlink" title="三、安全性测试"></a>三、安全性测试</h4><ol>
<li>检查是否能够通过给车牌加装饰物等方法，使摄像头无法抓拍或抓拍后系统无法正常识别车牌。</li>
</ol>
<h3 id="请你说一说PC网络故障，以及如何排除障碍"><a href="#请你说一说PC网络故障，以及如何排除障碍" class="headerlink" title="请你说一说PC网络故障，以及如何排除障碍"></a>请你说一说PC网络故障，以及如何排除障碍</h3><p>(1)首先是排除接触故障，即确保你的网线是可以正常使用的。然后禁用网卡后再启用，排除偶然故障。打开网络和共享中心窗口，单击窗口左上侧“更改适配器设置”右击其中的“本地连接“或”无线网络连接”，单击快捷菜单中的“禁用”命令，即可禁用所选网络。接下来重启网络，只需右击后单击启用即可。</p>
<p>(2)使用ipconfig查看计算机的上网参数</p>
<p>1、单击“开始|所有程序|附件|命令提示符“，打开命令提示符窗口</p>
<p>2、输入ipconfig，按Enter确认，可以看到机器的配置信息，输入ipconfig&#x2F;all,可以看到IP地址和网卡物理地址等相关网络详细信息。</p>
<p>(3)使用ping命令测试网络的连通性，定位故障范围</p>
<p>在命令提示符窗口中输入”ping 127.0.0.1“，数据显示本机分别发送和接受了4个数据包，丢包率为零，可以判断本机网络协议工作正常，如显示”请求超时“，则表明本机网卡的安装或TCP&#x2F;IP协议有问题，接下来就应该检查网卡和TCP&#x2F;IP协议，卸载后重装即可。</p>
<p>(4)ping本机IP</p>
<p>在确认127.0.0.1地址能被ping通的情况下，继续使用ping命令测试本机的IP地址能否被ping通，如不能，说明本机的网卡驱动程序不正确，或者网卡与网线之间连接有故障，也有可能是本地的路由表面收到了破坏，此时应检查本机网卡的状态是否为已连接，网络参数是否设置正确，如果正确可是不能ping通，就应该重新安装网卡驱动程序。丢失率为零，可以判断网卡安装配置没有问题，工作正常。</p>
<p>(5)ping网关</p>
<p>网关地址能被ping通的话，表明本机网络连接以及正常，如果命令不成功，可能是网关设备自身存在问题，也可能是本机上网参数设置有误，检查网络参数。</p>
<h3 id="微信红包"><a href="#微信红包" class="headerlink" title="微信红包"></a>微信红包</h3><h4 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h4><ol>
<li>在红包钱数，和红包个数的输入框中只能输入数字</li>
<li>红包里最多和最少可以输入的钱数 200 0.01</li>
<li>拼手气红包最多可以发多少个红包 100 3.1超过最大拼手气红包的个数是否有提醒</li>
<li>当红包钱数超过最大范围是不是有对应的提示</li>
<li>当发送的红包个数超过最大范围是不是有提示</li>
<li>当余额不足时，红包发送失败</li>
<li>在红包描述里是否可以输入汉字，英文，符号，表情，纯数字，汉字英语符号， 7.1是否可以输入它们的混合搭配</li>
<li>输入红包钱数是不是只能输入数字</li>
<li>红包描述里许多能有多少个字符 10个</li>
<li>红包描述，金额，红包个数框里是否支持复制粘贴操作</li>
<li>红包描述里的表情可以删除</li>
<li>发送的红包别人是否可以领取 13.1发的红包自己可不可以领取 2人</li>
<li>24小时内没有领取的红包是否可以退回到原来的账户 14.1 超过24小时没有领取的红包，是否还可以领取</li>
<li>用户是否可以多次抢一个红包</li>
<li>发红包的人是否还可以抢红包 多人</li>
<li>红包的金额里的小数位数是否有限制</li>
<li>可以按返回键，取消发红包</li>
<li>断网时，无法抢红包</li>
<li>可不可以自己选择支付方式</li>
<li>余额不足时，会不会自动匹配支付方式</li>
<li>在发红包界面能否看到以前的收发红包的记录</li>
<li>红包记录里的信息与实际收发红包记录是否匹配</li>
<li>支付时可以密码支付也可以指纹支付</li>
<li>如果直接输入小数点，那么小数点之前应该有个0</li>
<li>支付成功后，退回聊天界面</li>
<li>发红包金额和收到的红包金额应该匹配</li>
<li>是否可以连续多次发红包</li>
<li>输入钱数为0，”塞钱进红包”置灰</li>
</ol>
<h4 id="性能"><a href="#性能" class="headerlink" title="性能"></a>性能</h4><ol start="29">
<li>弱网时抢红包，发红包时间</li>
<li>不同网速时抢红包，发红包的时间</li>
<li>发红包和收红包成功后的跳转时间</li>
<li>收发红包的耗电量</li>
<li>退款到账的时间</li>
</ol>
<h4 id="兼容"><a href="#兼容" class="headerlink" title="兼容"></a>兼容</h4><ol start="34">
<li>苹果，安卓是否都可以发送红包</li>
<li>电脑端可以抢微信红包</li>
</ol>
<h4 id="界面"><a href="#界面" class="headerlink" title="界面"></a>界面</h4><ol start="36">
<li>发红包界面没有错别字</li>
<li>抢完红包界面没有错别字</li>
<li>发红包和收红包界面排版合理，</li>
<li>发红包和收到红包界面颜色搭配合理</li>
</ol>
<h4 id="安全"><a href="#安全" class="headerlink" title="安全"></a>安全</h4><ol start="40">
<li>对方微信号异地登录，是否会有提醒 2人</li>
<li>红包被领取以后，发送红包人的金额会减少，收红包金额会增加</li>
<li>发送红包失败，余额和银行卡里的钱数不会少</li>
<li>红包发送成功，是否会收到微信支付的通知</li>
</ol>
<h4 id="易用性-有点重复"><a href="#易用性-有点重复" class="headerlink" title="易用性(有点重复)"></a>易用性(有点重复)</h4><ol start="44">
<li>红包描述，可以通过语音输入</li>
<li>可以指纹支付也可以密码支付</li>
</ol>
<h4 id="微信发朋友圈点赞"><a href="#微信发朋友圈点赞" class="headerlink" title="微信发朋友圈点赞"></a>微信发朋友圈点赞</h4><p><strong>功能测试：</strong></p>
<p>点赞某条朋友圈，验证是否成功</p>
<p><strong>接口测试：</strong></p>
<p>点赞朋友圈，验证朋友能否收到提示信息</p>
<p><strong>性能测试:</strong></p>
<p>点赞朋友圈，是否在规定时间显示结果，是否在规定时间在朋友手机上进行提示</p>
<p><strong>兼容性测试:</strong></p>
<p>在不同的终端比如ipad,手机上点赞朋友圈，验证是否成功</p>
<h3 id="如何对淘宝搜索框进行测试"><a href="#如何对淘宝搜索框进行测试" class="headerlink" title="如何对淘宝搜索框进行测试"></a>如何对淘宝搜索框进行测试</h3><h4 id="一-功能测试"><a href="#一-功能测试" class="headerlink" title="一, 功能测试"></a>一, 功能测试</h4><ol>
<li><p>输入关键字，查看: 返回结果是否准确，返回的文本长度需限制</p>
<ol>
<li>输入可查到结果的正常关键字、词、语句，检索到的内容、链接正确性；</li>
<li>输入不可查到结果的关键字、词、语句；</li>
<li>输入一些特殊的内容，如空、特殊符、标点符、极限值等，可引入等价类划分的方法等；</li>
</ol>
</li>
<li><p>结果显示：标题，卖家，销售量，单行&#x2F;多行，是否有图片</p>
</li>
<li><p>结果排序：价格 销量 评价 综合</p>
</li>
<li><p>返回结果庞大时，限制第一页的现实量，需支持翻页</p>
</li>
<li><p>多选项搜索：关键字 品牌 产地 价格区间 是否天猫 是否全国购</p>
</li>
<li><p>是否支持模糊搜索，支持通配符的查询</p>
</li>
<li><p>网速慢的情况下的搜索</p>
</li>
<li><p>搜索结果为空的情况</p>
</li>
<li><p>未登录情况和登录情况下的搜索(登录情况下 存储用户搜索的关键字&#x2F;搜索习惯)</p>
</li>
</ol>
<h4 id="二-性能测试"><a href="#二-性能测试" class="headerlink" title="二.性能测试"></a>二.性能测试</h4><ol>
<li>压力测试：在不同发用户数压力下的表现(评价指标如响应时间等)</li>
<li>负载测试：看极限能承载多大的用户量同时正常使用</li>
<li>稳定性测试：常规压力下能保持多久持续稳定运行</li>
<li>内存测试：有无内存泄漏现象</li>
<li>大数据量测试：如模拟从庞大的海量数据中搜索结果、或搜索出海量的结果后列示出来，看表现如何等等。</li>
</ol>
<h4 id="三-易用性"><a href="#三-易用性" class="headerlink" title="三. 易用性"></a>三. 易用性</h4><p>交互界面的设计是否便于、易于使用</p>
<ol>
<li>依据不同的查询结果会有相关的人性化提示，查不到时告知？查到时统计条数并告知？有疑似输入条件错误时提示可能正确的输入项等等处理；</li>
<li>查询出的结果罗列有序，如按点击率或其他排序规则，确保每次查询出的结果位置按规则列示方便定位，显示字体、字号、色彩便于识别等等；</li>
<li>标题查询、全文检索、模糊查询、容错查询、多关键字组织查询（空格间格开. 等实用的检索方式是否正常？</li>
<li>输入搜索条件的控件风格设计、位置摆放是否醒目便于使用者注意到，有否快照等快捷查看方式等人性化设计？</li>
</ol>
<h4 id="四-兼容性"><a href="#四-兼容性" class="headerlink" title="四. 兼容性"></a>四. 兼容性</h4><ol>
<li><code>WINDOWS</code>&#x2F;<code>LINUX</code>&#x2F;<code>UNIX</code>等各类操作系统下及各版本条件下的应用</li>
<li>IE&#x2F;FIREFOX&#x2F;GOOGLE&#x2F;360&#x2F;QQ等各类浏览器下及各版本条件下、各种显示分辨率条件下的应用</li>
<li><code>SQL</code>&#x2F;<code>ORACLE</code>&#x2F;<code>DB2</code>&#x2F;<code>MYSQL</code>等各类数据库存储情况下的兼容性测试</li>
<li>简体中文、繁体中文、英文等各类语种软件平台下的兼容性测试</li>
<li><code>IPHONE</code>&#x2F;<code>IPAD</code>、<code>Android</code>等各类移动应用平台下的兼容性测试</li>
<li>与各相关的监控程序的兼容性测试，如输入法、杀毒、监控、防火墙等工具同时使用</li>
</ol>
<h4 id="五-安全性"><a href="#五-安全性" class="headerlink" title="五. 安全性"></a>五. 安全性</h4><ol>
<li>被删除、加密、授权的数据，不允许被SQL注入等攻击方式查出来的，是否有安全控制设计；</li>
<li>录入一些数据库查询的保留字符，如单引号、%等等，造成查询SQL拼接出的语句产生漏洞，如可以查出所有数据等等，这方面要有一些黑客攻击的思想并引入一些工具和技术，如爬网等。</li>
<li>通过白盒测试技术，检查一下在程序设计上是否存在安全方面的隐患；</li>
<li>对涉及国家安全、法律禁止的内容是否进行了相关的过滤和控制；</li>
</ol>
<h3 id="就linux下的CP命令设计测试用例"><a href="#就linux下的CP命令设计测试用例" class="headerlink" title="就linux下的CP命令设计测试用例"></a>就linux下的CP命令设计测试用例</h3><p>功能</p>
<p>拷贝的文件</p>
<ol>
<li>大小：0k, 1k, 10k, 100k, 1000k…</li>
<li>类型：二进制文件、文本文件、mp3、avi、压缩文件…</li>
</ol>
<p>文件源目录</p>
<ol>
<li>文件中包含各种类型的文件</li>
<li>目录深度为0，1，2，3…</li>
</ol>
<p>文件目标目录</p>
<ol>
<li>目标目录中存在与源文件同名同类型的文件</li>
<li>目标目录中存在与源文件同名不同类型的文件</li>
<li>目标目录中存在与源文件不同名同类型的文件</li>
<li>目标目录中存在与源文件不同名不同类型的文件</li>
</ol>
<p>异常</p>
<p>参数异常</p>
<ol>
<li>包含特殊字符</li>
<li>参数长度超过限制</li>
<li>源目录不存在</li>
<li>目标目录不存在</li>
</ol>
<p>文件异常</p>
<ol>
<li>文件没有拷贝权限</li>
<li>非法的文件格式和内容</li>
</ol>
<p>存储介质异常</p>
<ol>
<li>存储介质由损坏</li>
<li>拷贝前存储介质已满</li>
<li>拷贝中存储介质存满</li>
</ol>
<p>执行过程异常</p>
<ol>
<li>拷贝过程中删除源文件</li>
<li>拷贝过程中删除目标文件</li>
</ol>
<p>性能</p>
<ol>
<li>拷贝大文件</li>
<li>拷贝源目录中存在大量小文件</li>
<li>跨文件系统拷贝</li>
<li>跨存储介质拷贝</li>
<li>并发执行拷贝</li>
</ol>
<p>关注性能点：拷贝完成时间，CPU，内存，磁盘IO</p>
<h3 id="请问如果用户点击微博的关注图标但是app上面没有反应，应该怎么排查这个问题"><a href="#请问如果用户点击微博的关注图标但是app上面没有反应，应该怎么排查这个问题" class="headerlink" title="请问如果用户点击微博的关注图标但是app上面没有反应，应该怎么排查这个问题"></a>请问如果用户点击微博的关注图标但是app上面没有反应，应该怎么排查这个问题</h3><p>是否手机出现故障，是否手机缓存过多造成内存不够用</p>
<p>是否手机网络连接不稳定(弱网&#x2F;无网)，若是，有无网络差提示</p>
<p>是否手机内存溢出(关注人数达上限否)</p>
<p>是否是版本问题或者是安装包问题（更新系统，重新安装安装包)</p>
<h3 id="现有一个学生标准化考试批阅试卷-产生成绩报告的程序。其规格说明如下-程序的输入文件由一些有80个字符的记录组成-如右图所示，所有记录分为3组"><a href="#现有一个学生标准化考试批阅试卷-产生成绩报告的程序。其规格说明如下-程序的输入文件由一些有80个字符的记录组成-如右图所示，所有记录分为3组" class="headerlink" title="现有一个学生标准化考试批阅试卷,产生成绩报告的程序。其规格说明如下:程序的输入文件由一些有80个字符的记录组成,如右图所示，所有记录分为3组"></a>现有一个学生标准化考试批阅试卷,产生成绩报告的程序。其规格说明如下:程序的输入文件由一些有80个字符的记录组成,如右图所示，所有记录分为3组</h3><p>标题：这一组只有一个记录，其内容为输出成绩报告的名字。</p>
<p>试卷各题标准答案记录：每个记录均在第80个字符处标以数字”2”。该组的第一个记录的第1至第3个字符为题目编号(取值为1一999) 。第10至第59个字符给出第1至第50题的答案（每个合法字符表示一个答案. 。该组的第2，第3……个记录相应为第51至第100，第101至第150，…题的答案。</p>
<p>每个学生的答卷描述：该组中每个记录的第80个字符均为数字”3”。每个学生的答卷在若干个记录中给出。如甲的首记录第1至第9字符给出学生姓名及学号，第10至第59字符列出的是甲所做的第1至第50题的答案。若试题数超过50，则第2，第3……纪录分别给出他的第51至第100，第101至第150……题的解答。然后是学生乙的答卷记录。</p>
<p>学生人数不超过200，试题数不超过999。</p>
<p>程序的输出有4个报告：</p>
<p>a)按学号排列的成绩单，列出每个学生的成绩、名次。</p>
<p>b)按学生成绩排序的成绩单。</p>
<p>c)平均分数及标准偏差的报告。</p>
<p>d)试题分析报告。按试题号排序，列出各题学生答对的百分比。</p>
<p>分别考虑输入条件和输出条件，以及边界条件。给出右表所示的输入条件及相应的测试用例。</p>
<h2 id="三、基础知识点"><a href="#三、基础知识点" class="headerlink" title="三、基础知识点"></a>三、基础知识点</h2><h3 id="什么是桩模块？什么是驱动模块？"><a href="#什么是桩模块？什么是驱动模块？" class="headerlink" title="什么是桩模块？什么是驱动模块？"></a>什么是桩模块？什么是驱动模块？</h3><p>桩模块：被测模块调用模块</p>
<p>驱动模块 调用被测模块</p>
<h3 id="什么是扇入？什么是扇出？"><a href="#什么是扇入？什么是扇出？" class="headerlink" title="什么是扇入？什么是扇出？"></a>什么是扇入？什么是扇出？</h3><p>扇入：被调次数，扇出：调其它模块数目</p>
<p><strong>8020原则：在需求分析开始到集成测试阶段引入测试手段，能发现所有缺陷的80%，系统测试阶段发现16%，在运行维护阶段经过长时间大量运行软件后，能够发现4%。起源于经济学。</strong></p>
<h3 id="什么是耦合？什么是内聚？"><a href="#什么是耦合？什么是内聚？" class="headerlink" title="什么是耦合？什么是内聚？"></a>什么是耦合？什么是内聚？</h3><p>耦合：对一个软件结构内各个模块之间互连程度的度量。</p>
<p>内聚：一个模块内各个元素彼此结合的紧密程度。强内聚，松耦合。</p>
<p>缺陷严重程度：</p>
<p><code>致命Fatal</code> , <code>严重Critical</code> , <code>一般Major</code> , <code>较小Minor</code></p>
<p>缺陷优先级：</p>
<p>立即解决 <code>P1</code>、高优先级 <code>P2</code>、正常排队 <code>P3</code>、低优先级 <code>P4</code>。</p>
<p>缺陷状态：</p>
<p><code>打开open</code>、<code>修正fixed</code>、<code>重新打开reopen</code>、<code>关闭closed</code>、<code>重复Duplicate</code>、<code>推迟Deferred</code>、<code>保留On hold</code>、<code>不修复wontfix</code></p>
<h3 id="简单的软件缺陷生命周期"><a href="#简单的软件缺陷生命周期" class="headerlink" title="简单的软件缺陷生命周期"></a>简单的软件缺陷生命周期</h3><p>发现（new. -打开-修复-关闭。</p>
<h3 id="复杂的软件缺陷生命周期"><a href="#复杂的软件缺陷生命周期" class="headerlink" title="复杂的软件缺陷生命周期"></a>复杂的软件缺陷生命周期</h3><p>新建-打开-Bug审查（设计需要修改&#x2F;延期&#x2F;关闭. -关闭。</p>
<p>新建-打开-是否清楚，可再现（不能再现缺少信息返回到打开状态. -修正-关闭。</p>
<h3 id="什么是在线用户数？什么是并发用户数？"><a href="#什么是在线用户数？什么是并发用户数？" class="headerlink" title="什么是在线用户数？什么是并发用户数？"></a>什么是在线用户数？什么是并发用户数？</h3><p><strong>在线用户数：</strong></p>
<p>用户同时在一定时间段的在线数量</p>
<p><strong>并发用户数：</strong></p>
<p>某一时刻同时向服务器发送请求的用户数</p>
<p><strong>分布式软件架构分为：</strong></p>
<p>B&#x2F;S架构（浏览器、web版.  C&#x2F;S架构：客户端（先进行安装.</p>
<p><strong>测试人员的能力：</strong></p>
<p>搭建环境的能力（配置JDK、数据库、Tomcat&#x2F;Apace、程序放相应路径下、检查配置是否成功‚数据库管理和设置ƒ程序设计C++④测试方法论⑤工具的使用能力（QCQTPLRBugfree.</p>
<h3 id="简述负载测试与压力测试的区别"><a href="#简述负载测试与压力测试的区别" class="headerlink" title="简述负载测试与压力测试的区别"></a>简述负载测试与压力测试的区别</h3><h4 id="压力测试-Stress-Testing"><a href="#压力测试-Stress-Testing" class="headerlink" title="压力测试(Stress Testing)"></a>压力测试(Stress Testing)</h4><p>压力测试的主要任务就是获取系统正确运行的极限，检查系统在瞬间峰值负荷下正确执行的能力。例如，对服务器做压力测试时就可以增加并发操作的用户数量；或者不停地向服务器发送请求；或一次性向服务器发送特别大的数据等。看看服务器保持正常运行所能达到的最大状态。人们通常使用测试工具来完成压力测试，如模拟上万个用户从终端同时登录，这是压力测试中常常使用的方法。</p>
<h4 id="负载测试-Volume-Testing"><a href="#负载测试-Volume-Testing" class="headerlink" title="负载测试(Volume Testing)"></a>负载测试(Volume Testing)</h4><p>用于检查系统在使用大量数据的时候正确工作的能力，即检验系统的能力最高能达到什么程度。例如，对于信息检索系统，让它使用频率达到最大；对于多个终端的分时系统，让它所有的终端都开动。在使整个系统的全部资源达到“满负荷”的情形下，测试系统的承受能力。</p>
<h3 id="软件缺陷管理工具有哪些"><a href="#软件缺陷管理工具有哪些" class="headerlink" title="软件缺陷管理工具有哪些"></a>软件缺陷管理工具有哪些</h3><p> <code>QC</code>, &#96;&#96;ALM <code>,</code>BugFree <code>,</code>jira <code>,</code>Mantis <code>,</code>禅道&#96;</p>
<h3 id="弱网测试"><a href="#弱网测试" class="headerlink" title="弱网测试"></a>弱网测试</h3><p><code>&lt;font color=&#39;#666&#39;&gt;</code>…待更新…<code>&lt;/font&gt;</code></p>
]]></content>
      <categories>
        <category>软件测试</category>
      </categories>
      <tags>
        <tag>Linux命令</tag>
        <tag>面试题</tag>
        <tag>测试理论</tag>
        <tag>ADB命令</tag>
      </tags>
  </entry>
  <entry>
    <title>ChatGPT Web Next部署</title>
    <url>/2021/10/22/bu-shu-chatgpt/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h2 id="ChatGPT-Web-Next"><a href="#ChatGPT-Web-Next" class="headerlink" title="ChatGPT Web Next"></a>ChatGPT Web Next</h2><span id="more"></span>

<pre class="line-numbers language-none"><code class="language-none">OPENAI_API_KEY &#x3D; key
BASE_URL &#x3D; https:&#x2F;&#x2F;api.tms.im&#x2F;imitate
HIDE_BALANCE_QUERY &#x3D; 1
DISABLE_GPT4 &#x3D; 1
CODE &#x3D; fucktencent,fuckbaidu,fuckali,fucking,open<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
]]></content>
      <categories>
        <category>ChatGpt</category>
      </categories>
      <tags>
        <tag>ChatGPT</tag>
        <tag>ChatGPT Web Next</tag>
        <tag>GPT</tag>
      </tags>
  </entry>
  <entry>
    <title>记录一下经典音乐</title>
    <url>/2023/11/21/yin-le-ji-lu/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h2 id="2002"><a href="#2002" class="headerlink" title="2002"></a>2002</h2><p>小微 - 黄品源	练习 - 刘德华	蓝莲花 -许巍</p>
<p>断点 - 张敬轩	痴心绝对 - 李圣杰	你是我的眼 - 萧煌奇</p>
<p>从开始到现在 - 张信哲	无所谓 - 杨坤	拯救 - 孙楠<br>死了都要爱 - 信乐团	相信自己 - 零点乐队	永远永远 - 李翊君<br>太多 - 陈冠浦	蓝眼泪 - 陈冠浦	分手快乐 - 梁静茹<br>爱的主打歌 - 萧亚轩	当爱在靠近 - 刘若英	你的背包 - 陈奕迅<br>谢谢侬 - 陈奕迅	半岛铁盒 - 周杰伦	他一定很爱你 - 阿杜</p>
<span id="more"></span>

<p>离别 - 阿杜</p>
<h2 id="2003"><a href="#2003" class="headerlink" title="2003"></a>2003</h2><p>Super star - S.H.E	遇见 - 孙燕姿	十年 - 陈奕迅<br>算你狠 -陈小春	孤单北半球 - 欧德阳	别说我的眼泪你无所谓 - 东来东往<br>加速度 - 瞿颖	七月七日晴 - 许慧欣	在他乡 - 水木年华<br>奔跑 - 羽泉	爱情诺曼底 - 黄征	曾经最美 - 朱铭捷<br>十七岁 - 刘德华	再度重逢 - 伍佰	挥着翅膀的女孩  - 宋祖儿<br>东风破 - 周杰伦	看我七十二变 - 蔡依林	布拉格广场 - 蔡依林<br>天高地厚 - 信乐团	离歌 - 信乐团	我的麦克风 - 潘玮柏<br>春泥 - 庾澄庆	暗香 - 沙宝亮	铿锵玫瑰 - 田震<br>回心转意 - 黑龙</p>
]]></content>
  </entry>
</search>
